{"/home/travis/build/npmtest/node-npmtest-algoliasearch/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_algoliasearch */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/lib.npmtest_algoliasearch.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/lib.npmtest_algoliasearch.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_algoliasearch */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_algoliasearch = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_algoliasearch = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":71},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-algoliasearch && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_algoliasearch */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_algoliasearch","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_algoliasearch.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_algoliasearch.rollup.js'] =","            local.assetsDict['/assets.npmtest_algoliasearch.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_algoliasearch.__dirname +","                    '/lib.npmtest_algoliasearch.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}}},"branchMap":{},"code":["'use strict';","","// default entrypoint is the node module","// this is overriden by the `browser` field in package.json","// https://github.com/substack/node-browserify#browser-field","module.exports = require('./src/server/builds/node');",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/server/builds/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/server/builds/node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0},"b":{"1":[1,0],"2":[0,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"algoliasearch","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":52}}},"2":{"name":"allButHttpAgent","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":55}}},"3":{"name":"AlgoliaSearchNodeJS","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":58}}},"4":{"name":"request","line":86,"loc":{"start":{"line":86,"column":41},"end":{"line":86,"column":72}}},"5":{"name":"doReq","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":53}}},"6":{"name":"setRequestHeader","line":130,"loc":{"start":{"line":130,"column":38},"end":{"line":130,"column":76}}},"7":{"name":"response","line":157,"loc":{"start":{"line":157,"column":4},"end":{"line":157,"column":27}}},"8":{"name":"onData","line":180,"loc":{"start":{"line":180,"column":6},"end":{"line":180,"column":29}}},"9":{"name":"onEnd","line":184,"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":23}}},"10":{"name":"onCompleteTimeout","line":209,"loc":{"start":{"line":209,"column":6},"end":{"line":209,"column":35}}},"11":{"name":"error","line":217,"loc":{"start":{"line":217,"column":4},"end":{"line":217,"column":24}}},"12":{"name":"timeout","line":230,"loc":{"start":{"line":230,"column":4},"end":{"line":230,"column":23}}},"13":{"name":"abort","line":237,"loc":{"start":{"line":237,"column":4},"end":{"line":237,"column":21}}},"14":{"name":"reject","line":249,"loc":{"start":{"line":249,"column":10},"end":{"line":249,"column":31}}},"15":{"name":"resolve","line":252,"loc":{"start":{"line":252,"column":11},"end":{"line":252,"column":33}}},"16":{"name":"delayPromise","line":255,"loc":{"start":{"line":255,"column":9},"end":{"line":255,"column":35}}},"17":{"name":"resolveOnTimeout","line":256,"loc":{"start":{"line":256,"column":23},"end":{"line":256,"column":72}}},"18":{"name":"destroy","line":262,"loc":{"start":{"line":262,"column":40},"end":{"line":262,"column":59}}},"19":{"name":"generateSecuredApiKey","line":275,"loc":{"start":{"line":275,"column":54},"end":{"line":275,"column":140}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":63}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":64}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":59}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"13":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":98}},"15":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":44}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}},"18":{"start":{"line":31,"column":0},"end":{"line":69,"column":1}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":44}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":33}},"21":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":14}},"23":{"start":{"line":39,"column":2},"end":{"line":39,"column":33}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":54}},"25":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"26":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"27":{"start":{"line":47,"column":6},"end":{"line":47,"column":34}},"28":{"start":{"line":50,"column":4},"end":{"line":50,"column":24}},"29":{"start":{"line":53,"column":2},"end":{"line":53,"column":29}},"30":{"start":{"line":55,"column":2},"end":{"line":59,"column":4}},"31":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"32":{"start":{"line":62,"column":4},"end":{"line":62,"column":29}},"33":{"start":{"line":65,"column":2},"end":{"line":65,"column":42}},"34":{"start":{"line":66,"column":2},"end":{"line":66,"column":25}},"35":{"start":{"line":68,"column":2},"end":{"line":68,"column":62}},"36":{"start":{"line":71,"column":0},"end":{"line":71,"column":52}},"37":{"start":{"line":72,"column":0},"end":{"line":72,"column":66}},"38":{"start":{"line":73,"column":0},"end":{"line":73,"column":49}},"39":{"start":{"line":75,"column":0},"end":{"line":82,"column":1}},"40":{"start":{"line":76,"column":2},"end":{"line":76,"column":40}},"41":{"start":{"line":79,"column":2},"end":{"line":79,"column":45}},"42":{"start":{"line":81,"column":2},"end":{"line":81,"column":58}},"43":{"start":{"line":84,"column":0},"end":{"line":84,"column":51}},"44":{"start":{"line":86,"column":0},"end":{"line":246,"column":2}},"45":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}},"46":{"start":{"line":88,"column":2},"end":{"line":88,"column":31}},"47":{"start":{"line":89,"column":2},"end":{"line":89,"column":27}},"48":{"start":{"line":91,"column":2},"end":{"line":91,"column":20}},"49":{"start":{"line":93,"column":2},"end":{"line":245,"column":5}},"50":{"start":{"line":94,"column":4},"end":{"line":94,"column":88}},"51":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"52":{"start":{"line":98,"column":4},"end":{"line":98,"column":38}},"53":{"start":{"line":99,"column":4},"end":{"line":105,"column":6}},"54":{"start":{"line":107,"column":4},"end":{"line":107,"column":25}},"55":{"start":{"line":108,"column":4},"end":{"line":108,"column":18}},"56":{"start":{"line":109,"column":4},"end":{"line":109,"column":12}},"57":{"start":{"line":111,"column":4},"end":{"line":125,"column":5}},"58":{"start":{"line":115,"column":6},"end":{"line":117,"column":7}},"59":{"start":{"line":116,"column":8},"end":{"line":116,"column":34}},"60":{"start":{"line":118,"column":6},"end":{"line":118,"column":42}},"61":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"62":{"start":{"line":122,"column":8},"end":{"line":122,"column":33}},"63":{"start":{"line":124,"column":6},"end":{"line":124,"column":41}},"64":{"start":{"line":127,"column":4},"end":{"line":127,"column":46}},"65":{"start":{"line":128,"column":4},"end":{"line":128,"column":48}},"66":{"start":{"line":130,"column":4},"end":{"line":132,"column":7}},"67":{"start":{"line":131,"column":6},"end":{"line":131,"column":58}},"68":{"start":{"line":134,"column":4},"end":{"line":134,"column":53}},"69":{"start":{"line":138,"column":4},"end":{"line":138,"column":59}},"70":{"start":{"line":140,"column":4},"end":{"line":140,"column":29}},"71":{"start":{"line":141,"column":4},"end":{"line":141,"column":35}},"72":{"start":{"line":142,"column":4},"end":{"line":153,"column":5}},"73":{"start":{"line":143,"column":6},"end":{"line":143,"column":56}},"74":{"start":{"line":144,"column":6},"end":{"line":144,"column":71}},"75":{"start":{"line":145,"column":6},"end":{"line":145,"column":22}},"76":{"start":{"line":146,"column":11},"end":{"line":153,"column":5}},"77":{"start":{"line":152,"column":6},"end":{"line":152,"column":41}},"78":{"start":{"line":155,"column":4},"end":{"line":155,"column":14}},"79":{"start":{"line":157,"column":4},"end":{"line":215,"column":5}},"80":{"start":{"line":158,"column":6},"end":{"line":158,"column":30}},"81":{"start":{"line":159,"column":6},"end":{"line":159,"column":72}},"82":{"start":{"line":160,"column":6},"end":{"line":160,"column":22}},"83":{"start":{"line":161,"column":6},"end":{"line":161,"column":28}},"84":{"start":{"line":165,"column":6},"end":{"line":165,"column":32}},"85":{"start":{"line":166,"column":6},"end":{"line":166,"column":38}},"86":{"start":{"line":171,"column":6},"end":{"line":174,"column":7}},"87":{"start":{"line":173,"column":8},"end":{"line":173,"column":43}},"88":{"start":{"line":176,"column":6},"end":{"line":178,"column":28}},"89":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"90":{"start":{"line":181,"column":8},"end":{"line":181,"column":27}},"91":{"start":{"line":184,"column":6},"end":{"line":207,"column":7}},"92":{"start":{"line":185,"column":8},"end":{"line":185,"column":32}},"93":{"start":{"line":187,"column":8},"end":{"line":187,"column":52}},"94":{"start":{"line":188,"column":8},"end":{"line":188,"column":16}},"95":{"start":{"line":190,"column":8},"end":{"line":200,"column":9}},"96":{"start":{"line":191,"column":10},"end":{"line":195,"column":12}},"97":{"start":{"line":197,"column":10},"end":{"line":199,"column":13}},"98":{"start":{"line":202,"column":8},"end":{"line":206,"column":9}},"99":{"start":{"line":203,"column":10},"end":{"line":203,"column":22}},"100":{"start":{"line":205,"column":10},"end":{"line":205,"column":23}},"101":{"start":{"line":209,"column":6},"end":{"line":214,"column":7}},"102":{"start":{"line":210,"column":8},"end":{"line":210,"column":43}},"103":{"start":{"line":211,"column":8},"end":{"line":211,"column":41}},"104":{"start":{"line":212,"column":8},"end":{"line":212,"column":30}},"105":{"start":{"line":213,"column":8},"end":{"line":213,"column":18}},"106":{"start":{"line":217,"column":4},"end":{"line":228,"column":5}},"107":{"start":{"line":218,"column":6},"end":{"line":218,"column":49}},"108":{"start":{"line":220,"column":6},"end":{"line":223,"column":7}},"109":{"start":{"line":221,"column":8},"end":{"line":221,"column":51}},"110":{"start":{"line":222,"column":8},"end":{"line":222,"column":15}},"111":{"start":{"line":225,"column":6},"end":{"line":225,"column":14}},"112":{"start":{"line":226,"column":6},"end":{"line":226,"column":30}},"113":{"start":{"line":227,"column":6},"end":{"line":227,"column":51}},"114":{"start":{"line":230,"column":4},"end":{"line":235,"column":5}},"115":{"start":{"line":231,"column":6},"end":{"line":231,"column":22}},"116":{"start":{"line":232,"column":6},"end":{"line":232,"column":39}},"117":{"start":{"line":233,"column":6},"end":{"line":233,"column":14}},"118":{"start":{"line":234,"column":6},"end":{"line":234,"column":42}},"119":{"start":{"line":237,"column":4},"end":{"line":244,"column":5}},"120":{"start":{"line":238,"column":6},"end":{"line":240,"column":7}},"121":{"start":{"line":239,"column":8},"end":{"line":239,"column":36}},"122":{"start":{"line":242,"column":6},"end":{"line":242,"column":47}},"123":{"start":{"line":243,"column":6},"end":{"line":243,"column":18}},"124":{"start":{"line":248,"column":0},"end":{"line":260,"column":2}},"125":{"start":{"line":250,"column":4},"end":{"line":250,"column":31}},"126":{"start":{"line":253,"column":4},"end":{"line":253,"column":32}},"127":{"start":{"line":256,"column":4},"end":{"line":258,"column":7}},"128":{"start":{"line":257,"column":6},"end":{"line":257,"column":30}},"129":{"start":{"line":262,"column":0},"end":{"line":266,"column":2}},"130":{"start":{"line":263,"column":2},"end":{"line":265,"column":3}},"131":{"start":{"line":264,"column":4},"end":{"line":264,"column":26}},"132":{"start":{"line":275,"column":0},"end":{"line":313,"column":2}},"133":{"start":{"line":276,"column":2},"end":{"line":276,"column":19}},"134":{"start":{"line":278,"column":2},"end":{"line":305,"column":3}},"135":{"start":{"line":281,"column":4},"end":{"line":283,"column":6}},"136":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"137":{"start":{"line":286,"column":6},"end":{"line":286,"column":41}},"138":{"start":{"line":289,"column":4},"end":{"line":289,"column":59}},"139":{"start":{"line":290,"column":9},"end":{"line":305,"column":3}},"140":{"start":{"line":291,"column":4},"end":{"line":297,"column":5}},"141":{"start":{"line":293,"column":6},"end":{"line":293,"column":65}},"142":{"start":{"line":296,"column":6},"end":{"line":296,"column":49}},"143":{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},"144":{"start":{"line":301,"column":6},"end":{"line":301,"column":68}},"145":{"start":{"line":304,"column":4},"end":{"line":304,"column":74}},"146":{"start":{"line":307,"column":2},"end":{"line":310,"column":19}},"147":{"start":{"line":312,"column":2},"end":{"line":312,"column":66}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":14},"end":{"line":11,"column":28}},{"start":{"line":11,"column":32},"end":{"line":11,"column":62}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":0},"end":{"line":21,"column":0}},{"start":{"line":21,"column":0},"end":{"line":21,"column":0}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":0},"end":{"line":25,"column":0}},{"start":{"line":25,"column":0},"end":{"line":25,"column":0}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":18},"end":{"line":55,"column":31}},{"start":{"line":55,"column":35},"end":{"line":59,"column":3}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"8":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":13},"end":{"line":65,"column":21}},{"start":{"line":65,"column":25},"end":{"line":65,"column":41}}]},"9":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":16},"end":{"line":81,"column":30}},{"start":{"line":81,"column":34},"end":{"line":81,"column":57}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"12":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"13":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"14":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":11},"end":{"line":146,"column":11}},{"start":{"line":146,"column":11},"end":{"line":146,"column":11}}]},"15":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"16":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":48}},{"start":{"line":172,"column":10},"end":{"line":172,"column":51}}]},"17":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"18":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"19":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":6}},{"start":{"line":238,"column":6},"end":{"line":238,"column":6}}]},"20":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":19}},{"start":{"line":238,"column":23},"end":{"line":238,"column":33}},{"start":{"line":238,"column":37},"end":{"line":238,"column":54}}]},"21":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"22":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"23":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"24":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":9},"end":{"line":290,"column":9}},{"start":{"line":290,"column":9},"end":{"line":290,"column":9}}]},"25":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"26":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]}},"code":["'use strict';","","// This is the Node.JS entry point","module.exports = algoliasearch;","","var debug = require('debug')('algoliasearch:nodejs');","var crypto = require('crypto');","var zlib = require('zlib');","","var inherits = require('inherits');","var Promise = global.Promise || require('es6-promise').Promise;","var semver = require('semver');","var isNotSupported = semver.satisfies(process.version, '<0.10');","var isNode010 = semver.satisfies(process.version, '=0.10');","var places = require('../../places.js');","","var AlgoliaSearchServer = require('./AlgoliaSearchServer');","var errors = require('../../errors');","","// does not work on node <= 0.8","if (isNotSupported) {","  throw new errors.AlgoliaSearchError('Node.js version ' + process.version + ' is not supported');","}","","if (process.env.NODE_ENV === 'debug') {","  require('debug').enable('algoliasearch*');","}","","debug('loaded the Node.js client');","","function algoliasearch(applicationID, apiKey, opts) {","  var cloneDeep = require('../../clone.js');","  var reduce = require('reduce');","","  if (!opts) {","    opts = {};","  }","","  var httpAgent = opts.httpAgent;","","  opts = cloneDeep(reduce(opts, allButHttpAgent, {}));","","  // as an httpAgent is an object with methods etc, we take a reference to","  // it rather than cloning it like other values","  function allButHttpAgent(filteredOpts, val, keyName) {","    if (keyName !== 'httpAgent') {","      filteredOpts[keyName] = val;","    }","","    return filteredOpts;","  }","","  opts.httpAgent = httpAgent;","","  opts.timeouts = opts.timeouts || {","    connect: 2 * 1000,","    read: 5 * 1000,","    write: 30 * 1000","  };","","  if (opts.protocol === undefined) {","    opts.protocol = 'https:';","  }","","  opts._ua = opts._ua || algoliasearch.ua;","  opts._useCache = false;","","  return new AlgoliaSearchNodeJS(applicationID, apiKey, opts);","}","","algoliasearch.version = require('../../version.js');","algoliasearch.ua = 'Algolia for Node.js ' + algoliasearch.version;","algoliasearch.initPlaces = places(algoliasearch);","","function AlgoliaSearchNodeJS(applicationID, apiKey, opts) {","  var getAgent = require('./get-agent');","","  // call AlgoliaSearchServer constructor","  AlgoliaSearchServer.apply(this, arguments);","","  this._Agent = opts.httpAgent || getAgent(opts.protocol);","}","","inherits(AlgoliaSearchNodeJS, AlgoliaSearchServer);","","AlgoliaSearchNodeJS.prototype._request = function request(rawUrl, opts) {","  var http = require('http');","  var https = require('https');","  var url = require('url');","","  var client = this;","","  return new Promise(function doReq(resolve, reject) {","    opts.debug('url: %s, method: %s, timeouts: %j', rawUrl, opts.method, opts.timeouts);","","    var body = opts.body;","","    var parsedUrl = url.parse(rawUrl);","    var requestOptions = {","      hostname: parsedUrl.hostname,","      port: parsedUrl.port,","      method: opts.method,","      path: parsedUrl.path,","      agent: client._Agent","    };","","    var timedOut = false;","    var timeoutId;","    var req;","","    if (parsedUrl.protocol === 'https:') {","      // we do not rely on any \"smart\" port computing by either node.js","      // or a custom http agent, because:","      // https://github.com/TooTallNate/node-https-proxy-agent/issues/7#issuecomment-119539690","      if (requestOptions.port === null) {","        requestOptions.port = 443;","      }","      req = https.request(requestOptions);","    } else {","      // same reason to set the port as `https:`","      if (requestOptions.port === null) {","        requestOptions.port = 80;","      }","      req = http.request(requestOptions);","    }","","    req.setHeader('connection', 'keep-alive');","    req.setHeader('accept', 'application/json');","","    Object.keys(opts.headers).forEach(function setRequestHeader(headerName) {","      req.setHeader(headerName, opts.headers[headerName]);","    });","","    req.setHeader('accept-encoding', 'gzip,deflate');","","    // we do not use req.setTimeout because it's either an inactivity timeout","    // or a global timeout given the nodejs version","    timeoutId = setTimeout(timeout, opts.timeouts.connect);","","    req.once('error', error);","    req.once('response', response);","    if (body) {","      req.setHeader('content-type', 'application/json');","      req.setHeader('content-length', Buffer.byteLength(body, 'utf8'));","      req.write(body);","    } else if (req.method === 'DELETE') {","      // Node.js was setting transfer-encoding: chunked on all DELETE requests","      // which is not good since there's no body to be sent, resulting in nginx","      // sending 400 on socket reuse (waiting for previous socket data)","      // https://github.com/nodejs/node-v0.x-archive/issues/6164","      // https://github.com/nodejs/node-v0.x-archive/commit/aef0960","      req.setHeader('content-length', 0);","    }","","    req.end();","","    function response(res) {","      clearTimeout(timeoutId);","      timeoutId = setTimeout(onCompleteTimeout, opts.timeouts.complete);","      var chunks = [];","      var originalRes = res;","","      // save headers and statusCode BEFORE treating the response as zlib, otherwise","      // we lose them","      var headers = res.headers;","      var statusCode = res.statusCode;","","      // Algolia answers should be gzip when asked for it,","      // but a proxy might uncompress Algolia response","      // So we handle both compressed and uncompressed","      if (headers['content-encoding'] === 'gzip' ||","          headers['content-encoding'] === 'deflate') {","        res = res.pipe(zlib.createUnzip());","      }","","      res","        .on('data', onData)","        .once('end', onEnd);","","      function onData(chunk) {","        chunks.push(chunk);","      }","","      function onEnd() {","        clearTimeout(timeoutId);","","        var data = Buffer.concat(chunks).toString();","        var out;","","        try {","          out = {","            body: JSON.parse(data),","            statusCode: statusCode,","            headers: headers","          };","        } catch (e) {","          out = new errors.UnparsableJSON({","            more: data","          });","        }","","        if (out instanceof errors.UnparsableJSON) {","          reject(out);","        } else {","          resolve(out);","        }","      }","","      function onCompleteTimeout() {","        res.removeListener('data', onData);","        res.removeListener('end', onEnd);","        originalRes.destroy();","        timeout();","      }","    }","","    function error(err) {","      opts.debug('error: %j  - %s', err, rawUrl);","","      if (timedOut) {","        opts.debug('request had already timedout');","        return;","      }","","      abort();","      clearTimeout(timeoutId);","      reject(new errors.Network(err.message, err));","    }","","    function timeout() {","      timedOut = true;","      opts.debug('timeout %s', rawUrl);","      abort();","      reject(new errors.RequestTimeout());","    }","","    function abort() {","      if (isNode010 && req.socket && req.socket.socket) {","        req.socket.socket.destroy();","      }","","      req.removeListener('response', response);","      req.abort();","    }","  });","};","","AlgoliaSearchNodeJS.prototype._promise = {","  reject: function reject(val) {","    return Promise.reject(val);","  },","  resolve: function resolve(val) {","    return Promise.resolve(val);","  },","  delay: function delayPromise(ms) {","    return new Promise(function resolveOnTimeout(resolve/* , reject */) {","      setTimeout(resolve, ms);","    });","  }","};","","AlgoliaSearchNodeJS.prototype.destroy = function destroy() {","  if (typeof this._Agent.destroy === 'function') {","    this._Agent.destroy();","  }","};","","/*"," * Generate a secured and public API Key from an apiKey and queryParameters"," * optional user token identifying the current user"," *"," * @param apiKey - The api key to encode as secure"," * @param {Object} [queryParameters] - Any search query parameter"," */","AlgoliaSearchNodeJS.prototype.generateSecuredApiKey = function generateSecuredApiKey(privateApiKey, queryParametersOrTagFilters, userToken) {","  var searchParams;","","  if (Array.isArray(queryParametersOrTagFilters)) {","    // generateSecuredApiKey(apiKey, ['user_42'], userToken);","","    searchParams = {","      tagFilters: queryParametersOrTagFilters","    };","","    if (userToken) {","      searchParams.userToken = userToken;","    }","","    searchParams = this._getSearchParams(searchParams, '');","  } else if (typeof queryParametersOrTagFilters === 'string') {","    if (queryParametersOrTagFilters.indexOf('=') === -1) {","      // generateSecuredApiKey(apiKey, 'user_42', userToken);","      searchParams = 'tagFilters=' + queryParametersOrTagFilters;","    } else {","      // generateSecuredApiKey(apiKey, 'tagFilters=user_42', userToken);","      searchParams = queryParametersOrTagFilters;","    }","","","    if (userToken) {","      searchParams += '&userToken=' + encodeURIComponent(userToken);","    }","  } else {","    searchParams = this._getSearchParams(queryParametersOrTagFilters, '');","  }","","  var securedKey = crypto","    .createHmac('sha256', privateApiKey)","    .update(searchParams)","    .digest('hex');","","  return new Buffer(securedKey + searchParams).toString('base64');","};",""],"l":{"4":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"18":1,"21":1,"22":0,"25":1,"26":0,"29":1,"31":1,"32":0,"33":0,"35":0,"36":0,"39":0,"41":0,"45":1,"46":0,"47":0,"50":0,"53":0,"55":0,"61":0,"62":0,"65":0,"66":0,"68":0,"71":1,"72":1,"73":1,"75":1,"76":0,"79":0,"81":0,"84":1,"86":1,"87":0,"88":0,"89":0,"91":0,"93":0,"94":0,"96":0,"98":0,"99":0,"107":0,"108":0,"109":0,"111":0,"115":0,"116":0,"118":0,"121":0,"122":0,"124":0,"127":0,"128":0,"130":0,"131":0,"134":0,"138":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"152":0,"155":0,"157":1,"158":0,"159":0,"160":0,"161":0,"165":0,"166":0,"171":0,"173":0,"176":0,"180":1,"181":0,"184":1,"185":0,"187":0,"188":0,"190":0,"191":0,"197":0,"202":0,"203":0,"205":0,"209":1,"210":0,"211":0,"212":0,"213":0,"217":1,"218":0,"220":0,"221":0,"222":0,"225":0,"226":0,"227":0,"230":1,"231":0,"232":0,"233":0,"234":0,"237":1,"238":0,"239":0,"242":0,"243":0,"248":1,"250":0,"253":0,"256":0,"257":0,"262":1,"263":0,"264":0,"275":1,"276":0,"278":0,"281":0,"285":0,"286":0,"289":0,"290":0,"291":0,"293":0,"296":0,"300":0,"301":0,"304":0,"307":0,"312":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/places.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/places.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"createPlacesClient","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}}},"2":{"name":"places","line":6,"loc":{"start":{"line":6,"column":9},"end":{"line":6,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"3":{"start":{"line":5,"column":0},"end":{"line":29,"column":1}},"4":{"start":{"line":6,"column":2},"end":{"line":28,"column":4}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":4},"end":{"line":15,"column":6}},"8":{"start":{"line":18,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":19,"column":6},"end":{"line":19,"column":17}},"10":{"start":{"line":20,"column":6},"end":{"line":20,"column":18}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":41}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":52}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":43}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":65}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":17}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":11},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":34}},{"start":{"line":9,"column":38},"end":{"line":9,"column":40}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":17},"end":{"line":10,"column":27}},{"start":{"line":10,"column":31},"end":{"line":15,"column":5}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"4":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":30}},{"start":{"line":18,"column":34},"end":{"line":18,"column":59}},{"start":{"line":18,"column":63},"end":{"line":18,"column":82}}]}},"code":["module.exports = createPlacesClient;","","var buildSearchMethod = require('./buildSearchMethod.js');","","function createPlacesClient(algoliasearch) {","  return function places(appID, apiKey, opts) {","    var cloneDeep = require('./clone.js');","","    opts = opts && cloneDeep(opts) || {};","    opts.hosts = opts.hosts || [","      'places-dsn.algolia.net',","      'places-1.algolianet.com',","      'places-2.algolianet.com',","      'places-3.algolianet.com'","    ];","","    // allow initPlaces() no arguments => community rate limited","    if (arguments.length === 0 || typeof appID === 'object' || appID === undefined) {","      appID = '';","      apiKey = '';","      opts._allowEmptyCredentials = true;","    }","","    var client = algoliasearch(appID, apiKey, opts);","    var index = client.initIndex('places');","    index.search = buildSearchMethod('query', '/1/places/query');","    return index;","  };","}",""],"l":{"1":1,"3":1,"5":1,"6":1,"7":0,"9":0,"10":0,"18":0,"19":0,"20":0,"21":0,"24":0,"25":0,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/buildSearchMethod.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/buildSearchMethod.js","s":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"buildSearchMethod","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}}},"2":{"name":"search","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"3":{"start":{"line":11,"column":0},"end":{"line":67,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":66,"column":4}},"5":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":99}},"7":{"start":{"line":29,"column":4},"end":{"line":37,"column":5}},"8":{"start":{"line":31,"column":6},"end":{"line":31,"column":23}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":17}},"10":{"start":{"line":33,"column":11},"end":{"line":37,"column":5}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":22}},"12":{"start":{"line":36,"column":6},"end":{"line":36,"column":23}},"13":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"14":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"15":{"start":{"line":43,"column":6},"end":{"line":43,"column":24}},"16":{"start":{"line":44,"column":11},"end":{"line":46,"column":5}},"17":{"start":{"line":45,"column":6},"end":{"line":45,"column":17}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":20}},"19":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":61}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":21}},"22":{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},"23":{"start":{"line":56,"column":6},"end":{"line":59,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":41}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":33}},"26":{"start":{"line":61,"column":6},"end":{"line":61,"column":54}},"27":{"start":{"line":65,"column":4},"end":{"line":65,"column":61}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},{"start":{"line":21,"column":39},"end":{"line":21,"column":63}},{"start":{"line":22,"column":6},"end":{"line":22,"column":34}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":61}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"6":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":15},"end":{"line":33,"column":37}},{"start":{"line":33,"column":41},"end":{"line":33,"column":67}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"8":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},{"start":{"line":41,"column":37},"end":{"line":41,"column":51}}]},"9":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":11},"end":{"line":44,"column":11}},{"start":{"line":44,"column":11},"end":{"line":44,"column":11}}]},"10":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":15},"end":{"line":44,"column":34}},{"start":{"line":44,"column":38},"end":{"line":44,"column":52}}]},"11":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"12":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"13":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]}},"code":["module.exports = buildSearchMethod;","","var errors = require('./errors.js');","","/**"," * Creates a search method to be used in clients"," * @param {string} queryParam the name of the attribute used for the query"," * @param {string} url the url"," * @return {function} the search method"," */","function buildSearchMethod(queryParam, url) {","  /**","   * The search method. Prepares the data and send the query to Algolia.","   * @param {string} query the string used for query search","   * @param {object} args additional parameters to send with the search","   * @param {function} [callback] the callback to be called with the client gets the answer","   * @return {undefined|Promise} If the callback is not provided then this methods returns a Promise","   */","  return function search(query, args, callback) {","    // warn V2 users on how to search","    if (typeof query === 'function' && typeof args === 'object' ||","      typeof callback === 'object') {","      // .search(query, params, cb)","      // .search(cb, params)","      throw new errors.AlgoliaSearchError('index.search usage is index.search(query, params, cb)');","    }","","    // Normalizing the function signature","    if (arguments.length === 0 || typeof query === 'function') {","      // Usage : .search(), .search(cb)","      callback = query;","      query = '';","    } else if (arguments.length === 1 || typeof args === 'function') {","      // Usage : .search(query/args), .search(query, cb)","      callback = args;","      args = undefined;","    }","    // At this point we have 3 arguments with values","","    // Usage : .search(args) // careful: typeof null === 'object'","    if (typeof query === 'object' && query !== null) {","      args = query;","      query = undefined;","    } else if (query === undefined || query === null) { // .search(undefined/null)","      query = '';","    }","","    var params = '';","","    if (query !== undefined) {","      params += queryParam + '=' + encodeURIComponent(query);","    }","","    var additionalUA;","    if (args !== undefined) {","      if (args.additionalUA) {","        additionalUA = args.additionalUA;","        delete args.additionalUA;","      }","      // `_getSearchParams` will augment params, do not be fooled by the = versus += from previous if","      params = this.as._getSearchParams(args, params);","    }","","","    return this._search(params, url, callback, additionalUA);","  };","}",""],"l":{"1":1,"3":1,"11":1,"19":2,"21":0,"25":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/errors.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":6,"22":6,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":6,"4":0},"fnMap":{"1":{"name":"AlgoliaSearchError","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}}},"2":{"name":"addToErrorObject","line":25,"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":67}}},"3":{"name":"createCustomError","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}}},"4":{"name":"AlgoliaSearchCustomError","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":9,"column":0},"end":{"line":29,"column":1}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":35}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}},"5":{"start":{"line":15,"column":2},"end":{"line":19,"column":3}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":52}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":87}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":44}},"10":{"start":{"line":24,"column":2},"end":{"line":28,"column":3}},"11":{"start":{"line":25,"column":4},"end":{"line":27,"column":7}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":25}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}},"14":{"start":{"line":33,"column":0},"end":{"line":49,"column":1}},"15":{"start":{"line":34,"column":2},"end":{"line":44,"column":3}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":56}},"17":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"18":{"start":{"line":39,"column":6},"end":{"line":39,"column":28}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":49}},"21":{"start":{"line":46,"column":2},"end":{"line":46,"column":57}},"22":{"start":{"line":48,"column":2},"end":{"line":48,"column":34}},"23":{"start":{"line":52,"column":0},"end":{"line":78,"column":2}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":18},"end":{"line":18,"column":37}},{"start":{"line":18,"column":41},"end":{"line":18,"column":86}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":17},"end":{"line":22,"column":24}},{"start":{"line":22,"column":28},"end":{"line":22,"column":43}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]}},"code":["'use strict';","","// This file hosts our error definitions","// We use custom error \"types\" so that we can act on them when we need it","// e.g.: if error instanceof errors.UnparsableJSON then..","","var inherits = require('inherits');","","function AlgoliaSearchError(message, extraProperties) {","  var forEach = require('foreach');","","  var error = this;","","  // try to get a stacktrace","  if (typeof Error.captureStackTrace === 'function') {","    Error.captureStackTrace(this, this.constructor);","  } else {","    error.stack = (new Error()).stack || 'Cannot get a stacktrace, browser is too old';","  }","","  this.name = 'AlgoliaSearchError';","  this.message = message || 'Unknown error';","","  if (extraProperties) {","    forEach(extraProperties, function addToErrorObject(value, key) {","      error[key] = value;","    });","  }","}","","inherits(AlgoliaSearchError, Error);","","function createCustomError(name, message) {","  function AlgoliaSearchCustomError() {","    var args = Array.prototype.slice.call(arguments, 0);","","    // custom message not set, use default","    if (typeof args[0] !== 'string') {","      args.unshift(message);","    }","","    AlgoliaSearchError.apply(this, args);","    this.name = 'AlgoliaSearch' + name + 'Error';","  }","","  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);","","  return AlgoliaSearchCustomError;","}","","// late exports to let various fn defs and inherits take place","module.exports = {","  AlgoliaSearchError: AlgoliaSearchError,","  UnparsableJSON: createCustomError(","    'UnparsableJSON',","    'Could not parse the incoming response as JSON, see err.more for details'","  ),","  RequestTimeout: createCustomError(","    'RequestTimeout',","    'Request timedout before getting a response'","  ),","  Network: createCustomError(","    'Network',","    'Network issue, see err.more for details'","  ),","  JSONPScriptFail: createCustomError(","    'JSONPScriptFail',","    '<script> was loaded but did not call our provided callback'","  ),","  JSONPScriptError: createCustomError(","    'JSONPScriptError',","    '<script> unable to load due to an `error` event on it'","  ),","  Unknown: createCustomError(","    'Unknown',","    'Unknown error occured'","  )","};",""],"l":{"7":1,"9":1,"10":0,"12":0,"15":0,"16":0,"18":0,"21":0,"22":0,"24":0,"25":0,"26":0,"31":1,"33":1,"34":1,"35":0,"38":0,"39":0,"42":0,"43":0,"46":6,"48":6,"52":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/server/builds/AlgoliaSearchServer.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/server/builds/AlgoliaSearchServer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"AlgoliaSearchServer","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":58}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":55},"end":{"line":29,"column":105}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":56},"end":{"line":40,"column":67}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":49},"end":{"line":47,"column":98}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":53},"end":{"line":58,"column":64}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":55},"end":{"line":62,"column":78}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":29}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":39}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}},"9":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":34,"column":4}},"11":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":23}},"13":{"start":{"line":47,"column":0},"end":{"line":53,"column":2}},"14":{"start":{"line":48,"column":2},"end":{"line":52,"column":4}},"15":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"16":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"17":{"start":{"line":62,"column":0},"end":{"line":78,"column":2}},"18":{"start":{"line":63,"column":2},"end":{"line":63,"column":101}},"19":{"start":{"line":65,"column":2},"end":{"line":69,"column":3}},"20":{"start":{"line":66,"column":4},"end":{"line":66,"column":61}},"21":{"start":{"line":67,"column":4},"end":{"line":67,"column":57}},"22":{"start":{"line":68,"column":4},"end":{"line":68,"column":67}},"23":{"start":{"line":71,"column":2},"end":{"line":75,"column":3}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":55}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":64}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":60}},"27":{"start":{"line":77,"column":2},"end":{"line":77,"column":17}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["'use strict';","","// Some methods only accessible server side","","module.exports = AlgoliaSearchServer;","","var inherits = require('inherits');","","var AlgoliaSearch = require('../../AlgoliaSearch');","","function AlgoliaSearchServer(applicationID, apiKey, opts) {","  // Default protocol is https: on the server, to avoid leaking admin keys","  if (opts.protocol === undefined) {","    opts.protocol = 'https:';","  }","","  AlgoliaSearch.apply(this, arguments);","}","","inherits(AlgoliaSearchServer, AlgoliaSearch);","","/*"," * Allow to use IP rate limit when you have a proxy between end-user and Algolia."," * This option will set the X-Forwarded-For HTTP header with the client IP and the X-Forwarded-API-Key with the API Key having rate limits."," * @param adminAPIKey the admin API Key you can find in your dashboard"," * @param endUserIP the end user IP (you can use both IPV4 or IPV6 syntax)"," * @param rateLimitAPIKey the API key on which you have a rate limit"," */","AlgoliaSearchServer.prototype.enableRateLimitForward = function(adminAPIKey, endUserIP, rateLimitAPIKey) {","  this._forward = {","    adminAPIKey: adminAPIKey,","    endUserIP: endUserIP,","    rateLimitAPIKey: rateLimitAPIKey","  };","};","","/*"," * Disable IP rate limit enabled with enableRateLimitForward() function"," */","AlgoliaSearchServer.prototype.disableRateLimitForward = function() {","  this._forward = null;","};","","/*"," * Specify the securedAPIKey to use with associated information"," */","AlgoliaSearchServer.prototype.useSecuredAPIKey = function(securedAPIKey, securityTags, userToken) {","  this._secure = {","    apiKey: securedAPIKey,","    securityTags: securityTags,","    userToken: userToken","  };","};","","/*"," * If a secured API was used, disable it"," */","AlgoliaSearchServer.prototype.disableSecuredAPIKey = function() {","  this._secure = null;","};","","AlgoliaSearchServer.prototype._computeRequestHeaders = function(additionalUA) {","  var headers = AlgoliaSearchServer.super_.prototype._computeRequestHeaders.call(this, additionalUA);","","  if (this._forward) {","    headers['x-algolia-api-key'] = this._forward.adminAPIKey;","    headers['x-forwarded-for'] = this._forward.endUserIP;","    headers['x-forwarded-api-key'] = this._forward.rateLimitAPIKey;","  }","","  if (this._secure) {","    headers['x-algolia-api-key'] = this._secure.apiKey;","    headers['x-algolia-tagfilters'] = this._secure.securityTags;","    headers['x-algolia-usertoken'] = this._secure.userToken;","  }","","  return headers;","};",""],"l":{"5":1,"7":1,"9":1,"11":1,"13":0,"14":0,"17":0,"20":1,"29":1,"30":0,"40":1,"41":0,"47":1,"48":0,"58":1,"59":0,"62":1,"63":0,"65":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"74":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/AlgoliaSearch.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/AlgoliaSearch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":1,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":0,"121":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"AlgoliaSearch","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":38},"end":{"line":24,"column":68}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":36},"end":{"line":42,"column":83}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":36},"end":{"line":64,"column":83}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":34},"end":{"line":88,"column":69}}},"6":{"name":"(anonymous_6)","line":127,"loc":{"start":{"line":127,"column":38},"end":{"line":127,"column":63}}},"7":{"name":"(anonymous_7)","line":150,"loc":{"start":{"line":150,"column":36},"end":{"line":150,"column":56}}},"8":{"name":"(anonymous_8)","line":157,"loc":{"start":{"line":157,"column":49},"end":{"line":157,"column":68}}},"9":{"name":"(anonymous_9)","line":168,"loc":{"start":{"line":168,"column":38},"end":{"line":168,"column":57}}},"10":{"name":"(anonymous_10)","line":180,"loc":{"start":{"line":180,"column":50},"end":{"line":180,"column":74}}},"11":{"name":"(anonymous_11)","line":192,"loc":{"start":{"line":192,"column":36},"end":{"line":192,"column":60}}},"12":{"name":"(anonymous_12)","line":204,"loc":{"start":{"line":204,"column":50},"end":{"line":204,"column":74}}},"13":{"name":"(anonymous_13)","line":215,"loc":{"start":{"line":215,"column":39},"end":{"line":215,"column":63}}},"14":{"name":"(anonymous_14)","line":227,"loc":{"start":{"line":227,"column":47},"end":{"line":227,"column":80}}},"15":{"name":"(anonymous_15)","line":268,"loc":{"start":{"line":268,"column":36},"end":{"line":268,"column":69}}},"16":{"name":"(anonymous_16)","line":311,"loc":{"start":{"line":311,"column":59},"end":{"line":311,"column":92}}},"17":{"name":"(anonymous_17)","line":318,"loc":{"start":{"line":318,"column":50},"end":{"line":318,"column":88}}},"18":{"name":"(anonymous_18)","line":359,"loc":{"start":{"line":359,"column":39},"end":{"line":359,"column":77}}},"19":{"name":"startQueriesBatchDeprecated","line":403,"loc":{"start":{"line":403,"column":54},"end":{"line":403,"column":93}}},"20":{"name":"addQueryInBatchDeprecated","line":411,"loc":{"start":{"line":411,"column":52},"end":{"line":411,"column":111}}},"21":{"name":"sendQueriesBatchDeprecated","line":423,"loc":{"start":{"line":423,"column":53},"end":{"line":423,"column":99}}},"22":{"name":"(anonymous_22)","line":460,"loc":{"start":{"line":460,"column":32},"end":{"line":460,"column":63}}},"23":{"name":"notImplemented","line":487,"loc":{"start":{"line":487,"column":0},"end":{"line":487,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"8":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":43}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":31,"column":2}},"12":{"start":{"line":25,"column":2},"end":{"line":30,"column":5}},"13":{"start":{"line":42,"column":0},"end":{"line":53,"column":2}},"14":{"start":{"line":43,"column":2},"end":{"line":45,"column":4}},"15":{"start":{"line":46,"column":2},"end":{"line":52,"column":5}},"16":{"start":{"line":64,"column":0},"end":{"line":75,"column":2}},"17":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"18":{"start":{"line":68,"column":2},"end":{"line":74,"column":5}},"19":{"start":{"line":88,"column":0},"end":{"line":117,"column":2}},"20":{"start":{"line":89,"column":2},"end":{"line":89,"column":36}},"21":{"start":{"line":90,"column":2},"end":{"line":90,"column":18}},"22":{"start":{"line":91,"column":2},"end":{"line":106,"column":3}},"23":{"start":{"line":93,"column":4},"end":{"line":93,"column":27}},"24":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"25":{"start":{"line":95,"column":9},"end":{"line":106,"column":3}},"26":{"start":{"line":97,"column":4},"end":{"line":97,"column":22}},"27":{"start":{"line":98,"column":9},"end":{"line":106,"column":3}},"28":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}},"29":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}},"30":{"start":{"line":104,"column":4},"end":{"line":104,"column":27}},"31":{"start":{"line":105,"column":4},"end":{"line":105,"column":27}},"32":{"start":{"line":108,"column":2},"end":{"line":108,"column":53}},"33":{"start":{"line":108,"column":35},"end":{"line":108,"column":53}},"34":{"start":{"line":109,"column":2},"end":{"line":109,"column":54}},"35":{"start":{"line":109,"column":35},"end":{"line":109,"column":54}},"36":{"start":{"line":111,"column":2},"end":{"line":116,"column":5}},"37":{"start":{"line":127,"column":0},"end":{"line":142,"column":2}},"38":{"start":{"line":128,"column":2},"end":{"line":128,"column":18}},"39":{"start":{"line":130,"column":2},"end":{"line":134,"column":3}},"40":{"start":{"line":131,"column":4},"end":{"line":131,"column":20}},"41":{"start":{"line":133,"column":4},"end":{"line":133,"column":29}},"42":{"start":{"line":136,"column":2},"end":{"line":141,"column":5}},"43":{"start":{"line":150,"column":0},"end":{"line":152,"column":2}},"44":{"start":{"line":151,"column":2},"end":{"line":151,"column":36}},"45":{"start":{"line":157,"column":0},"end":{"line":159,"column":71}},"46":{"start":{"line":158,"column":2},"end":{"line":158,"column":36}},"47":{"start":{"line":168,"column":0},"end":{"line":175,"column":2}},"48":{"start":{"line":169,"column":2},"end":{"line":174,"column":5}},"49":{"start":{"line":180,"column":0},"end":{"line":182,"column":70}},"50":{"start":{"line":181,"column":2},"end":{"line":181,"column":39}},"51":{"start":{"line":192,"column":0},"end":{"line":199,"column":2}},"52":{"start":{"line":193,"column":2},"end":{"line":198,"column":5}},"53":{"start":{"line":204,"column":0},"end":{"line":206,"column":73}},"54":{"start":{"line":205,"column":2},"end":{"line":205,"column":42}},"55":{"start":{"line":215,"column":0},"end":{"line":222,"column":2}},"56":{"start":{"line":216,"column":2},"end":{"line":221,"column":5}},"57":{"start":{"line":227,"column":0},"end":{"line":229,"column":67}},"58":{"start":{"line":228,"column":2},"end":{"line":228,"column":48}},"59":{"start":{"line":268,"column":0},"end":{"line":306,"column":2}},"60":{"start":{"line":269,"column":2},"end":{"line":269,"column":35}},"61":{"start":{"line":270,"column":2},"end":{"line":270,"column":73}},"62":{"start":{"line":272,"column":2},"end":{"line":274,"column":3}},"63":{"start":{"line":273,"column":4},"end":{"line":273,"column":27}},"64":{"start":{"line":276,"column":2},"end":{"line":279,"column":3}},"65":{"start":{"line":277,"column":4},"end":{"line":277,"column":22}},"66":{"start":{"line":278,"column":4},"end":{"line":278,"column":18}},"67":{"start":{"line":281,"column":2},"end":{"line":283,"column":4}},"68":{"start":{"line":285,"column":2},"end":{"line":297,"column":3}},"69":{"start":{"line":286,"column":4},"end":{"line":286,"column":39}},"70":{"start":{"line":287,"column":4},"end":{"line":287,"column":67}},"71":{"start":{"line":288,"column":4},"end":{"line":288,"column":53}},"72":{"start":{"line":289,"column":4},"end":{"line":289,"column":37}},"73":{"start":{"line":290,"column":4},"end":{"line":290,"column":45}},"74":{"start":{"line":292,"column":4},"end":{"line":294,"column":5}},"75":{"start":{"line":293,"column":6},"end":{"line":293,"column":82}},"76":{"start":{"line":296,"column":4},"end":{"line":296,"column":39}},"77":{"start":{"line":299,"column":2},"end":{"line":305,"column":5}},"78":{"start":{"line":311,"column":0},"end":{"line":313,"column":79}},"79":{"start":{"line":312,"column":2},"end":{"line":312,"column":48}},"80":{"start":{"line":318,"column":0},"end":{"line":320,"column":73}},"81":{"start":{"line":319,"column":2},"end":{"line":319,"column":56}},"82":{"start":{"line":359,"column":0},"end":{"line":397,"column":2}},"83":{"start":{"line":360,"column":2},"end":{"line":360,"column":35}},"84":{"start":{"line":361,"column":2},"end":{"line":361,"column":81}},"85":{"start":{"line":363,"column":2},"end":{"line":365,"column":3}},"86":{"start":{"line":364,"column":4},"end":{"line":364,"column":27}},"87":{"start":{"line":367,"column":2},"end":{"line":370,"column":3}},"88":{"start":{"line":368,"column":4},"end":{"line":368,"column":22}},"89":{"start":{"line":369,"column":4},"end":{"line":369,"column":18}},"90":{"start":{"line":372,"column":2},"end":{"line":374,"column":4}},"91":{"start":{"line":376,"column":2},"end":{"line":388,"column":3}},"92":{"start":{"line":377,"column":4},"end":{"line":377,"column":38}},"93":{"start":{"line":378,"column":4},"end":{"line":378,"column":66}},"94":{"start":{"line":379,"column":4},"end":{"line":379,"column":52}},"95":{"start":{"line":380,"column":4},"end":{"line":380,"column":36}},"96":{"start":{"line":381,"column":4},"end":{"line":381,"column":44}},"97":{"start":{"line":383,"column":4},"end":{"line":385,"column":5}},"98":{"start":{"line":384,"column":6},"end":{"line":384,"column":81}},"99":{"start":{"line":387,"column":4},"end":{"line":387,"column":38}},"100":{"start":{"line":390,"column":2},"end":{"line":396,"column":5}},"101":{"start":{"line":403,"column":0},"end":{"line":405,"column":71}},"102":{"start":{"line":404,"column":2},"end":{"line":404,"column":19}},"103":{"start":{"line":411,"column":0},"end":{"line":417,"column":69}},"104":{"start":{"line":412,"column":2},"end":{"line":416,"column":5}},"105":{"start":{"line":423,"column":0},"end":{"line":425,"column":70}},"106":{"start":{"line":424,"column":2},"end":{"line":424,"column":44}},"107":{"start":{"line":460,"column":0},"end":{"line":477,"column":2}},"108":{"start":{"line":461,"column":2},"end":{"line":461,"column":35}},"109":{"start":{"line":462,"column":2},"end":{"line":462,"column":60}},"110":{"start":{"line":464,"column":2},"end":{"line":466,"column":3}},"111":{"start":{"line":465,"column":4},"end":{"line":465,"column":27}},"112":{"start":{"line":468,"column":2},"end":{"line":476,"column":5}},"113":{"start":{"line":480,"column":0},"end":{"line":480,"column":49}},"114":{"start":{"line":481,"column":0},"end":{"line":481,"column":64}},"115":{"start":{"line":482,"column":0},"end":{"line":482,"column":65}},"116":{"start":{"line":483,"column":0},"end":{"line":483,"column":58}},"117":{"start":{"line":484,"column":0},"end":{"line":484,"column":62}},"118":{"start":{"line":485,"column":0},"end":{"line":485,"column":63}},"119":{"start":{"line":487,"column":0},"end":{"line":492,"column":1}},"120":{"start":{"line":488,"column":2},"end":{"line":489,"column":66}},"121":{"start":{"line":491,"column":2},"end":{"line":491,"column":47}}},"branchMap":{"1":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"2":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":9},"end":{"line":95,"column":9}},{"start":{"line":95,"column":9},"end":{"line":95,"column":9}}]},"3":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":35}},{"start":{"line":95,"column":39},"end":{"line":95,"column":67}}]},"4":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":9}},{"start":{"line":98,"column":9},"end":{"line":98,"column":9}}]},"5":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":13},"end":{"line":98,"column":35}},{"start":{"line":98,"column":39},"end":{"line":98,"column":67}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"9":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":24}},{"start":{"line":130,"column":28},"end":{"line":130,"column":54}}]},"10":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"11":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]},"12":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":28}},{"start":{"line":276,"column":32},"end":{"line":276,"column":60}}]},"13":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"14":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"15":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"16":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"17":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":6},"end":{"line":367,"column":28}},{"start":{"line":367,"column":32},"end":{"line":367,"column":60}}]},"18":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"19":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"20":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":2},"end":{"line":464,"column":2}},{"start":{"line":464,"column":2},"end":{"line":464,"column":2}}]}},"code":["module.exports = AlgoliaSearch;","","var Index = require('./Index.js');","var deprecate = require('./deprecate.js');","var deprecatedMessage = require('./deprecatedMessage.js');","var AlgoliaSearchCore = require('./AlgoliaSearchCore.js');","var inherits = require('inherits');","var errors = require('./errors');","","function AlgoliaSearch() {","  AlgoliaSearchCore.apply(this, arguments);","}","","inherits(AlgoliaSearch, AlgoliaSearchCore);","","/*"," * Delete an index"," *"," * @param indexName the name of index to delete"," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer that contains the task ID"," */","AlgoliaSearch.prototype.deleteIndex = function(indexName, callback) {","  return this._jsonRequest({","    method: 'DELETE',","    url: '/1/indexes/' + encodeURIComponent(indexName),","    hostType: 'write',","    callback: callback","  });","};","","/**"," * Move an existing index."," * @param srcIndexName the name of index to copy."," * @param dstIndexName the new index name that will contains a copy of"," * srcIndexName (destination will be overriten if it already exist)."," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer that contains the task ID"," */","AlgoliaSearch.prototype.moveIndex = function(srcIndexName, dstIndexName, callback) {","  var postObj = {","    operation: 'move', destination: dstIndexName","  };","  return this._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(srcIndexName) + '/operation',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/**"," * Copy an existing index."," * @param srcIndexName the name of index to copy."," * @param dstIndexName the new index name that will contains a copy"," * of srcIndexName (destination will be overriten if it already exist)."," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer that contains the task ID"," */","AlgoliaSearch.prototype.copyIndex = function(srcIndexName, dstIndexName, callback) {","  var postObj = {","    operation: 'copy', destination: dstIndexName","  };","  return this._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(srcIndexName) + '/operation',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/**"," * Return last log entries."," * @param offset Specify the first entry to retrieve (0-based, 0 is the most recent log entry)."," * @param length Specify the maximum number of entries to retrieve starting"," * at offset. Maximum allowed value: 1000."," * @param type Specify the maximum number of entries to retrieve starting"," * at offset. Maximum allowed value: 1000."," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer that contains the task ID"," */","AlgoliaSearch.prototype.getLogs = function(offset, length, callback) {","  var clone = require('./clone.js');","  var params = {};","  if (typeof offset === 'object') {","    // getLogs(params)","    params = clone(offset);","    callback = length;","  } else if (arguments.length === 0 || typeof offset === 'function') {","    // getLogs([cb])","    callback = offset;","  } else if (arguments.length === 1 || typeof length === 'function') {","    // getLogs(1, [cb)]","    callback = length;","    params.offset = offset;","  } else {","    // getLogs(1, 2, [cb])","    params.offset = offset;","    params.length = length;","  }","","  if (params.offset === undefined) params.offset = 0;","  if (params.length === undefined) params.length = 10;","","  return this._jsonRequest({","    method: 'GET',","    url: '/1/logs?' + this._getSearchParams(params, ''),","    hostType: 'read',","    callback: callback","  });","};","","/*"," * List all existing indexes (paginated)"," *"," * @param page The page to retrieve, starting at 0."," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer with index list"," */","AlgoliaSearch.prototype.listIndexes = function(page, callback) {","  var params = '';","","  if (page === undefined || typeof page === 'function') {","    callback = page;","  } else {","    params = '?page=' + page;","  }","","  return this._jsonRequest({","    method: 'GET',","    url: '/1/indexes' + params,","    hostType: 'read',","    callback: callback","  });","};","","/*"," * Get the index object initialized"," *"," * @param indexName the name of index"," * @param callback the result callback with one argument (the Index instance)"," */","AlgoliaSearch.prototype.initIndex = function(indexName) {","  return new Index(this, indexName);","};","","/*"," * @deprecated use client.listApiKeys"," */","AlgoliaSearch.prototype.listUserKeys = deprecate(function(callback) {","  return this.listApiKeys(callback);","}, deprecatedMessage('client.listUserKeys()', 'client.listApiKeys()'));","","/*"," * List all existing api keys with their associated ACLs"," *"," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer with api keys list"," */","AlgoliaSearch.prototype.listApiKeys = function(callback) {","  return this._jsonRequest({","    method: 'GET',","    url: '/1/keys',","    hostType: 'read',","    callback: callback","  });","};","","/*"," * @deprecated see client.getApiKey"," */","AlgoliaSearch.prototype.getUserKeyACL = deprecate(function(key, callback) {","  return this.getApiKey(key, callback);","}, deprecatedMessage('client.getUserKeyACL()', 'client.getApiKey()'));","","/*"," * Get an API key"," *"," * @param key"," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer with the right API key"," */","AlgoliaSearch.prototype.getApiKey = function(key, callback) {","  return this._jsonRequest({","    method: 'GET',","    url: '/1/keys/' + key,","    hostType: 'read',","    callback: callback","  });","};","","/*"," * @deprecated see client.deleteApiKey"," */","AlgoliaSearch.prototype.deleteUserKey = deprecate(function(key, callback) {","  return this.deleteApiKey(key, callback);","}, deprecatedMessage('client.deleteUserKey()', 'client.deleteApiKey()'));","","/*"," * Delete an existing API key"," * @param key"," * @param callback the result callback called with two arguments"," *  error: null or Error('message')"," *  content: the server answer with the date of deletion"," */","AlgoliaSearch.prototype.deleteApiKey = function(key, callback) {","  return this._jsonRequest({","    method: 'DELETE',","    url: '/1/keys/' + key,","    hostType: 'write',","    callback: callback","  });","};","","/*"," @deprecated see client.addApiKey"," */","AlgoliaSearch.prototype.addUserKey = deprecate(function(acls, params, callback) {","  return this.addApiKey(acls, params, callback);","}, deprecatedMessage('client.addUserKey()', 'client.addApiKey()'));","","/*"," * Add a new global API key"," *"," * @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that"," *   can contains the following values:"," *     - search: allow to search (https and http)"," *     - addObject: allows to add/update an object in the index (https only)"," *     - deleteObject : allows to delete an existing object (https only)"," *     - deleteIndex : allows to delete index content (https only)"," *     - settings : allows to get index settings (https only)"," *     - editSettings : allows to change index settings (https only)"," * @param {Object} [params] - Optionnal parameters to set for the key"," * @param {number} params.validity - Number of seconds after which the key will be automatically removed (0 means no time limit for this key)"," * @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour"," * @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call"," * @param {string[]} params.indexes - Allowed targeted indexes for this key"," * @param {string} params.description - A description for your key"," * @param {string[]} params.referers - A list of authorized referers"," * @param {Object} params.queryParameters - Force the key to use specific query parameters"," * @param {Function} callback - The result callback called with two arguments"," *   error: null or Error('message')"," *   content: the server answer with the added API key"," * @return {Promise|undefined} Returns a promise if no callback given"," * @example"," * client.addUserKey(['search'], {"," *   validity: 300,"," *   maxQueriesPerIPPerHour: 2000,"," *   maxHitsPerQuery: 3,"," *   indexes: ['fruits'],"," *   description: 'Eat three fruits',"," *   referers: ['*.algolia.com'],"," *   queryParameters: {"," *     tagFilters: ['public'],"," *   }"," * })"," * @see {@link https://www.algolia.com/doc/rest_api#AddKey|Algolia REST API Documentation}"," */","AlgoliaSearch.prototype.addApiKey = function(acls, params, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: client.addApiKey(arrayOfAcls[, params, callback])';","","  if (!isArray(acls)) {","    throw new Error(usage);","  }","","  if (arguments.length === 1 || typeof params === 'function') {","    callback = params;","    params = null;","  }","","  var postObj = {","    acl: acls","  };","","  if (params) {","    postObj.validity = params.validity;","    postObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;","    postObj.maxHitsPerQuery = params.maxHitsPerQuery;","    postObj.indexes = params.indexes;","    postObj.description = params.description;","","    if (params.queryParameters) {","      postObj.queryParameters = this._getSearchParams(params.queryParameters, '');","    }","","    postObj.referers = params.referers;","  }","","  return this._jsonRequest({","    method: 'POST',","    url: '/1/keys',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/**"," * @deprecated Please use client.addApiKey()"," */","AlgoliaSearch.prototype.addUserKeyWithValidity = deprecate(function(acls, params, callback) {","  return this.addApiKey(acls, params, callback);","}, deprecatedMessage('client.addUserKeyWithValidity()', 'client.addApiKey()'));","","/**"," * @deprecated Please use client.updateApiKey()"," */","AlgoliaSearch.prototype.updateUserKey = deprecate(function(key, acls, params, callback) {","  return this.updateApiKey(key, acls, params, callback);","}, deprecatedMessage('client.updateUserKey()', 'client.updateApiKey()'));","","/**"," * Update an existing API key"," * @param {string} key - The key to update"," * @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that"," *   can contains the following values:"," *     - search: allow to search (https and http)"," *     - addObject: allows to add/update an object in the index (https only)"," *     - deleteObject : allows to delete an existing object (https only)"," *     - deleteIndex : allows to delete index content (https only)"," *     - settings : allows to get index settings (https only)"," *     - editSettings : allows to change index settings (https only)"," * @param {Object} [params] - Optionnal parameters to set for the key"," * @param {number} params.validity - Number of seconds after which the key will be automatically removed (0 means no time limit for this key)"," * @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour"," * @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call"," * @param {string[]} params.indexes - Allowed targeted indexes for this key"," * @param {string} params.description - A description for your key"," * @param {string[]} params.referers - A list of authorized referers"," * @param {Object} params.queryParameters - Force the key to use specific query parameters"," * @param {Function} callback - The result callback called with two arguments"," *   error: null or Error('message')"," *   content: the server answer with the modified API key"," * @return {Promise|undefined} Returns a promise if no callback given"," * @example"," * client.updateApiKey('APIKEY', ['search'], {"," *   validity: 300,"," *   maxQueriesPerIPPerHour: 2000,"," *   maxHitsPerQuery: 3,"," *   indexes: ['fruits'],"," *   description: 'Eat three fruits',"," *   referers: ['*.algolia.com'],"," *   queryParameters: {"," *     tagFilters: ['public'],"," *   }"," * })"," * @see {@link https://www.algolia.com/doc/rest_api#UpdateIndexKey|Algolia REST API Documentation}"," */","AlgoliaSearch.prototype.updateApiKey = function(key, acls, params, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: client.updateApiKey(key, arrayOfAcls[, params, callback])';","","  if (!isArray(acls)) {","    throw new Error(usage);","  }","","  if (arguments.length === 2 || typeof params === 'function') {","    callback = params;","    params = null;","  }","","  var putObj = {","    acl: acls","  };","","  if (params) {","    putObj.validity = params.validity;","    putObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;","    putObj.maxHitsPerQuery = params.maxHitsPerQuery;","    putObj.indexes = params.indexes;","    putObj.description = params.description;","","    if (params.queryParameters) {","      putObj.queryParameters = this._getSearchParams(params.queryParameters, '');","    }","","    putObj.referers = params.referers;","  }","","  return this._jsonRequest({","    method: 'PUT',","    url: '/1/keys/' + key,","    body: putObj,","    hostType: 'write',","    callback: callback","  });","};","","/**"," * Initialize a new batch of search queries"," * @deprecated use client.search()"," */","AlgoliaSearch.prototype.startQueriesBatch = deprecate(function startQueriesBatchDeprecated() {","  this._batch = [];","}, deprecatedMessage('client.startQueriesBatch()', 'client.search()'));","","/**"," * Add a search query in the batch"," * @deprecated use client.search()"," */","AlgoliaSearch.prototype.addQueryInBatch = deprecate(function addQueryInBatchDeprecated(indexName, query, args) {","  this._batch.push({","    indexName: indexName,","    query: query,","    params: args","  });","}, deprecatedMessage('client.addQueryInBatch()', 'client.search()'));","","/**"," * Launch the batch of queries using XMLHttpRequest."," * @deprecated use client.search()"," */","AlgoliaSearch.prototype.sendQueriesBatch = deprecate(function sendQueriesBatchDeprecated(callback) {","  return this.search(this._batch, callback);","}, deprecatedMessage('client.sendQueriesBatch()', 'client.search()'));","","/**"," * Perform write operations accross multiple indexes."," *"," * To reduce the amount of time spent on network round trips,"," * you can create, update, or delete several objects in one call,"," * using the batch endpoint (all operations are done in the given order)."," *"," * Available actions:"," *   - addObject"," *   - updateObject"," *   - partialUpdateObject"," *   - partialUpdateObjectNoCreate"," *   - deleteObject"," *"," * https://www.algolia.com/doc/rest_api#Indexes"," * @param  {Object[]} operations An array of operations to perform"," * @return {Promise|undefined} Returns a promise if no callback given"," * @example"," * client.batch([{"," *   action: 'addObject',"," *   indexName: 'clients',"," *   body: {"," *     name: 'Bill'"," *   }"," * }, {"," *   action: 'udpateObject',"," *   indexName: 'fruits',"," *   body: {"," *     objectID: '29138',"," *     name: 'banana'"," *   }"," * }], cb)"," */","AlgoliaSearch.prototype.batch = function(operations, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: client.batch(operations[, callback])';","","  if (!isArray(operations)) {","    throw new Error(usage);","  }","","  return this._jsonRequest({","    method: 'POST',","    url: '/1/indexes/*/batch',","    body: {","      requests: operations","    },","    hostType: 'write',","    callback: callback","  });","};","","// environment specific methods","AlgoliaSearch.prototype.destroy = notImplemented;","AlgoliaSearch.prototype.enableRateLimitForward = notImplemented;","AlgoliaSearch.prototype.disableRateLimitForward = notImplemented;","AlgoliaSearch.prototype.useSecuredAPIKey = notImplemented;","AlgoliaSearch.prototype.disableSecuredAPIKey = notImplemented;","AlgoliaSearch.prototype.generateSecuredApiKey = notImplemented;","","function notImplemented() {","  var message = 'Not implemented in this environment.\\n' +","    'If you feel this is a mistake, write to support@algolia.com';","","  throw new errors.AlgoliaSearchError(message);","}",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"14":1,"24":1,"25":0,"42":1,"43":0,"46":0,"64":1,"65":0,"68":0,"88":1,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"104":0,"105":0,"108":0,"109":0,"111":0,"127":1,"128":0,"130":0,"131":0,"133":0,"136":0,"150":1,"151":0,"157":1,"158":0,"168":1,"169":0,"180":1,"181":0,"192":1,"193":0,"204":1,"205":0,"215":1,"216":0,"227":1,"228":0,"268":1,"269":0,"270":0,"272":0,"273":0,"276":0,"277":0,"278":0,"281":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"292":0,"293":0,"296":0,"299":0,"311":1,"312":0,"318":1,"319":0,"359":1,"360":0,"361":0,"363":0,"364":0,"367":0,"368":0,"369":0,"372":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"383":0,"384":0,"387":0,"390":0,"403":1,"404":0,"411":1,"412":0,"423":1,"424":0,"460":1,"461":0,"462":0,"464":0,"465":0,"468":0,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"487":1,"488":0,"491":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/Index.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/Index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":1,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":1,"181":0,"182":0,"183":1,"184":0,"185":0,"186":1,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":1,"250":0,"251":0,"252":1,"253":0,"254":1,"255":0,"256":0,"257":1,"258":0,"259":1,"260":0,"261":0,"262":1,"263":0,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":1,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":13}}},"2":{"name":"Index","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":17}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":28},"end":{"line":31,"column":66}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":29},"end":{"line":59,"column":57}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":38},"end":{"line":97,"column":91}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":126,"column":39},"end":{"line":126,"column":67}}},"7":{"name":"(anonymous_7)","line":163,"loc":{"start":{"line":163,"column":29},"end":{"line":163,"column":56}}},"8":{"name":"(anonymous_8)","line":182,"loc":{"start":{"line":182,"column":30},"end":{"line":182,"column":58}}},"9":{"name":"(anonymous_9)","line":219,"loc":{"start":{"line":219,"column":31},"end":{"line":219,"column":60}}},"10":{"name":"(anonymous_10)","line":247,"loc":{"start":{"line":247,"column":32},"end":{"line":247,"column":62}}},"11":{"name":"prepareRequest","line":259,"loc":{"start":{"line":259,"column":29},"end":{"line":259,"column":63}}},"12":{"name":"(anonymous_12)","line":287,"loc":{"start":{"line":287,"column":32},"end":{"line":287,"column":66}}},"13":{"name":"stopOrDelete","line":315,"loc":{"start":{"line":315,"column":2},"end":{"line":315,"column":39}}},"14":{"name":"getObjectID","line":323,"loc":{"start":{"line":323,"column":44},"end":{"line":323,"column":73}}},"15":{"name":"waitTask","line":333,"loc":{"start":{"line":333,"column":2},"end":{"line":333,"column":42}}},"16":{"name":"doDeleteByQuery","line":337,"loc":{"start":{"line":337,"column":2},"end":{"line":337,"column":29}}},"17":{"name":"success","line":347,"loc":{"start":{"line":347,"column":2},"end":{"line":347,"column":21}}},"18":{"name":"exit","line":348,"loc":{"start":{"line":348,"column":16},"end":{"line":348,"column":32}}},"19":{"name":"failure","line":353,"loc":{"start":{"line":353,"column":2},"end":{"line":353,"column":24}}},"20":{"name":"exit","line":354,"loc":{"start":{"line":354,"column":16},"end":{"line":354,"column":32}}},"21":{"name":"(anonymous_21)","line":393,"loc":{"start":{"line":393,"column":28},"end":{"line":393,"column":61}}},"22":{"name":"browseLoop","line":415,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":30}}},"23":{"name":"browseCallback","line":441,"loc":{"start":{"line":441,"column":2},"end":{"line":441,"column":40}}},"24":{"name":"(anonymous_24)","line":469,"loc":{"start":{"line":469,"column":28},"end":{"line":469,"column":45}}},"25":{"name":"ttAdapter","line":471,"loc":{"start":{"line":471,"column":9},"end":{"line":471,"column":52}}},"26":{"name":"searchDone","line":482,"loc":{"start":{"line":482,"column":31},"end":{"line":482,"column":65}}},"27":{"name":"(anonymous_27)","line":502,"loc":{"start":{"line":502,"column":27},"end":{"line":502,"column":54}}},"28":{"name":"retryLoop","line":516,"loc":{"start":{"line":516,"column":2},"end":{"line":516,"column":23}}},"29":{"name":"success","line":521,"loc":{"start":{"line":521,"column":12},"end":{"line":521,"column":38}}},"30":{"name":"successCb","line":542,"loc":{"start":{"line":542,"column":2},"end":{"line":542,"column":30}}},"31":{"name":"exit","line":543,"loc":{"start":{"line":543,"column":16},"end":{"line":543,"column":32}}},"32":{"name":"failureCb","line":548,"loc":{"start":{"line":548,"column":2},"end":{"line":548,"column":26}}},"33":{"name":"exit","line":549,"loc":{"start":{"line":549,"column":16},"end":{"line":549,"column":32}}},"34":{"name":"(anonymous_34)","line":562,"loc":{"start":{"line":562,"column":29},"end":{"line":562,"column":48}}},"35":{"name":"(anonymous_35)","line":579,"loc":{"start":{"line":579,"column":30},"end":{"line":579,"column":49}}},"36":{"name":"(anonymous_36)","line":589,"loc":{"start":{"line":589,"column":33},"end":{"line":589,"column":60}}},"37":{"name":"(anonymous_37)","line":606,"loc":{"start":{"line":606,"column":30},"end":{"line":606,"column":64}}},"38":{"name":"(anonymous_38)","line":627,"loc":{"start":{"line":627,"column":29},"end":{"line":627,"column":58}}},"39":{"name":"(anonymous_39)","line":636,"loc":{"start":{"line":636,"column":32},"end":{"line":636,"column":67}}},"40":{"name":"(anonymous_40)","line":656,"loc":{"start":{"line":656,"column":32},"end":{"line":656,"column":57}}},"41":{"name":"(anonymous_41)","line":676,"loc":{"start":{"line":676,"column":32},"end":{"line":676,"column":67}}},"42":{"name":"(anonymous_42)","line":769,"loc":{"start":{"line":769,"column":30},"end":{"line":769,"column":65}}},"43":{"name":"(anonymous_43)","line":792,"loc":{"start":{"line":792,"column":41},"end":{"line":792,"column":60}}},"44":{"name":"(anonymous_44)","line":803,"loc":{"start":{"line":803,"column":30},"end":{"line":803,"column":49}}},"45":{"name":"(anonymous_45)","line":816,"loc":{"start":{"line":816,"column":42},"end":{"line":816,"column":66}}},"46":{"name":"(anonymous_46)","line":829,"loc":{"start":{"line":829,"column":28},"end":{"line":829,"column":52}}},"47":{"name":"(anonymous_47)","line":842,"loc":{"start":{"line":842,"column":42},"end":{"line":842,"column":66}}},"48":{"name":"(anonymous_48)","line":854,"loc":{"start":{"line":854,"column":31},"end":{"line":854,"column":55}}},"49":{"name":"(anonymous_49)","line":867,"loc":{"start":{"line":867,"column":39},"end":{"line":867,"column":72}}},"50":{"name":"(anonymous_50)","line":907,"loc":{"start":{"line":907,"column":28},"end":{"line":907,"column":61}}},"51":{"name":"deprecatedAddUserKeyWithValidity","line":949,"loc":{"start":{"line":949,"column":51},"end":{"line":949,"column":117}}},"52":{"name":"(anonymous_52)","line":956,"loc":{"start":{"line":956,"column":42},"end":{"line":956,"column":80}}},"53":{"name":"(anonymous_53)","line":996,"loc":{"start":{"line":996,"column":31},"end":{"line":996,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":58}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"7":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}},"9":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":35}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"12":{"start":{"line":31,"column":0},"end":{"line":49,"column":2}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":22}},"14":{"start":{"line":34,"column":2},"end":{"line":37,"column":3}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":24}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":25}},"17":{"start":{"line":39,"column":2},"end":{"line":48,"column":5}},"18":{"start":{"line":59,"column":0},"end":{"line":85,"column":2}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":35}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":68}},"21":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"22":{"start":{"line":64,"column":4},"end":{"line":64,"column":27}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"24":{"start":{"line":68,"column":2},"end":{"line":70,"column":4}},"25":{"start":{"line":71,"column":2},"end":{"line":77,"column":3}},"26":{"start":{"line":72,"column":4},"end":{"line":75,"column":6}},"27":{"start":{"line":76,"column":4},"end":{"line":76,"column":35}},"28":{"start":{"line":78,"column":2},"end":{"line":84,"column":5}},"29":{"start":{"line":97,"column":0},"end":{"line":116,"column":2}},"30":{"start":{"line":98,"column":2},"end":{"line":101,"column":3}},"31":{"start":{"line":99,"column":4},"end":{"line":99,"column":33}},"32":{"start":{"line":100,"column":4},"end":{"line":100,"column":34}},"33":{"start":{"line":103,"column":2},"end":{"line":103,"column":22}},"34":{"start":{"line":104,"column":2},"end":{"line":104,"column":131}},"35":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"36":{"start":{"line":106,"column":4},"end":{"line":106,"column":38}},"37":{"start":{"line":109,"column":2},"end":{"line":115,"column":5}},"38":{"start":{"line":126,"column":0},"end":{"line":153,"column":2}},"39":{"start":{"line":127,"column":2},"end":{"line":127,"column":35}},"40":{"start":{"line":128,"column":2},"end":{"line":128,"column":78}},"41":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"42":{"start":{"line":131,"column":4},"end":{"line":131,"column":27}},"43":{"start":{"line":134,"column":2},"end":{"line":134,"column":22}},"44":{"start":{"line":135,"column":2},"end":{"line":137,"column":4}},"45":{"start":{"line":138,"column":2},"end":{"line":145,"column":3}},"46":{"start":{"line":139,"column":4},"end":{"line":143,"column":6}},"47":{"start":{"line":144,"column":4},"end":{"line":144,"column":35}},"48":{"start":{"line":146,"column":2},"end":{"line":152,"column":5}},"49":{"start":{"line":163,"column":0},"end":{"line":172,"column":2}},"50":{"start":{"line":164,"column":2},"end":{"line":164,"column":22}},"51":{"start":{"line":165,"column":2},"end":{"line":171,"column":5}},"52":{"start":{"line":182,"column":0},"end":{"line":209,"column":2}},"53":{"start":{"line":183,"column":2},"end":{"line":183,"column":35}},"54":{"start":{"line":184,"column":2},"end":{"line":184,"column":69}},"55":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"56":{"start":{"line":187,"column":4},"end":{"line":187,"column":27}},"57":{"start":{"line":190,"column":2},"end":{"line":190,"column":22}},"58":{"start":{"line":191,"column":2},"end":{"line":193,"column":4}},"59":{"start":{"line":194,"column":2},"end":{"line":201,"column":3}},"60":{"start":{"line":195,"column":4},"end":{"line":199,"column":6}},"61":{"start":{"line":200,"column":4},"end":{"line":200,"column":35}},"62":{"start":{"line":202,"column":2},"end":{"line":208,"column":5}},"63":{"start":{"line":219,"column":0},"end":{"line":237,"column":2}},"64":{"start":{"line":220,"column":2},"end":{"line":228,"column":3}},"65":{"start":{"line":221,"column":4},"end":{"line":221,"column":91}},"66":{"start":{"line":222,"column":4},"end":{"line":222,"column":24}},"67":{"start":{"line":223,"column":4},"end":{"line":225,"column":5}},"68":{"start":{"line":224,"column":6},"end":{"line":224,"column":27}},"69":{"start":{"line":227,"column":4},"end":{"line":227,"column":40}},"70":{"start":{"line":230,"column":2},"end":{"line":230,"column":22}},"71":{"start":{"line":231,"column":2},"end":{"line":236,"column":5}},"72":{"start":{"line":247,"column":0},"end":{"line":277,"column":2}},"73":{"start":{"line":248,"column":2},"end":{"line":248,"column":35}},"74":{"start":{"line":249,"column":2},"end":{"line":249,"column":32}},"75":{"start":{"line":251,"column":2},"end":{"line":251,"column":73}},"76":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"77":{"start":{"line":254,"column":4},"end":{"line":254,"column":27}},"78":{"start":{"line":257,"column":2},"end":{"line":257,"column":22}},"79":{"start":{"line":258,"column":2},"end":{"line":268,"column":4}},"80":{"start":{"line":260,"column":6},"end":{"line":266,"column":8}},"81":{"start":{"line":270,"column":2},"end":{"line":276,"column":5}},"82":{"start":{"line":287,"column":0},"end":{"line":358,"column":2}},"83":{"start":{"line":288,"column":2},"end":{"line":288,"column":36}},"84":{"start":{"line":289,"column":2},"end":{"line":289,"column":32}},"85":{"start":{"line":291,"column":2},"end":{"line":291,"column":22}},"86":{"start":{"line":292,"column":2},"end":{"line":292,"column":27}},"87":{"start":{"line":294,"column":2},"end":{"line":299,"column":3}},"88":{"start":{"line":295,"column":4},"end":{"line":295,"column":22}},"89":{"start":{"line":296,"column":4},"end":{"line":296,"column":16}},"90":{"start":{"line":298,"column":4},"end":{"line":298,"column":27}},"91":{"start":{"line":301,"column":2},"end":{"line":301,"column":43}},"92":{"start":{"line":302,"column":2},"end":{"line":302,"column":28}},"93":{"start":{"line":303,"column":2},"end":{"line":303,"column":26}},"94":{"start":{"line":307,"column":2},"end":{"line":307,"column":20}},"95":{"start":{"line":311,"column":2},"end":{"line":313,"column":22}},"96":{"start":{"line":315,"column":2},"end":{"line":331,"column":3}},"97":{"start":{"line":317,"column":4},"end":{"line":320,"column":5}},"98":{"start":{"line":319,"column":6},"end":{"line":319,"column":27}},"99":{"start":{"line":323,"column":4},"end":{"line":325,"column":7}},"100":{"start":{"line":324,"column":6},"end":{"line":324,"column":29}},"101":{"start":{"line":327,"column":4},"end":{"line":330,"column":27}},"102":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"103":{"start":{"line":334,"column":4},"end":{"line":334,"column":58}},"104":{"start":{"line":337,"column":2},"end":{"line":339,"column":3}},"105":{"start":{"line":338,"column":4},"end":{"line":338,"column":49}},"106":{"start":{"line":341,"column":2},"end":{"line":343,"column":3}},"107":{"start":{"line":342,"column":4},"end":{"line":342,"column":19}},"108":{"start":{"line":345,"column":2},"end":{"line":345,"column":33}},"109":{"start":{"line":347,"column":2},"end":{"line":351,"column":3}},"110":{"start":{"line":348,"column":4},"end":{"line":350,"column":41}},"111":{"start":{"line":349,"column":6},"end":{"line":349,"column":21}},"112":{"start":{"line":353,"column":2},"end":{"line":357,"column":3}},"113":{"start":{"line":354,"column":4},"end":{"line":356,"column":41}},"114":{"start":{"line":355,"column":6},"end":{"line":355,"column":20}},"115":{"start":{"line":393,"column":0},"end":{"line":463,"column":2}},"116":{"start":{"line":394,"column":2},"end":{"line":397,"column":3}},"117":{"start":{"line":395,"column":4},"end":{"line":395,"column":28}},"118":{"start":{"line":396,"column":4},"end":{"line":396,"column":22}},"119":{"start":{"line":399,"column":2},"end":{"line":399,"column":36}},"120":{"start":{"line":401,"column":2},"end":{"line":401,"column":47}},"121":{"start":{"line":403,"column":2},"end":{"line":403,"column":35}},"122":{"start":{"line":404,"column":2},"end":{"line":404,"column":23}},"123":{"start":{"line":405,"column":2},"end":{"line":405,"column":19}},"124":{"start":{"line":406,"column":2},"end":{"line":410,"column":4}},"125":{"start":{"line":413,"column":2},"end":{"line":413,"column":15}},"126":{"start":{"line":415,"column":2},"end":{"line":439,"column":3}},"127":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"128":{"start":{"line":417,"column":6},"end":{"line":417,"column":13}},"129":{"start":{"line":420,"column":4},"end":{"line":420,"column":13}},"130":{"start":{"line":422,"column":4},"end":{"line":430,"column":5}},"131":{"start":{"line":423,"column":6},"end":{"line":425,"column":8}},"132":{"start":{"line":427,"column":6},"end":{"line":429,"column":8}},"133":{"start":{"line":432,"column":4},"end":{"line":438,"column":7}},"134":{"start":{"line":441,"column":2},"end":{"line":460,"column":3}},"135":{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},"136":{"start":{"line":443,"column":6},"end":{"line":443,"column":13}},"137":{"start":{"line":446,"column":4},"end":{"line":449,"column":5}},"138":{"start":{"line":447,"column":6},"end":{"line":447,"column":26}},"139":{"start":{"line":448,"column":6},"end":{"line":448,"column":13}},"140":{"start":{"line":451,"column":4},"end":{"line":451,"column":29}},"141":{"start":{"line":454,"column":4},"end":{"line":457,"column":5}},"142":{"start":{"line":455,"column":6},"end":{"line":455,"column":21}},"143":{"start":{"line":456,"column":6},"end":{"line":456,"column":13}},"144":{"start":{"line":459,"column":4},"end":{"line":459,"column":31}},"145":{"start":{"line":462,"column":2},"end":{"line":462,"column":17}},"146":{"start":{"line":469,"column":0},"end":{"line":491,"column":2}},"147":{"start":{"line":470,"column":2},"end":{"line":470,"column":18}},"148":{"start":{"line":471,"column":2},"end":{"line":490,"column":4}},"149":{"start":{"line":472,"column":4},"end":{"line":472,"column":11}},"150":{"start":{"line":474,"column":4},"end":{"line":480,"column":5}},"151":{"start":{"line":476,"column":6},"end":{"line":476,"column":19}},"152":{"start":{"line":479,"column":6},"end":{"line":479,"column":18}},"153":{"start":{"line":482,"column":4},"end":{"line":489,"column":7}},"154":{"start":{"line":483,"column":6},"end":{"line":486,"column":7}},"155":{"start":{"line":484,"column":8},"end":{"line":484,"column":16}},"156":{"start":{"line":485,"column":8},"end":{"line":485,"column":15}},"157":{"start":{"line":488,"column":6},"end":{"line":488,"column":23}},"158":{"start":{"line":502,"column":0},"end":{"line":553,"column":2}},"159":{"start":{"line":504,"column":2},"end":{"line":504,"column":22}},"160":{"start":{"line":506,"column":2},"end":{"line":506,"column":22}},"161":{"start":{"line":507,"column":2},"end":{"line":507,"column":15}},"162":{"start":{"line":511,"column":2},"end":{"line":511,"column":22}},"163":{"start":{"line":512,"column":2},"end":{"line":512,"column":27}},"164":{"start":{"line":514,"column":2},"end":{"line":514,"column":28}},"165":{"start":{"line":516,"column":2},"end":{"line":534,"column":3}},"166":{"start":{"line":517,"column":4},"end":{"line":533,"column":7}},"167":{"start":{"line":522,"column":6},"end":{"line":522,"column":13}},"168":{"start":{"line":523,"column":6},"end":{"line":523,"column":42}},"169":{"start":{"line":524,"column":6},"end":{"line":526,"column":7}},"170":{"start":{"line":525,"column":8},"end":{"line":525,"column":25}},"171":{"start":{"line":528,"column":6},"end":{"line":530,"column":7}},"172":{"start":{"line":529,"column":8},"end":{"line":529,"column":60}},"173":{"start":{"line":532,"column":6},"end":{"line":532,"column":21}},"174":{"start":{"line":536,"column":2},"end":{"line":538,"column":3}},"175":{"start":{"line":537,"column":4},"end":{"line":537,"column":19}},"176":{"start":{"line":540,"column":2},"end":{"line":540,"column":37}},"177":{"start":{"line":542,"column":2},"end":{"line":546,"column":3}},"178":{"start":{"line":543,"column":4},"end":{"line":545,"column":41}},"179":{"start":{"line":544,"column":6},"end":{"line":544,"column":30}},"180":{"start":{"line":548,"column":2},"end":{"line":552,"column":3}},"181":{"start":{"line":549,"column":4},"end":{"line":551,"column":41}},"182":{"start":{"line":550,"column":6},"end":{"line":550,"column":20}},"183":{"start":{"line":562,"column":0},"end":{"line":570,"column":2}},"184":{"start":{"line":563,"column":2},"end":{"line":563,"column":22}},"185":{"start":{"line":564,"column":2},"end":{"line":569,"column":5}},"186":{"start":{"line":579,"column":0},"end":{"line":587,"column":2}},"187":{"start":{"line":580,"column":2},"end":{"line":580,"column":22}},"188":{"start":{"line":581,"column":2},"end":{"line":586,"column":5}},"189":{"start":{"line":589,"column":0},"end":{"line":604,"column":2}},"190":{"start":{"line":590,"column":2},"end":{"line":595,"column":3}},"191":{"start":{"line":591,"column":4},"end":{"line":591,"column":22}},"192":{"start":{"line":592,"column":4},"end":{"line":592,"column":16}},"193":{"start":{"line":593,"column":9},"end":{"line":595,"column":3}},"194":{"start":{"line":594,"column":4},"end":{"line":594,"column":16}},"195":{"start":{"line":597,"column":2},"end":{"line":603,"column":5}},"196":{"start":{"line":606,"column":0},"end":{"line":625,"column":2}},"197":{"start":{"line":607,"column":2},"end":{"line":612,"column":3}},"198":{"start":{"line":608,"column":4},"end":{"line":608,"column":20}},"199":{"start":{"line":609,"column":4},"end":{"line":609,"column":14}},"200":{"start":{"line":610,"column":9},"end":{"line":612,"column":3}},"201":{"start":{"line":611,"column":4},"end":{"line":611,"column":14}},"202":{"start":{"line":614,"column":2},"end":{"line":614,"column":69}},"203":{"start":{"line":614,"column":42},"end":{"line":614,"column":69}},"204":{"start":{"line":615,"column":2},"end":{"line":615,"column":94}},"205":{"start":{"line":617,"column":2},"end":{"line":624,"column":5}},"206":{"start":{"line":627,"column":0},"end":{"line":634,"column":2}},"207":{"start":{"line":628,"column":2},"end":{"line":633,"column":5}},"208":{"start":{"line":636,"column":0},"end":{"line":654,"column":2}},"209":{"start":{"line":637,"column":2},"end":{"line":642,"column":3}},"210":{"start":{"line":638,"column":4},"end":{"line":638,"column":20}},"211":{"start":{"line":639,"column":4},"end":{"line":639,"column":14}},"212":{"start":{"line":640,"column":9},"end":{"line":642,"column":3}},"213":{"start":{"line":641,"column":4},"end":{"line":641,"column":14}},"214":{"start":{"line":644,"column":2},"end":{"line":644,"column":69}},"215":{"start":{"line":644,"column":42},"end":{"line":644,"column":69}},"216":{"start":{"line":645,"column":2},"end":{"line":645,"column":94}},"217":{"start":{"line":647,"column":2},"end":{"line":653,"column":5}},"218":{"start":{"line":656,"column":0},"end":{"line":674,"column":2}},"219":{"start":{"line":657,"column":2},"end":{"line":662,"column":3}},"220":{"start":{"line":658,"column":4},"end":{"line":658,"column":20}},"221":{"start":{"line":659,"column":4},"end":{"line":659,"column":14}},"222":{"start":{"line":660,"column":9},"end":{"line":662,"column":3}},"223":{"start":{"line":661,"column":4},"end":{"line":661,"column":14}},"224":{"start":{"line":664,"column":2},"end":{"line":664,"column":69}},"225":{"start":{"line":664,"column":42},"end":{"line":664,"column":69}},"226":{"start":{"line":665,"column":2},"end":{"line":665,"column":94}},"227":{"start":{"line":667,"column":2},"end":{"line":673,"column":5}},"228":{"start":{"line":676,"column":0},"end":{"line":696,"column":2}},"229":{"start":{"line":677,"column":2},"end":{"line":682,"column":3}},"230":{"start":{"line":678,"column":4},"end":{"line":678,"column":20}},"231":{"start":{"line":679,"column":4},"end":{"line":679,"column":14}},"232":{"start":{"line":680,"column":9},"end":{"line":682,"column":3}},"233":{"start":{"line":681,"column":4},"end":{"line":681,"column":14}},"234":{"start":{"line":684,"column":2},"end":{"line":684,"column":69}},"235":{"start":{"line":684,"column":42},"end":{"line":684,"column":69}},"236":{"start":{"line":685,"column":2},"end":{"line":685,"column":94}},"237":{"start":{"line":687,"column":2},"end":{"line":695,"column":5}},"238":{"start":{"line":769,"column":0},"end":{"line":787,"column":2}},"239":{"start":{"line":770,"column":2},"end":{"line":773,"column":3}},"240":{"start":{"line":771,"column":4},"end":{"line":771,"column":20}},"241":{"start":{"line":772,"column":4},"end":{"line":772,"column":14}},"242":{"start":{"line":775,"column":2},"end":{"line":775,"column":69}},"243":{"start":{"line":775,"column":42},"end":{"line":775,"column":69}},"244":{"start":{"line":776,"column":2},"end":{"line":776,"column":94}},"245":{"start":{"line":778,"column":2},"end":{"line":778,"column":22}},"246":{"start":{"line":779,"column":2},"end":{"line":786,"column":5}},"247":{"start":{"line":792,"column":0},"end":{"line":794,"column":69}},"248":{"start":{"line":793,"column":2},"end":{"line":793,"column":36}},"249":{"start":{"line":803,"column":0},"end":{"line":811,"column":2}},"250":{"start":{"line":804,"column":2},"end":{"line":804,"column":22}},"251":{"start":{"line":805,"column":2},"end":{"line":810,"column":5}},"252":{"start":{"line":816,"column":0},"end":{"line":818,"column":68}},"253":{"start":{"line":817,"column":2},"end":{"line":817,"column":39}},"254":{"start":{"line":829,"column":0},"end":{"line":837,"column":2}},"255":{"start":{"line":830,"column":2},"end":{"line":830,"column":22}},"256":{"start":{"line":831,"column":2},"end":{"line":836,"column":5}},"257":{"start":{"line":842,"column":0},"end":{"line":844,"column":71}},"258":{"start":{"line":843,"column":2},"end":{"line":843,"column":42}},"259":{"start":{"line":854,"column":0},"end":{"line":862,"column":2}},"260":{"start":{"line":855,"column":2},"end":{"line":855,"column":22}},"261":{"start":{"line":856,"column":2},"end":{"line":861,"column":5}},"262":{"start":{"line":867,"column":0},"end":{"line":869,"column":65}},"263":{"start":{"line":868,"column":2},"end":{"line":868,"column":48}},"264":{"start":{"line":907,"column":0},"end":{"line":944,"column":2}},"265":{"start":{"line":908,"column":2},"end":{"line":908,"column":35}},"266":{"start":{"line":909,"column":2},"end":{"line":909,"column":72}},"267":{"start":{"line":911,"column":2},"end":{"line":913,"column":3}},"268":{"start":{"line":912,"column":4},"end":{"line":912,"column":27}},"269":{"start":{"line":915,"column":2},"end":{"line":918,"column":3}},"270":{"start":{"line":916,"column":4},"end":{"line":916,"column":22}},"271":{"start":{"line":917,"column":4},"end":{"line":917,"column":18}},"272":{"start":{"line":920,"column":2},"end":{"line":922,"column":4}},"273":{"start":{"line":924,"column":2},"end":{"line":935,"column":3}},"274":{"start":{"line":925,"column":4},"end":{"line":925,"column":39}},"275":{"start":{"line":926,"column":4},"end":{"line":926,"column":67}},"276":{"start":{"line":927,"column":4},"end":{"line":927,"column":53}},"277":{"start":{"line":928,"column":4},"end":{"line":928,"column":45}},"278":{"start":{"line":930,"column":4},"end":{"line":932,"column":5}},"279":{"start":{"line":931,"column":6},"end":{"line":931,"column":85}},"280":{"start":{"line":934,"column":4},"end":{"line":934,"column":39}},"281":{"start":{"line":937,"column":2},"end":{"line":943,"column":5}},"282":{"start":{"line":949,"column":0},"end":{"line":951,"column":77}},"283":{"start":{"line":950,"column":2},"end":{"line":950,"column":48}},"284":{"start":{"line":956,"column":0},"end":{"line":958,"column":71}},"285":{"start":{"line":957,"column":2},"end":{"line":957,"column":56}},"286":{"start":{"line":996,"column":0},"end":{"line":1033,"column":2}},"287":{"start":{"line":997,"column":2},"end":{"line":997,"column":35}},"288":{"start":{"line":998,"column":2},"end":{"line":998,"column":80}},"289":{"start":{"line":1000,"column":2},"end":{"line":1002,"column":3}},"290":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":27}},"291":{"start":{"line":1004,"column":2},"end":{"line":1007,"column":3}},"292":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":22}},"293":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":18}},"294":{"start":{"line":1009,"column":2},"end":{"line":1011,"column":4}},"295":{"start":{"line":1013,"column":2},"end":{"line":1024,"column":3}},"296":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":38}},"297":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":66}},"298":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":52}},"299":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":44}},"300":{"start":{"line":1019,"column":4},"end":{"line":1021,"column":5}},"301":{"start":{"line":1020,"column":6},"end":{"line":1020,"column":84}},"302":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":38}},"303":{"start":{"line":1026,"column":2},"end":{"line":1032,"column":5}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":28}},{"start":{"line":34,"column":32},"end":{"line":34,"column":62}}]},"3":{"line":40,"type":"cond-expr","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":9}},{"start":{"line":42,"column":4},"end":{"line":42,"column":10}}]},"4":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":30},"end":{"line":44,"column":64}},{"start":{"line":44,"column":67},"end":{"line":44,"column":69}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"6":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"7":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":28}},{"start":{"line":98,"column":32},"end":{"line":98,"column":71}}]},"8":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"10":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"11":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"12":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":36}},{"start":{"line":220,"column":40},"end":{"line":220,"column":68}},{"start":{"line":220,"column":72},"end":{"line":220,"column":100}}]},"13":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"14":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"15":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"16":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":28}},{"start":{"line":294,"column":32},"end":{"line":294,"column":60}}]},"17":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":317,"column":4}},{"start":{"line":317,"column":4},"end":{"line":317,"column":4}}]},"18":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"19":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":7},"end":{"line":350,"column":25}},{"start":{"line":350,"column":29},"end":{"line":350,"column":39}}]},"20":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":7},"end":{"line":356,"column":25}},{"start":{"line":356,"column":29},"end":{"line":356,"column":39}}]},"21":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"22":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":14},"end":{"line":407,"column":29}},{"start":{"line":407,"column":33},"end":{"line":407,"column":35}}]},"23":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":416,"column":4}},{"start":{"line":416,"column":4},"end":{"line":416,"column":4}}]},"24":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"25":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":4},"end":{"line":442,"column":4}},{"start":{"line":442,"column":4},"end":{"line":442,"column":4}}]},"26":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":4},"end":{"line":446,"column":4}},{"start":{"line":446,"column":4},"end":{"line":446,"column":4}}]},"27":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"28":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":474,"column":4}},{"start":{"line":474,"column":4},"end":{"line":474,"column":4}}]},"29":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":6},"end":{"line":483,"column":6}},{"start":{"line":483,"column":6},"end":{"line":483,"column":6}}]},"30":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":6},"end":{"line":524,"column":6}},{"start":{"line":524,"column":6},"end":{"line":524,"column":6}}]},"31":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":6},"end":{"line":528,"column":6}},{"start":{"line":528,"column":6},"end":{"line":528,"column":6}}]},"32":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"33":{"line":545,"type":"binary-expr","locations":[{"start":{"line":545,"column":7},"end":{"line":545,"column":25}},{"start":{"line":545,"column":29},"end":{"line":545,"column":39}}]},"34":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":7},"end":{"line":551,"column":25}},{"start":{"line":551,"column":29},"end":{"line":551,"column":39}}]},"35":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":2},"end":{"line":590,"column":2}},{"start":{"line":590,"column":2},"end":{"line":590,"column":2}}]},"36":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":9},"end":{"line":593,"column":9}},{"start":{"line":593,"column":9},"end":{"line":593,"column":9}}]},"37":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"38":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":9},"end":{"line":610,"column":9}},{"start":{"line":610,"column":9},"end":{"line":610,"column":9}}]},"39":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":2},"end":{"line":614,"column":2}},{"start":{"line":614,"column":2},"end":{"line":614,"column":2}}]},"40":{"line":615,"type":"cond-expr","locations":[{"start":{"line":615,"column":77},"end":{"line":615,"column":83}},{"start":{"line":615,"column":86},"end":{"line":615,"column":93}}]},"41":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":27},"end":{"line":615,"column":47}},{"start":{"line":615,"column":51},"end":{"line":615,"column":73}}]},"42":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":2},"end":{"line":637,"column":2}},{"start":{"line":637,"column":2},"end":{"line":637,"column":2}}]},"43":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":9},"end":{"line":640,"column":9}},{"start":{"line":640,"column":9},"end":{"line":640,"column":9}}]},"44":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":2},"end":{"line":644,"column":2}},{"start":{"line":644,"column":2},"end":{"line":644,"column":2}}]},"45":{"line":645,"type":"cond-expr","locations":[{"start":{"line":645,"column":77},"end":{"line":645,"column":83}},{"start":{"line":645,"column":86},"end":{"line":645,"column":93}}]},"46":{"line":645,"type":"binary-expr","locations":[{"start":{"line":645,"column":27},"end":{"line":645,"column":47}},{"start":{"line":645,"column":51},"end":{"line":645,"column":73}}]},"47":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"48":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":9},"end":{"line":660,"column":9}},{"start":{"line":660,"column":9},"end":{"line":660,"column":9}}]},"49":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":2},"end":{"line":664,"column":2}},{"start":{"line":664,"column":2},"end":{"line":664,"column":2}}]},"50":{"line":665,"type":"cond-expr","locations":[{"start":{"line":665,"column":77},"end":{"line":665,"column":83}},{"start":{"line":665,"column":86},"end":{"line":665,"column":93}}]},"51":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":27},"end":{"line":665,"column":47}},{"start":{"line":665,"column":51},"end":{"line":665,"column":73}}]},"52":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":2},"end":{"line":677,"column":2}},{"start":{"line":677,"column":2},"end":{"line":677,"column":2}}]},"53":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":9},"end":{"line":680,"column":9}},{"start":{"line":680,"column":9},"end":{"line":680,"column":9}}]},"54":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":2},"end":{"line":684,"column":2}},{"start":{"line":684,"column":2},"end":{"line":684,"column":2}}]},"55":{"line":685,"type":"cond-expr","locations":[{"start":{"line":685,"column":77},"end":{"line":685,"column":83}},{"start":{"line":685,"column":86},"end":{"line":685,"column":93}}]},"56":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":27},"end":{"line":685,"column":47}},{"start":{"line":685,"column":51},"end":{"line":685,"column":73}}]},"57":{"line":691,"type":"cond-expr","locations":[{"start":{"line":691,"column":68},"end":{"line":691,"column":74}},{"start":{"line":691,"column":77},"end":{"line":691,"column":84}}]},"58":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":2},"end":{"line":770,"column":2}},{"start":{"line":770,"column":2},"end":{"line":770,"column":2}}]},"59":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":6},"end":{"line":770,"column":28}},{"start":{"line":770,"column":32},"end":{"line":770,"column":58}}]},"60":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]},"61":{"line":776,"type":"cond-expr","locations":[{"start":{"line":776,"column":77},"end":{"line":776,"column":83}},{"start":{"line":776,"column":86},"end":{"line":776,"column":93}}]},"62":{"line":776,"type":"binary-expr","locations":[{"start":{"line":776,"column":27},"end":{"line":776,"column":47}},{"start":{"line":776,"column":51},"end":{"line":776,"column":73}}]},"63":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":2},"end":{"line":911,"column":2}},{"start":{"line":911,"column":2},"end":{"line":911,"column":2}}]},"64":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":2},"end":{"line":915,"column":2}},{"start":{"line":915,"column":2},"end":{"line":915,"column":2}}]},"65":{"line":915,"type":"binary-expr","locations":[{"start":{"line":915,"column":6},"end":{"line":915,"column":28}},{"start":{"line":915,"column":32},"end":{"line":915,"column":60}}]},"66":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":2},"end":{"line":924,"column":2}},{"start":{"line":924,"column":2},"end":{"line":924,"column":2}}]},"67":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":4},"end":{"line":930,"column":4}},{"start":{"line":930,"column":4},"end":{"line":930,"column":4}}]},"68":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":2},"end":{"line":1000,"column":2}},{"start":{"line":1000,"column":2},"end":{"line":1000,"column":2}}]},"69":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}},{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}}]},"70":{"line":1004,"type":"binary-expr","locations":[{"start":{"line":1004,"column":6},"end":{"line":1004,"column":28}},{"start":{"line":1004,"column":32},"end":{"line":1004,"column":60}}]},"71":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":2},"end":{"line":1013,"column":2}},{"start":{"line":1013,"column":2},"end":{"line":1013,"column":2}}]},"72":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}},{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}}]}},"code":["var inherits = require('inherits');","var IndexCore = require('./IndexCore.js');","var deprecate = require('./deprecate.js');","var deprecatedMessage = require('./deprecatedMessage.js');","var exitPromise = require('./exitPromise.js');","var errors = require('./errors');","","var deprecateForwardToSlaves = deprecate(","  function() {},","  deprecatedMessage('forwardToSlaves', 'forwardToReplicas')",");","","module.exports = Index;","","function Index() {","  IndexCore.apply(this, arguments);","}","","inherits(Index, IndexCore);","","/*","* Add an object in this index","*","* @param content contains the javascript object to add inside the index","* @param objectID (optional) an objectID you want to attribute to this object","* (if the attribute already exist the old object will be overwrite)","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that contains 3 elements: createAt, taskId and objectID","*/","Index.prototype.addObject = function(content, objectID, callback) {","  var indexObj = this;","","  if (arguments.length === 1 || typeof objectID === 'function') {","    callback = objectID;","    objectID = undefined;","  }","","  return this.as._jsonRequest({","    method: objectID !== undefined ?","    'PUT' : // update or create","    'POST', // create (API generates an objectID)","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + // create","    (objectID !== undefined ? '/' + encodeURIComponent(objectID) : ''), // update or create","    body: content,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Add several objects","*","* @param objects contains an array of objects to add","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that updateAt and taskID","*/","Index.prototype.addObjects = function(objects, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: index.addObjects(arrayOfObjects[, callback])';","","  if (!isArray(objects)) {","    throw new Error(usage);","  }","","  var indexObj = this;","  var postObj = {","    requests: []","  };","  for (var i = 0; i < objects.length; ++i) {","    var request = {","      action: 'addObject',","      body: objects[i]","    };","    postObj.requests.push(request);","  }","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Update partially an object (only update attributes passed in argument)","*","* @param partialObject contains the javascript attributes to override, the","*  object must contains an objectID attribute","* @param createIfNotExists (optional) if false, avoid an automatic creation of the object","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that contains 3 elements: createAt, taskId and objectID","*/","Index.prototype.partialUpdateObject = function(partialObject, createIfNotExists, callback) {","  if (arguments.length === 1 || typeof createIfNotExists === 'function') {","    callback = createIfNotExists;","    createIfNotExists = undefined;","  }","","  var indexObj = this;","  var url = '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(partialObject.objectID) + '/partial';","  if (createIfNotExists === false) {","    url += '?createIfNotExists=false';","  }","","  return this.as._jsonRequest({","    method: 'POST',","    url: url,","    body: partialObject,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Partially Override the content of several objects","*","* @param objects contains an array of objects to update (each object must contains a objectID attribute)","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that updateAt and taskID","*/","Index.prototype.partialUpdateObjects = function(objects, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: index.partialUpdateObjects(arrayOfObjects[, callback])';","","  if (!isArray(objects)) {","    throw new Error(usage);","  }","","  var indexObj = this;","  var postObj = {","    requests: []","  };","  for (var i = 0; i < objects.length; ++i) {","    var request = {","      action: 'partialUpdateObject',","      objectID: objects[i].objectID,","      body: objects[i]","    };","    postObj.requests.push(request);","  }","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Override the content of object","*","* @param object contains the javascript object to save, the object must contains an objectID attribute","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that updateAt and taskID","*/","Index.prototype.saveObject = function(object, callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'PUT',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(object.objectID),","    body: object,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Override the content of several objects","*","* @param objects contains an array of objects to update (each object must contains a objectID attribute)","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that updateAt and taskID","*/","Index.prototype.saveObjects = function(objects, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: index.saveObjects(arrayOfObjects[, callback])';","","  if (!isArray(objects)) {","    throw new Error(usage);","  }","","  var indexObj = this;","  var postObj = {","    requests: []","  };","  for (var i = 0; i < objects.length; ++i) {","    var request = {","      action: 'updateObject',","      objectID: objects[i].objectID,","      body: objects[i]","    };","    postObj.requests.push(request);","  }","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Delete an object from the index","*","* @param objectID the unique identifier of object to delete","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that contains 3 elements: createAt, taskId and objectID","*/","Index.prototype.deleteObject = function(objectID, callback) {","  if (typeof objectID === 'function' || typeof objectID !== 'string' && typeof objectID !== 'number') {","    var err = new errors.AlgoliaSearchError('Cannot delete an object without an objectID');","    callback = objectID;","    if (typeof callback === 'function') {","      return callback(err);","    }","","    return this.as._promise.reject(err);","  }","","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'DELETE',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID),","    hostType: 'write',","    callback: callback","  });","};","","/*","* Delete several objects from an index","*","* @param objectIDs contains an array of objectID to delete","* @param callback (optional) the result callback called with two arguments:","*  error: null or Error('message')","*  content: the server answer that contains 3 elements: createAt, taskId and objectID","*/","Index.prototype.deleteObjects = function(objectIDs, callback) {","  var isArray = require('isarray');","  var map = require('./map.js');","","  var usage = 'Usage: index.deleteObjects(arrayOfObjectIDs[, callback])';","","  if (!isArray(objectIDs)) {","    throw new Error(usage);","  }","","  var indexObj = this;","  var postObj = {","    requests: map(objectIDs, function prepareRequest(objectID) {","      return {","        action: 'deleteObject',","        objectID: objectID,","        body: {","          objectID: objectID","        }","      };","    })","  };","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/*","* Delete all objects matching a query","*","* @param query the query string","* @param params the optional query parameters","* @param callback (optional) the result callback called with one argument","*  error: null or Error('message')","*/","Index.prototype.deleteByQuery = function(query, params, callback) {","  var clone = require('./clone.js');","  var map = require('./map.js');","","  var indexObj = this;","  var client = indexObj.as;","","  if (arguments.length === 1 || typeof params === 'function') {","    callback = params;","    params = {};","  } else {","    params = clone(params);","  }","","  params.attributesToRetrieve = 'objectID';","  params.hitsPerPage = 1000;","  params.distinct = false;","","  // when deleting, we should never use cache to get the","  // search results","  this.clearCache();","","  // there's a problem in how we use the promise chain,","  // see how waitTask is done","  var promise = this","  .search(query, params)","  .then(stopOrDelete);","","  function stopOrDelete(searchContent) {","    // stop here","    if (searchContent.nbHits === 0) {","      // return indexObj.as._request.resolve();","      return searchContent;","    }","","    // continue and do a recursive call","    var objectIDs = map(searchContent.hits, function getObjectID(object) {","      return object.objectID;","    });","","    return indexObj","    .deleteObjects(objectIDs)","    .then(waitTask)","    .then(doDeleteByQuery);","  }","","  function waitTask(deleteObjectsContent) {","    return indexObj.waitTask(deleteObjectsContent.taskID);","  }","","  function doDeleteByQuery() {","    return indexObj.deleteByQuery(query, params);","  }","","  if (!callback) {","    return promise;","  }","","  promise.then(success, failure);","","  function success() {","    exitPromise(function exit() {","      callback(null);","    }, client._setTimeout || setTimeout);","  }","","  function failure(err) {","    exitPromise(function exit() {","      callback(err);","    }, client._setTimeout || setTimeout);","  }","};","","/*","* Browse all content from an index using events. Basically this will do","* .browse() -> .browseFrom -> .browseFrom -> .. until all the results are returned","*","* @param {string} query - The full text query","* @param {Object} [queryParameters] - Any search query parameter","* @return {EventEmitter}","* @example","* var browser = index.browseAll('cool songs', {","*   tagFilters: 'public,comments',","*   hitsPerPage: 500","* });","*","* browser.on('result', function resultCallback(content) {","*   console.log(content.hits);","* });","*","* // if any error occurs, you get it","* browser.on('error', function(err) {","*   throw err;","* });","*","* // when you have browsed the whole index, you get this event","* browser.on('end', function() {","*   console.log('finished');","* });","*","* // at any point if you want to stop the browsing process, you can stop it manually","* // otherwise it will go on and on","* browser.stop();","*","* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}","*/","Index.prototype.browseAll = function(query, queryParameters) {","  if (typeof query === 'object') {","    queryParameters = query;","    query = undefined;","  }","","  var merge = require('./merge.js');","","  var IndexBrowser = require('./IndexBrowser');","","  var browser = new IndexBrowser();","  var client = this.as;","  var index = this;","  var params = client._getSearchParams(","    merge({}, queryParameters || {}, {","      query: query","    }), ''","  );","","  // start browsing","  browseLoop();","","  function browseLoop(cursor) {","    if (browser._stopped) {","      return;","    }","","    var body;","","    if (cursor !== undefined) {","      body = {","        cursor: cursor","      };","    } else {","      body = {","        params: params","      };","    }","","    client._jsonRequest({","      method: 'POST',","      url: '/1/indexes/' + encodeURIComponent(index.indexName) + '/browse',","      hostType: 'read',","      body: body,","      callback: browseCallback","    });","  }","","  function browseCallback(err, content) {","    if (browser._stopped) {","      return;","    }","","    if (err) {","      browser._error(err);","      return;","    }","","    browser._result(content);","","    // no cursor means we are finished browsing","    if (content.cursor === undefined) {","      browser._end();","      return;","    }","","    browseLoop(content.cursor);","  }","","  return browser;","};","","/*","* Get a Typeahead.js adapter","* @param searchParams contains an object with query parameters (see search for details)","*/","Index.prototype.ttAdapter = function(params) {","  var self = this;","  return function ttAdapter(query, syncCb, asyncCb) {","    var cb;","","    if (typeof asyncCb === 'function') {","      // typeahead 0.11","      cb = asyncCb;","    } else {","      // pre typeahead 0.11","      cb = syncCb;","    }","","    self.search(query, params, function searchDone(err, content) {","      if (err) {","        cb(err);","        return;","      }","","      cb(content.hits);","    });","  };","};","","/*","* Wait the publication of a task on the server.","* All server task are asynchronous and you can check with this method that the task is published.","*","* @param taskID the id of the task returned by server","* @param callback the result callback with with two arguments:","*  error: null or Error('message')","*  content: the server answer that contains the list of results","*/","Index.prototype.waitTask = function(taskID, callback) {","  // wait minimum 100ms before retrying","  var baseDelay = 100;","  // wait maximum 5s before retrying","  var maxDelay = 5000;","  var loop = 0;","","  // waitTask() must be handled differently from other methods,","  // it's a recursive method using a timeout","  var indexObj = this;","  var client = indexObj.as;","","  var promise = retryLoop();","","  function retryLoop() {","    return client._jsonRequest({","      method: 'GET',","      hostType: 'read',","      url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/task/' + taskID","    }).then(function success(content) {","      loop++;","      var delay = baseDelay * loop * loop;","      if (delay > maxDelay) {","        delay = maxDelay;","      }","","      if (content.status !== 'published') {","        return client._promise.delay(delay).then(retryLoop);","      }","","      return content;","    });","  }","","  if (!callback) {","    return promise;","  }","","  promise.then(successCb, failureCb);","","  function successCb(content) {","    exitPromise(function exit() {","      callback(null, content);","    }, client._setTimeout || setTimeout);","  }","","  function failureCb(err) {","    exitPromise(function exit() {","      callback(err);","    }, client._setTimeout || setTimeout);","  }","};","","/*","* This function deletes the index content. Settings and index specific API keys are kept untouched.","*","* @param callback (optional) the result callback called with two arguments","*  error: null or Error('message')","*  content: the settings object or the error message if a failure occured","*/","Index.prototype.clearIndex = function(callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/clear',","    hostType: 'write',","    callback: callback","  });","};","","/*","* Get settings of this index","*","* @param callback (optional) the result callback called with two arguments","*  error: null or Error('message')","*  content: the settings object or the error message if a failure occured","*/","Index.prototype.getSettings = function(callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'GET',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/settings?getVersion=2',","    hostType: 'read',","    callback: callback","  });","};","","Index.prototype.searchSynonyms = function(params, callback) {","  if (typeof params === 'function') {","    callback = params;","    params = {};","  } else if (params === undefined) {","    params = {};","  }","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/search',","    body: params,","    hostType: 'read',","    callback: callback","  });","};","","Index.prototype.saveSynonym = function(synonym, opts, callback) {","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  } else if (opts === undefined) {","    opts = {};","  }","","  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();","  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';","","  return this.as._jsonRequest({","    method: 'PUT',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(synonym.objectID) +","      '?forwardToReplicas=' + forwardToReplicas,","    body: synonym,","    hostType: 'write',","    callback: callback","  });","};","","Index.prototype.getSynonym = function(objectID, callback) {","  return this.as._jsonRequest({","    method: 'GET',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(objectID),","    hostType: 'read',","    callback: callback","  });","};","","Index.prototype.deleteSynonym = function(objectID, opts, callback) {","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  } else if (opts === undefined) {","    opts = {};","  }","","  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();","  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';","","  return this.as._jsonRequest({","    method: 'DELETE',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(objectID) +","      '?forwardToReplicas=' + forwardToReplicas,","    hostType: 'write',","    callback: callback","  });","};","","Index.prototype.clearSynonyms = function(opts, callback) {","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  } else if (opts === undefined) {","    opts = {};","  }","","  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();","  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/clear' +","      '?forwardToReplicas=' + forwardToReplicas,","    hostType: 'write',","    callback: callback","  });","};","","Index.prototype.batchSynonyms = function(synonyms, opts, callback) {","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  } else if (opts === undefined) {","    opts = {};","  }","","  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();","  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/batch' +","      '?forwardToReplicas=' + forwardToReplicas +","      '&replaceExistingSynonyms=' + (opts.replaceExistingSynonyms ? 'true' : 'false'),","    hostType: 'write',","    body: synonyms,","    callback: callback","  });","};","","/*","* Set settings for this index","*","* @param settigns the settings object that can contains :","* - minWordSizefor1Typo: (integer) the minimum number of characters to accept one typo (default = 3).","* - minWordSizefor2Typos: (integer) the minimum number of characters to accept two typos (default = 7).","* - hitsPerPage: (integer) the number of hits per page (default = 10).","* - attributesToRetrieve: (array of strings) default list of attributes to retrieve in objects.","*   If set to null, all attributes are retrieved.","* - attributesToHighlight: (array of strings) default list of attributes to highlight.","*   If set to null, all indexed attributes are highlighted.","* - attributesToSnippet**: (array of strings) default list of attributes to snippet alongside the number","* of words to return (syntax is attributeName:nbWords).","*   By default no snippet is computed. If set to null, no snippet is computed.","* - attributesToIndex: (array of strings) the list of fields you want to index.","*   If set to null, all textual and numerical attributes of your objects are indexed,","*   but you should update it to get optimal results.","*   This parameter has two important uses:","*     - Limit the attributes to index: For example if you store a binary image in base64,","*     you want to store it and be able to","*       retrieve it but you don't want to search in the base64 string.","*     - Control part of the ranking*: (see the ranking parameter for full explanation)","*     Matches in attributes at the beginning of","*       the list will be considered more important than matches in attributes further down the list.","*       In one attribute, matching text at the beginning of the attribute will be","*       considered more important than text after, you can disable","*       this behavior if you add your attribute inside `unordered(AttributeName)`,","*       for example attributesToIndex: [\"title\", \"unordered(text)\"].","* - attributesForFaceting: (array of strings) The list of fields you want to use for faceting.","*   All strings in the attribute selected for faceting are extracted and added as a facet.","*   If set to null, no attribute is used for faceting.","* - attributeForDistinct: (string) The attribute name used for the Distinct feature.","* This feature is similar to the SQL \"distinct\" keyword: when enabled","*   in query with the distinct=1 parameter, all hits containing a duplicate","*   value for this attribute are removed from results.","*   For example, if the chosen attribute is show_name and several hits have","*   the same value for show_name, then only the best one is kept and others are removed.","* - ranking: (array of strings) controls the way results are sorted.","*   We have six available criteria:","*    - typo: sort according to number of typos,","*    - geo: sort according to decreassing distance when performing a geo-location based search,","*    - proximity: sort according to the proximity of query words in hits,","*    - attribute: sort according to the order of attributes defined by attributesToIndex,","*    - exact:","*        - if the user query contains one word: sort objects having an attribute","*        that is exactly the query word before others.","*          For example if you search for the \"V\" TV show, you want to find it","*          with the \"V\" query and avoid to have all popular TV","*          show starting by the v letter before it.","*        - if the user query contains multiple words: sort according to the","*        number of words that matched exactly (and not as a prefix).","*    - custom: sort according to a user defined formula set in **customRanking** attribute.","*   The standard order is [\"typo\", \"geo\", \"proximity\", \"attribute\", \"exact\", \"custom\"]","* - customRanking: (array of strings) lets you specify part of the ranking.","*   The syntax of this condition is an array of strings containing attributes","*   prefixed by asc (ascending order) or desc (descending order) operator.","*   For example `\"customRanking\" => [\"desc(population)\", \"asc(name)\"]`","* - queryType: Select how the query words are interpreted, it can be one of the following value:","*   - prefixAll: all query words are interpreted as prefixes,","*   - prefixLast: only the last word is interpreted as a prefix (default behavior),","*   - prefixNone: no query word is interpreted as a prefix. This option is not recommended.","* - highlightPreTag: (string) Specify the string that is inserted before","* the highlighted parts in the query result (default to \"<em>\").","* - highlightPostTag: (string) Specify the string that is inserted after","* the highlighted parts in the query result (default to \"</em>\").","* - optionalWords: (array of strings) Specify a list of words that should","* be considered as optional when found in the query.","* @param callback (optional) the result callback called with two arguments","*  error: null or Error('message')","*  content: the server answer or the error message if a failure occured","*/","Index.prototype.setSettings = function(settings, opts, callback) {","  if (arguments.length === 1 || typeof opts === 'function') {","    callback = opts;","    opts = {};","  }","","  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();","  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';","","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'PUT',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/settings?forwardToReplicas='","      + forwardToReplicas,","    hostType: 'write',","    body: settings,","    callback: callback","  });","};","","/*"," @deprecated see index.listApiKeys"," */","Index.prototype.listUserKeys = deprecate(function(callback) {","  return this.listApiKeys(callback);","}, deprecatedMessage('index.listUserKeys()', 'index.listApiKeys()'));","","/*","* List all existing API keys to this index","*","* @param callback the result callback called with two arguments","*  error: null or Error('message')","*  content: the server answer with API keys belonging to the index","*/","Index.prototype.listApiKeys = function(callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'GET',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys',","    hostType: 'read',","    callback: callback","  });","};","","/*"," @deprecated see index.getApiKey"," */","Index.prototype.getUserKeyACL = deprecate(function(key, callback) {","  return this.getApiKey(key, callback);","}, deprecatedMessage('index.getUserKeyACL()', 'index.getApiKey()'));","","","/*","* Get an API key from this index","*","* @param key","* @param callback the result callback called with two arguments","*  error: null or Error('message')","*  content: the server answer with the right API key","*/","Index.prototype.getApiKey = function(key, callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'GET',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys/' + key,","    hostType: 'read',","    callback: callback","  });","};","","/*"," @deprecated see index.deleteApiKey"," */","Index.prototype.deleteUserKey = deprecate(function(key, callback) {","  return this.deleteApiKey(key, callback);","}, deprecatedMessage('index.deleteUserKey()', 'index.deleteApiKey()'));","","/*","* Delete an existing API key associated to this index","*","* @param key","* @param callback the result callback called with two arguments","*  error: null or Error('message')","*  content: the server answer with the deletion date","*/","Index.prototype.deleteApiKey = function(key, callback) {","  var indexObj = this;","  return this.as._jsonRequest({","    method: 'DELETE',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys/' + key,","    hostType: 'write',","    callback: callback","  });","};","","/*"," @deprecated see index.addApiKey"," */","Index.prototype.addUserKey = deprecate(function(acls, params, callback) {","  return this.addApiKey(acls, params, callback);","}, deprecatedMessage('index.addUserKey()', 'index.addApiKey()'));","","/*","* Add a new API key to this index","*","* @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that","*   can contains the following values:","*     - search: allow to search (https and http)","*     - addObject: allows to add/update an object in the index (https only)","*     - deleteObject : allows to delete an existing object (https only)","*     - deleteIndex : allows to delete index content (https only)","*     - settings : allows to get index settings (https only)","*     - editSettings : allows to change index settings (https only)","* @param {Object} [params] - Optionnal parameters to set for the key","* @param {number} params.validity - Number of seconds after which the key will","* be automatically removed (0 means no time limit for this key)","* @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour","* @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call","* @param {string} params.description - A description for your key","* @param {string[]} params.referers - A list of authorized referers","* @param {Object} params.queryParameters - Force the key to use specific query parameters","* @param {Function} callback - The result callback called with two arguments","*   error: null or Error('message')","*   content: the server answer with the added API key","* @return {Promise|undefined} Returns a promise if no callback given","* @example","* index.addUserKey(['search'], {","*   validity: 300,","*   maxQueriesPerIPPerHour: 2000,","*   maxHitsPerQuery: 3,","*   description: 'Eat three fruits',","*   referers: ['*.algolia.com'],","*   queryParameters: {","*     tagFilters: ['public'],","*   }","* })","* @see {@link https://www.algolia.com/doc/rest_api#AddIndexKey|Algolia REST API Documentation}","*/","Index.prototype.addApiKey = function(acls, params, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: index.addApiKey(arrayOfAcls[, params, callback])';","","  if (!isArray(acls)) {","    throw new Error(usage);","  }","","  if (arguments.length === 1 || typeof params === 'function') {","    callback = params;","    params = null;","  }","","  var postObj = {","    acl: acls","  };","","  if (params) {","    postObj.validity = params.validity;","    postObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;","    postObj.maxHitsPerQuery = params.maxHitsPerQuery;","    postObj.description = params.description;","","    if (params.queryParameters) {","      postObj.queryParameters = this.as._getSearchParams(params.queryParameters, '');","    }","","    postObj.referers = params.referers;","  }","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/keys',","    body: postObj,","    hostType: 'write',","    callback: callback","  });","};","","/**","* @deprecated use index.addApiKey()","*/","Index.prototype.addUserKeyWithValidity = deprecate(function deprecatedAddUserKeyWithValidity(acls, params, callback) {","  return this.addApiKey(acls, params, callback);","}, deprecatedMessage('index.addUserKeyWithValidity()', 'index.addApiKey()'));","","/*"," @deprecated see index.updateApiKey"," */","Index.prototype.updateUserKey = deprecate(function(key, acls, params, callback) {","  return this.updateApiKey(key, acls, params, callback);","}, deprecatedMessage('index.updateUserKey()', 'index.updateApiKey()'));","","/**","* Update an existing API key of this index","* @param {string} key - The key to update","* @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that","*   can contains the following values:","*     - search: allow to search (https and http)","*     - addObject: allows to add/update an object in the index (https only)","*     - deleteObject : allows to delete an existing object (https only)","*     - deleteIndex : allows to delete index content (https only)","*     - settings : allows to get index settings (https only)","*     - editSettings : allows to change index settings (https only)","* @param {Object} [params] - Optionnal parameters to set for the key","* @param {number} params.validity - Number of seconds after which the key will","* be automatically removed (0 means no time limit for this key)","* @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour","* @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call","* @param {string} params.description - A description for your key","* @param {string[]} params.referers - A list of authorized referers","* @param {Object} params.queryParameters - Force the key to use specific query parameters","* @param {Function} callback - The result callback called with two arguments","*   error: null or Error('message')","*   content: the server answer with user keys list","* @return {Promise|undefined} Returns a promise if no callback given","* @example","* index.updateApiKey('APIKEY', ['search'], {","*   validity: 300,","*   maxQueriesPerIPPerHour: 2000,","*   maxHitsPerQuery: 3,","*   description: 'Eat three fruits',","*   referers: ['*.algolia.com'],","*   queryParameters: {","*     tagFilters: ['public'],","*   }","* })","* @see {@link https://www.algolia.com/doc/rest_api#UpdateIndexKey|Algolia REST API Documentation}","*/","Index.prototype.updateApiKey = function(key, acls, params, callback) {","  var isArray = require('isarray');","  var usage = 'Usage: index.updateApiKey(key, arrayOfAcls[, params, callback])';","","  if (!isArray(acls)) {","    throw new Error(usage);","  }","","  if (arguments.length === 2 || typeof params === 'function') {","    callback = params;","    params = null;","  }","","  var putObj = {","    acl: acls","  };","","  if (params) {","    putObj.validity = params.validity;","    putObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;","    putObj.maxHitsPerQuery = params.maxHitsPerQuery;","    putObj.description = params.description;","","    if (params.queryParameters) {","      putObj.queryParameters = this.as._getSearchParams(params.queryParameters, '');","    }","","    putObj.referers = params.referers;","  }","","  return this.as._jsonRequest({","    method: 'PUT',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/keys/' + key,","    body: putObj,","    hostType: 'write',","    callback: callback","  });","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"13":1,"15":1,"16":0,"19":1,"31":1,"32":0,"34":0,"35":0,"36":0,"39":0,"59":1,"60":0,"61":0,"63":0,"64":0,"67":0,"68":0,"71":0,"72":0,"76":0,"78":0,"97":1,"98":0,"99":0,"100":0,"103":0,"104":0,"105":0,"106":0,"109":0,"126":1,"127":0,"128":0,"130":0,"131":0,"134":0,"135":0,"138":0,"139":0,"144":0,"146":0,"163":1,"164":0,"165":0,"182":1,"183":0,"184":0,"186":0,"187":0,"190":0,"191":0,"194":0,"195":0,"200":0,"202":0,"219":1,"220":0,"221":0,"222":0,"223":0,"224":0,"227":0,"230":0,"231":0,"247":1,"248":0,"249":0,"251":0,"253":0,"254":0,"257":0,"258":0,"260":0,"270":0,"287":1,"288":0,"289":0,"291":0,"292":0,"294":0,"295":0,"296":0,"298":0,"301":0,"302":0,"303":0,"307":0,"311":0,"315":1,"317":0,"319":0,"323":0,"324":0,"327":0,"333":1,"334":0,"337":1,"338":0,"341":0,"342":0,"345":0,"347":1,"348":0,"349":0,"353":1,"354":0,"355":0,"393":1,"394":0,"395":0,"396":0,"399":0,"401":0,"403":0,"404":0,"405":0,"406":0,"413":0,"415":1,"416":0,"417":0,"420":0,"422":0,"423":0,"427":0,"432":0,"441":1,"442":0,"443":0,"446":0,"447":0,"448":0,"451":0,"454":0,"455":0,"456":0,"459":0,"462":0,"469":1,"470":0,"471":0,"472":0,"474":0,"476":0,"479":0,"482":0,"483":0,"484":0,"485":0,"488":0,"502":1,"504":0,"506":0,"507":0,"511":0,"512":0,"514":0,"516":1,"517":0,"522":0,"523":0,"524":0,"525":0,"528":0,"529":0,"532":0,"536":0,"537":0,"540":0,"542":1,"543":0,"544":0,"548":1,"549":0,"550":0,"562":1,"563":0,"564":0,"579":1,"580":0,"581":0,"589":1,"590":0,"591":0,"592":0,"593":0,"594":0,"597":0,"606":1,"607":0,"608":0,"609":0,"610":0,"611":0,"614":0,"615":0,"617":0,"627":1,"628":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"644":0,"645":0,"647":0,"656":1,"657":0,"658":0,"659":0,"660":0,"661":0,"664":0,"665":0,"667":0,"676":1,"677":0,"678":0,"679":0,"680":0,"681":0,"684":0,"685":0,"687":0,"769":1,"770":0,"771":0,"772":0,"775":0,"776":0,"778":0,"779":0,"792":1,"793":0,"803":1,"804":0,"805":0,"816":1,"817":0,"829":1,"830":0,"831":0,"842":1,"843":0,"854":1,"855":0,"856":0,"867":1,"868":0,"907":1,"908":0,"909":0,"911":0,"912":0,"915":0,"916":0,"917":0,"920":0,"924":0,"925":0,"926":0,"927":0,"928":0,"930":0,"931":0,"934":0,"937":0,"949":1,"950":0,"956":1,"957":0,"996":1,"997":0,"998":0,"1000":0,"1001":0,"1004":0,"1005":0,"1006":0,"1009":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1019":0,"1020":0,"1023":0,"1026":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/IndexCore.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/IndexCore.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":1,"92":1,"93":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"IndexCore","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":44}}},"3":{"name":"(anonymous_3)","line":154,"loc":{"start":{"line":154,"column":29},"end":{"line":154,"column":72}}},"4":{"name":"(anonymous_4)","line":227,"loc":{"start":{"line":227,"column":33},"end":{"line":227,"column":60}}},"5":{"name":"(anonymous_5)","line":249,"loc":{"start":{"line":249,"column":43},"end":{"line":249,"column":70}}},"6":{"name":"(anonymous_6)","line":259,"loc":{"start":{"line":259,"column":43},"end":{"line":259,"column":61}}},"7":{"name":"(anonymous_7)","line":274,"loc":{"start":{"line":274,"column":44},"end":{"line":274,"column":71}}},"8":{"name":"(anonymous_8)","line":281,"loc":{"start":{"line":281,"column":30},"end":{"line":281,"column":76}}},"9":{"name":"(anonymous_9)","line":307,"loc":{"start":{"line":307,"column":32},"end":{"line":307,"column":68}}},"10":{"name":"(anonymous_10)","line":339,"loc":{"start":{"line":339,"column":33},"end":{"line":339,"column":85}}},"11":{"name":"prepareRequest","line":357,"loc":{"start":{"line":357,"column":29},"end":{"line":357,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"5":{"start":{"line":11,"column":0},"end":{"line":19,"column":1}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":29}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":26}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":28}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":35}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"11":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"13":{"start":{"line":123,"column":0},"end":{"line":123,"column":56}},"14":{"start":{"line":135,"column":0},"end":{"line":135,"column":70}},"15":{"start":{"line":154,"column":0},"end":{"line":212,"column":2}},"16":{"start":{"line":155,"column":2},"end":{"line":155,"column":36}},"17":{"start":{"line":157,"column":2},"end":{"line":157,"column":22}},"18":{"start":{"line":159,"column":2},"end":{"line":159,"column":11}},"19":{"start":{"line":160,"column":2},"end":{"line":160,"column":18}},"20":{"start":{"line":165,"column":2},"end":{"line":191,"column":3}},"21":{"start":{"line":166,"column":4},"end":{"line":166,"column":13}},"22":{"start":{"line":167,"column":4},"end":{"line":167,"column":28}},"23":{"start":{"line":168,"column":4},"end":{"line":168,"column":22}},"24":{"start":{"line":169,"column":9},"end":{"line":191,"column":3}},"25":{"start":{"line":171,"column":4},"end":{"line":171,"column":24}},"26":{"start":{"line":172,"column":4},"end":{"line":177,"column":5}},"27":{"start":{"line":173,"column":6},"end":{"line":173,"column":33}},"28":{"start":{"line":174,"column":11},"end":{"line":177,"column":5}},"29":{"start":{"line":175,"column":6},"end":{"line":175,"column":30}},"30":{"start":{"line":176,"column":6},"end":{"line":176,"column":30}},"31":{"start":{"line":178,"column":4},"end":{"line":178,"column":22}},"32":{"start":{"line":179,"column":4},"end":{"line":179,"column":32}},"33":{"start":{"line":180,"column":9},"end":{"line":191,"column":3}},"34":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"35":{"start":{"line":183,"column":6},"end":{"line":183,"column":30}},"36":{"start":{"line":185,"column":4},"end":{"line":185,"column":35}},"37":{"start":{"line":186,"column":4},"end":{"line":186,"column":22}},"38":{"start":{"line":187,"column":9},"end":{"line":191,"column":3}},"39":{"start":{"line":189,"column":4},"end":{"line":189,"column":28}},"40":{"start":{"line":190,"column":4},"end":{"line":190,"column":32}},"41":{"start":{"line":197,"column":2},"end":{"line":201,"column":5}},"42":{"start":{"line":203,"column":2},"end":{"line":203,"column":61}},"43":{"start":{"line":205,"column":2},"end":{"line":211,"column":5}},"44":{"start":{"line":227,"column":0},"end":{"line":235,"column":2}},"45":{"start":{"line":228,"column":2},"end":{"line":234,"column":5}},"46":{"start":{"line":249,"column":0},"end":{"line":272,"column":2}},"47":{"start":{"line":250,"column":2},"end":{"line":250,"column":36}},"48":{"start":{"line":251,"column":2},"end":{"line":251,"column":34}},"49":{"start":{"line":252,"column":2},"end":{"line":252,"column":98}},"50":{"start":{"line":254,"column":2},"end":{"line":256,"column":3}},"51":{"start":{"line":255,"column":4},"end":{"line":255,"column":27}},"52":{"start":{"line":258,"column":2},"end":{"line":258,"column":35}},"53":{"start":{"line":259,"column":2},"end":{"line":261,"column":5}},"54":{"start":{"line":260,"column":4},"end":{"line":260,"column":35}},"55":{"start":{"line":262,"column":2},"end":{"line":262,"column":70}},"56":{"start":{"line":264,"column":2},"end":{"line":271,"column":5}},"57":{"start":{"line":274,"column":0},"end":{"line":279,"column":3}},"58":{"start":{"line":275,"column":2},"end":{"line":275,"column":53}},"59":{"start":{"line":281,"column":0},"end":{"line":296,"column":2}},"60":{"start":{"line":282,"column":2},"end":{"line":295,"column":5}},"61":{"start":{"line":307,"column":0},"end":{"line":332,"column":2}},"62":{"start":{"line":308,"column":2},"end":{"line":308,"column":22}},"63":{"start":{"line":310,"column":2},"end":{"line":313,"column":3}},"64":{"start":{"line":311,"column":4},"end":{"line":311,"column":21}},"65":{"start":{"line":312,"column":4},"end":{"line":312,"column":22}},"66":{"start":{"line":315,"column":2},"end":{"line":315,"column":18}},"67":{"start":{"line":316,"column":2},"end":{"line":324,"column":3}},"68":{"start":{"line":317,"column":4},"end":{"line":317,"column":28}},"69":{"start":{"line":318,"column":4},"end":{"line":323,"column":5}},"70":{"start":{"line":319,"column":6},"end":{"line":321,"column":7}},"71":{"start":{"line":320,"column":8},"end":{"line":320,"column":22}},"72":{"start":{"line":322,"column":6},"end":{"line":322,"column":25}},"73":{"start":{"line":326,"column":2},"end":{"line":331,"column":5}},"74":{"start":{"line":339,"column":0},"end":{"line":378,"column":2}},"75":{"start":{"line":340,"column":2},"end":{"line":340,"column":35}},"76":{"start":{"line":341,"column":2},"end":{"line":341,"column":32}},"77":{"start":{"line":343,"column":2},"end":{"line":343,"column":70}},"78":{"start":{"line":345,"column":2},"end":{"line":347,"column":3}},"79":{"start":{"line":346,"column":4},"end":{"line":346,"column":27}},"80":{"start":{"line":349,"column":2},"end":{"line":349,"column":22}},"81":{"start":{"line":351,"column":2},"end":{"line":354,"column":3}},"82":{"start":{"line":352,"column":4},"end":{"line":352,"column":36}},"83":{"start":{"line":353,"column":4},"end":{"line":353,"column":37}},"84":{"start":{"line":356,"column":2},"end":{"line":369,"column":4}},"85":{"start":{"line":358,"column":6},"end":{"line":361,"column":8}},"86":{"start":{"line":363,"column":6},"end":{"line":365,"column":7}},"87":{"start":{"line":364,"column":8},"end":{"line":364,"column":70}},"88":{"start":{"line":367,"column":6},"end":{"line":367,"column":21}},"89":{"start":{"line":371,"column":2},"end":{"line":377,"column":5}},"90":{"start":{"line":380,"column":0},"end":{"line":380,"column":30}},"91":{"start":{"line":381,"column":0},"end":{"line":381,"column":37}},"92":{"start":{"line":382,"column":0},"end":{"line":382,"column":41}},"93":{"start":{"line":383,"column":0},"end":{"line":383,"column":48}}},"branchMap":{"1":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"2":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":28}},{"start":{"line":165,"column":32},"end":{"line":165,"column":54}},{"start":{"line":165,"column":58},"end":{"line":165,"column":92}}]},"3":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":9},"end":{"line":169,"column":9}},{"start":{"line":169,"column":9},"end":{"line":169,"column":9}}]},"4":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"5":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":11},"end":{"line":174,"column":11}},{"start":{"line":174,"column":11},"end":{"line":174,"column":11}}]},"6":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":9}},{"start":{"line":180,"column":9},"end":{"line":180,"column":9}}]},"7":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"8":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":9},"end":{"line":187,"column":9}},{"start":{"line":187,"column":9},"end":{"line":187,"column":9}}]},"9":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":13},"end":{"line":187,"column":45}},{"start":{"line":187,"column":49},"end":{"line":187,"column":83}}]},"10":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":30},"end":{"line":197,"column":45}},{"start":{"line":197,"column":49},"end":{"line":197,"column":51}}]},"11":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"12":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":36}},{"start":{"line":254,"column":40},"end":{"line":254,"column":71}}]},"13":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":9},"end":{"line":285,"column":12}},{"start":{"line":285,"column":16},"end":{"line":285,"column":77}}]},"14":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":310,"column":2}},{"start":{"line":310,"column":2},"end":{"line":310,"column":2}}]},"15":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":28}},{"start":{"line":310,"column":32},"end":{"line":310,"column":59}}]},"16":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"17":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"18":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"19":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"20":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":6},"end":{"line":351,"column":28}},{"start":{"line":351,"column":32},"end":{"line":351,"column":74}}]},"21":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]}},"code":["var buildSearchMethod = require('./buildSearchMethod.js');","var deprecate = require('./deprecate.js');","var deprecatedMessage = require('./deprecatedMessage.js');","","module.exports = IndexCore;","","/*","* Index class constructor.","* You should not use this method directly but use initIndex() function","*/","function IndexCore(algoliasearch, indexName) {","  this.indexName = indexName;","  this.as = algoliasearch;","  this.typeAheadArgs = null;","  this.typeAheadValueOption = null;","","  // make sure every index instance has it's own cache","  this.cache = {};","}","","/*","* Clear all queries in cache","*/","IndexCore.prototype.clearCache = function() {","  this.cache = {};","};","","/*","* Search inside the index using XMLHttpRequest request (Using a POST query to","* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).","*","* @param {string} [query] the full text query","* @param {object} [args] (optional) if set, contains an object with query parameters:","* - page: (integer) Pagination parameter used to select the page to retrieve.","*                   Page is zero-based and defaults to 0. Thus,","*                   to retrieve the 10th page you need to set page=9","* - hitsPerPage: (integer) Pagination parameter used to select the number of hits per page. Defaults to 20.","* - attributesToRetrieve: a string that contains the list of object attributes","* you want to retrieve (let you minimize the answer size).","*   Attributes are separated with a comma (for example \"name,address\").","*   You can also use an array (for example [\"name\",\"address\"]).","*   By default, all attributes are retrieved. You can also use '*' to retrieve all","*   values when an attributesToRetrieve setting is specified for your index.","* - attributesToHighlight: a string that contains the list of attributes you","*   want to highlight according to the query.","*   Attributes are separated by a comma. You can also use an array (for example [\"name\",\"address\"]).","*   If an attribute has no match for the query, the raw value is returned.","*   By default all indexed text attributes are highlighted.","*   You can use `*` if you want to highlight all textual attributes.","*   Numerical attributes are not highlighted.","*   A matchLevel is returned for each highlighted attribute and can contain:","*      - full: if all the query terms were found in the attribute,","*      - partial: if only some of the query terms were found,","*      - none: if none of the query terms were found.","* - attributesToSnippet: a string that contains the list of attributes to snippet alongside","* the number of words to return (syntax is `attributeName:nbWords`).","*    Attributes are separated by a comma (Example: attributesToSnippet=name:10,content:10).","*    You can also use an array (Example: attributesToSnippet: ['name:10','content:10']).","*    By default no snippet is computed.","* - minWordSizefor1Typo: the minimum number of characters in a query word to accept one typo in this word.","* Defaults to 3.","* - minWordSizefor2Typos: the minimum number of characters in a query word","* to accept two typos in this word. Defaults to 7.","* - getRankingInfo: if set to 1, the result hits will contain ranking","* information in _rankingInfo attribute.","* - aroundLatLng: search for entries around a given","* latitude/longitude (specified as two floats separated by a comma).","*   For example aroundLatLng=47.316669,5.016670).","*   You can specify the maximum distance in meters with the aroundRadius parameter (in meters)","*   and the precision for ranking with aroundPrecision","*   (for example if you set aroundPrecision=100, two objects that are distant of","*   less than 100m will be considered as identical for \"geo\" ranking parameter).","*   At indexing, you should specify geoloc of an object with the _geoloc attribute","*   (in the form {\"_geoloc\":{\"lat\":48.853409, \"lng\":2.348800}})","* - insideBoundingBox: search entries inside a given area defined by the two extreme points","* of a rectangle (defined by 4 floats: p1Lat,p1Lng,p2Lat,p2Lng).","*   For example insideBoundingBox=47.3165,4.9665,47.3424,5.0201).","*   At indexing, you should specify geoloc of an object with the _geoloc attribute","*   (in the form {\"_geoloc\":{\"lat\":48.853409, \"lng\":2.348800}})","* - numericFilters: a string that contains the list of numeric filters you want to","* apply separated by a comma.","*   The syntax of one filter is `attributeName` followed by `operand` followed by `value`.","*   Supported operands are `<`, `<=`, `=`, `>` and `>=`.","*   You can have multiple conditions on one attribute like for example numericFilters=price>100,price<1000.","*   You can also use an array (for example numericFilters: [\"price>100\",\"price<1000\"]).","* - tagFilters: filter the query by a set of tags. You can AND tags by separating them by commas.","*   To OR tags, you must add parentheses. For example, tags=tag1,(tag2,tag3) means tag1 AND (tag2 OR tag3).","*   You can also use an array, for example tagFilters: [\"tag1\",[\"tag2\",\"tag3\"]]","*   means tag1 AND (tag2 OR tag3).","*   At indexing, tags should be added in the _tags** attribute","*   of objects (for example {\"_tags\":[\"tag1\",\"tag2\"]}).","* - facetFilters: filter the query by a list of facets.","*   Facets are separated by commas and each facet is encoded as `attributeName:value`.","*   For example: `facetFilters=category:Book,author:John%20Doe`.","*   You can also use an array (for example `[\"category:Book\",\"author:John%20Doe\"]`).","* - facets: List of object attributes that you want to use for faceting.","*   Comma separated list: `\"category,author\"` or array `['category','author']`","*   Only attributes that have been added in **attributesForFaceting** index setting","*   can be used in this parameter.","*   You can also use `*` to perform faceting on all attributes specified in **attributesForFaceting**.","* - queryType: select how the query words are interpreted, it can be one of the following value:","*    - prefixAll: all query words are interpreted as prefixes,","*    - prefixLast: only the last word is interpreted as a prefix (default behavior),","*    - prefixNone: no query word is interpreted as a prefix. This option is not recommended.","* - optionalWords: a string that contains the list of words that should","* be considered as optional when found in the query.","*   Comma separated and array are accepted.","* - distinct: If set to 1, enable the distinct feature (disabled by default)","* if the attributeForDistinct index setting is set.","*   This feature is similar to the SQL \"distinct\" keyword: when enabled","*   in a query with the distinct=1 parameter,","*   all hits containing a duplicate value for the attributeForDistinct attribute are removed from results.","*   For example, if the chosen attribute is show_name and several hits have","*   the same value for show_name, then only the best","*   one is kept and others are removed.","* - restrictSearchableAttributes: List of attributes you want to use for","* textual search (must be a subset of the attributesToIndex index setting)","* either comma separated or as an array","* @param {function} [callback] the result callback called with two arguments:","*  error: null or Error('message'). If false, the content contains the error.","*  content: the server answer that contains the list of results.","*/","IndexCore.prototype.search = buildSearchMethod('query');","","/*","* -- BETA --","* Search a record similar to the query inside the index using XMLHttpRequest request (Using a POST query to","* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).","*","* @param {string} [query] the similar query","* @param {object} [args] (optional) if set, contains an object with query parameters.","*   All search parameters are supported (see search function), restrictSearchableAttributes and facetFilters","*   are the two most useful to restrict the similar results and get more relevant content","*/","IndexCore.prototype.similarSearch = buildSearchMethod('similarQuery');","","/*","* Browse index content. The response content will have a `cursor` property that you can use","* to browse subsequent pages for this query. Use `index.browseFrom(cursor)` when you want.","*","* @param {string} query - The full text query","* @param {Object} [queryParameters] - Any search query parameter","* @param {Function} [callback] - The result callback called with two arguments","*   error: null or Error('message')","*   content: the server answer with the browse result","* @return {Promise|undefined} Returns a promise if no callback given","* @example","* index.browse('cool songs', {","*   tagFilters: 'public,comments',","*   hitsPerPage: 500","* }, callback);","* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}","*/","IndexCore.prototype.browse = function(query, queryParameters, callback) {","  var merge = require('./merge.js');","","  var indexObj = this;","","  var page;","  var hitsPerPage;","","  // we check variadic calls that are not the one defined","  // .browse()/.browse(fn)","  // => page = 0","  if (arguments.length === 0 || arguments.length === 1 && typeof arguments[0] === 'function') {","    page = 0;","    callback = arguments[0];","    query = undefined;","  } else if (typeof arguments[0] === 'number') {","    // .browse(2)/.browse(2, 10)/.browse(2, fn)/.browse(2, 10, fn)","    page = arguments[0];","    if (typeof arguments[1] === 'number') {","      hitsPerPage = arguments[1];","    } else if (typeof arguments[1] === 'function') {","      callback = arguments[1];","      hitsPerPage = undefined;","    }","    query = undefined;","    queryParameters = undefined;","  } else if (typeof arguments[0] === 'object') {","    // .browse(queryParameters)/.browse(queryParameters, cb)","    if (typeof arguments[1] === 'function') {","      callback = arguments[1];","    }","    queryParameters = arguments[0];","    query = undefined;","  } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {","    // .browse(query, cb)","    callback = arguments[1];","    queryParameters = undefined;","  }","","  // otherwise it's a .browse(query)/.browse(query, queryParameters)/.browse(query, queryParameters, cb)","","  // get search query parameters combining various possible calls","  // to .browse();","  queryParameters = merge({}, queryParameters || {}, {","    page: page,","    hitsPerPage: hitsPerPage,","    query: query","  });","","  var params = this.as._getSearchParams(queryParameters, '');","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/browse',","    body: {params: params},","    hostType: 'read',","    callback: callback","  });","};","","/*","* Continue browsing from a previous position (cursor), obtained via a call to `.browse()`.","*","* @param {string} query - The full text query","* @param {Object} [queryParameters] - Any search query parameter","* @param {Function} [callback] - The result callback called with two arguments","*   error: null or Error('message')","*   content: the server answer with the browse result","* @return {Promise|undefined} Returns a promise if no callback given","* @example","* index.browseFrom('14lkfsakl32', callback);","* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}","*/","IndexCore.prototype.browseFrom = function(cursor, callback) {","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/browse',","    body: {cursor: cursor},","    hostType: 'read',","    callback: callback","  });","};","","/*","* Search for facet values","* https://www.algolia.com/doc/rest-api/search#search-for-facet-values","*","* @param {string} params.facetName Facet name, name of the attribute to search for values in.","* Must be declared as a facet","* @param {string} params.facetQuery Query for the facet search","* @param {string} [params.*] Any search parameter of Algolia,","* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters","* Pagination is not supported. The page and hitsPerPage parameters will be ignored.","* @param callback (optional)","*/","IndexCore.prototype.searchForFacetValues = function(params, callback) {","  var clone = require('./clone.js');","  var omit = require('./omit.js');","  var usage = 'Usage: index.searchForFacetValues({facetName, facetQuery, ...params}[, callback])';","","  if (params.facetName === undefined || params.facetQuery === undefined) {","    throw new Error(usage);","  }","","  var facetName = params.facetName;","  var filteredParams = omit(clone(params), function(keyName) {","    return keyName === 'facetName';","  });","  var searchParameters = this.as._getSearchParams(filteredParams, '');","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/' +","      encodeURIComponent(this.indexName) + '/facets/' + encodeURIComponent(facetName) + '/query',","    hostType: 'read',","    body: {params: searchParameters},","    callback: callback","  });","};","","IndexCore.prototype.searchFacet = deprecate(function(params, callback) {","  return this.searchForFacetValues(params, callback);","}, deprecatedMessage(","  'index.searchFacet(params[, callback])',","  'index.searchForFacetValues(params[, callback])'","));","","IndexCore.prototype._search = function(params, url, callback, additionalUA) {","  return this.as._jsonRequest({","    cache: this.cache,","    method: 'POST',","    url: url || '/1/indexes/' + encodeURIComponent(this.indexName) + '/query',","    body: {params: params},","    hostType: 'read',","    fallback: {","      method: 'GET',","      url: '/1/indexes/' + encodeURIComponent(this.indexName),","      body: {params: params}","    },","    callback: callback,","    additionalUA: additionalUA","  });","};","","/*","* Get an object from this index","*","* @param objectID the unique identifier of the object to retrieve","* @param attrs (optional) if set, contains the array of attribute names to retrieve","* @param callback (optional) the result callback called with two arguments","*  error: null or Error('message')","*  content: the object to retrieve or the error message if a failure occured","*/","IndexCore.prototype.getObject = function(objectID, attrs, callback) {","  var indexObj = this;","","  if (arguments.length === 1 || typeof attrs === 'function') {","    callback = attrs;","    attrs = undefined;","  }","","  var params = '';","  if (attrs !== undefined) {","    params = '?attributes=';","    for (var i = 0; i < attrs.length; ++i) {","      if (i !== 0) {","        params += ',';","      }","      params += attrs[i];","    }","  }","","  return this.as._jsonRequest({","    method: 'GET',","    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID) + params,","    hostType: 'read',","    callback: callback","  });","};","","/*","* Get several objects from this index","*","* @param objectIDs the array of unique identifier of objects to retrieve","*/","IndexCore.prototype.getObjects = function(objectIDs, attributesToRetrieve, callback) {","  var isArray = require('isarray');","  var map = require('./map.js');","","  var usage = 'Usage: index.getObjects(arrayOfObjectIDs[, callback])';","","  if (!isArray(objectIDs)) {","    throw new Error(usage);","  }","","  var indexObj = this;","","  if (arguments.length === 1 || typeof attributesToRetrieve === 'function') {","    callback = attributesToRetrieve;","    attributesToRetrieve = undefined;","  }","","  var body = {","    requests: map(objectIDs, function prepareRequest(objectID) {","      var request = {","        indexName: indexObj.indexName,","        objectID: objectID","      };","","      if (attributesToRetrieve) {","        request.attributesToRetrieve = attributesToRetrieve.join(',');","      }","","      return request;","    })","  };","","  return this.as._jsonRequest({","    method: 'POST',","    url: '/1/indexes/*/objects',","    hostType: 'read',","    body: body,","    callback: callback","  });","};","","IndexCore.prototype.as = null;","IndexCore.prototype.indexName = null;","IndexCore.prototype.typeAheadArgs = null;","IndexCore.prototype.typeAheadValueOption = null;",""],"l":{"1":1,"2":1,"3":1,"5":1,"11":1,"12":0,"13":0,"14":0,"15":0,"18":0,"24":1,"25":0,"123":1,"135":1,"154":1,"155":0,"157":0,"159":0,"160":0,"165":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"179":0,"180":0,"182":0,"183":0,"185":0,"186":0,"187":0,"189":0,"190":0,"197":0,"203":0,"205":0,"227":1,"228":0,"249":1,"250":0,"251":0,"252":0,"254":0,"255":0,"258":0,"259":0,"260":0,"262":0,"264":0,"274":1,"275":0,"281":1,"282":0,"307":1,"308":0,"310":0,"311":0,"312":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"322":0,"326":0,"339":1,"340":0,"341":0,"343":0,"345":0,"346":0,"349":0,"351":0,"352":0,"353":0,"356":0,"358":0,"363":0,"364":0,"367":0,"371":0,"380":1,"381":1,"382":1,"383":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/deprecate.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/deprecate.js","s":{"1":1,"2":17,"3":1,"4":0,"5":0,"6":0,"7":0,"8":17},"b":{"1":[0,0]},"f":{"1":17,"2":0},"fnMap":{"1":{"name":"deprecate","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":49}}},"2":{"name":"deprecated","line":4,"loc":{"start":{"line":4,"column":2},"end":{"line":4,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":21}},"3":{"start":{"line":4,"column":2},"end":{"line":12,"column":3}},"4":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":7,"column":6},"end":{"line":7,"column":27}},"6":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]}},"code":["module.exports = function deprecate(fn, message) {","  var warned = false;","","  function deprecated() {","    if (!warned) {","      /* eslint no-console:0 */","      console.log(message);","      warned = true;","    }","","    return fn.apply(this, arguments);","  }","","  return deprecated;","};",""],"l":{"1":1,"2":17,"4":1,"5":0,"7":0,"8":0,"11":0,"14":17}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/deprecatedMessage.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/deprecatedMessage.js","s":{"1":1,"2":17,"3":17},"b":{},"f":{"1":17},"fnMap":{"1":{"name":"deprecatedMessage","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":23}},"3":{"start":{"line":6,"column":2},"end":{"line":7,"column":107}}},"branchMap":{},"code":["module.exports = function deprecatedMessage(previousUsage, newUsage) {","  var githubAnchorLink = previousUsage.toLowerCase()","    .replace('.', '')","    .replace('()', '');","","  return 'algoliasearch: `' + previousUsage + '` was replaced by `' + newUsage +","    '`. Please see https://github.com/algolia/algoliasearch-client-js/wiki/Deprecated#' + githubAnchorLink;","};",""],"l":{"1":1,"2":17,"6":17}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/exitPromise.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/exitPromise.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"exitPromise","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":55}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":21}}},"branchMap":{},"code":["// Parse cloud does not supports setTimeout","// We do not store a setTimeout reference in the client everytime","// We only fallback to a fake setTimeout when not available","// setTimeout cannot be override globally sadly","module.exports = function exitPromise(fn, _setTimeout) {","  _setTimeout(fn, 0);","};",""],"l":{"5":1,"6":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/AlgoliaSearchCore.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/AlgoliaSearchCore.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":1,"218":0,"219":1,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":1,"260":0,"261":1,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":1,"272":0,"273":0,"274":1,"275":0,"276":1,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0},"b":{"1":[1,0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"fnMap":{"1":{"name":"AlgoliaSearchCore","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":56}}},"2":{"name":"(anonymous_2)","line":93,"loc":{"start":{"line":93,"column":48},"end":{"line":93,"column":69}}},"3":{"name":"(anonymous_3)","line":134,"loc":{"start":{"line":134,"column":40},"end":{"line":134,"column":60}}},"4":{"name":"(anonymous_4)","line":144,"loc":{"start":{"line":144,"column":45},"end":{"line":144,"column":67}}},"5":{"name":"(anonymous_5)","line":156,"loc":{"start":{"line":156,"column":46},"end":{"line":156,"column":69}}},"6":{"name":"(anonymous_6)","line":165,"loc":{"start":{"line":165,"column":43},"end":{"line":165,"column":65}}},"7":{"name":"doRequest","line":198,"loc":{"start":{"line":198,"column":2},"end":{"line":198,"column":41}}},"8":{"name":"success","line":276,"loc":{"start":{"line":276,"column":4},"end":{"line":276,"column":35}}},"9":{"name":"tryFallback","line":342,"loc":{"start":{"line":342,"column":4},"end":{"line":342,"column":30}}},"10":{"name":"retryRequest","line":400,"loc":{"start":{"line":400,"column":4},"end":{"line":400,"column":28}}},"11":{"name":"retryRequestWithHigherTimeout","line":406,"loc":{"start":{"line":406,"column":4},"end":{"line":406,"column":45}}},"12":{"name":"okCb","line":428,"loc":{"start":{"line":428,"column":17},"end":{"line":428,"column":40}}},"13":{"name":"(anonymous_13)","line":429,"loc":{"start":{"line":429,"column":18},"end":{"line":429,"column":29}}},"14":{"name":"nookCb","line":432,"loc":{"start":{"line":432,"column":7},"end":{"line":432,"column":28}}},"15":{"name":"(anonymous_15)","line":433,"loc":{"start":{"line":433,"column":18},"end":{"line":433,"column":29}}},"16":{"name":"(anonymous_16)","line":448,"loc":{"start":{"line":448,"column":47},"end":{"line":448,"column":70}}},"17":{"name":"(anonymous_17)","line":461,"loc":{"start":{"line":461,"column":53},"end":{"line":461,"column":88}}},"18":{"name":"addToRequestHeaders","line":490,"loc":{"start":{"line":490,"column":31},"end":{"line":490,"column":68}}},"19":{"name":"(anonymous_19)","line":507,"loc":{"start":{"line":507,"column":37},"end":{"line":507,"column":71}}},"20":{"name":"prepareRequest","line":527,"loc":{"start":{"line":527,"column":27},"end":{"line":527,"column":58}}},"21":{"name":"prepareJSONPParams","line":544,"loc":{"start":{"line":544,"column":42},"end":{"line":544,"column":90}}},"22":{"name":"(anonymous_22)","line":579,"loc":{"start":{"line":579,"column":46},"end":{"line":579,"column":61}}},"23":{"name":"(anonymous_23)","line":603,"loc":{"start":{"line":603,"column":43},"end":{"line":603,"column":63}}},"24":{"name":"(anonymous_24)","line":611,"loc":{"start":{"line":611,"column":41},"end":{"line":611,"column":52}}},"25":{"name":"(anonymous_25)","line":620,"loc":{"start":{"line":620,"column":48},"end":{"line":620,"column":71}}},"26":{"name":"(anonymous_26)","line":630,"loc":{"start":{"line":630,"column":42},"end":{"line":630,"column":61}}},"27":{"name":"(anonymous_27)","line":638,"loc":{"start":{"line":638,"column":42},"end":{"line":638,"column":53}}},"28":{"name":"(anonymous_28)","line":642,"loc":{"start":{"line":642,"column":44},"end":{"line":642,"column":55}}},"29":{"name":"(anonymous_29)","line":648,"loc":{"start":{"line":648,"column":44},"end":{"line":648,"column":59}}},"30":{"name":"(anonymous_30)","line":654,"loc":{"start":{"line":654,"column":46},"end":{"line":654,"column":57}}},"31":{"name":"(anonymous_31)","line":664,"loc":{"start":{"line":664,"column":53},"end":{"line":664,"column":68}}},"32":{"name":"(anonymous_32)","line":672,"loc":{"start":{"line":672,"column":46},"end":{"line":672,"column":61}}},"33":{"name":"(anonymous_33)","line":678,"loc":{"start":{"line":678,"column":54},"end":{"line":678,"column":72}}},"34":{"name":"(anonymous_34)","line":681,"loc":{"start":{"line":681,"column":19},"end":{"line":681,"column":40}}},"35":{"name":"(anonymous_35)","line":688,"loc":{"start":{"line":688,"column":45},"end":{"line":688,"column":64}}},"36":{"name":"(anonymous_36)","line":692,"loc":{"start":{"line":692,"column":52},"end":{"line":692,"column":63}}},"37":{"name":"(anonymous_37)","line":696,"loc":{"start":{"line":696,"column":50},"end":{"line":696,"column":69}}},"38":{"name":"(anonymous_38)","line":700,"loc":{"start":{"line":700,"column":50},"end":{"line":700,"column":80}}},"39":{"name":"(anonymous_39)","line":708,"loc":{"start":{"line":708,"column":50},"end":{"line":708,"column":69}}},"40":{"name":"(anonymous_40)","line":714,"loc":{"start":{"line":714,"column":57},"end":{"line":714,"column":68}}},"41":{"name":"(anonymous_41)","line":719,"loc":{"start":{"line":719,"column":53},"end":{"line":719,"column":72}}},"42":{"name":"prepareHost","line":726,"loc":{"start":{"line":726,"column":0},"end":{"line":726,"column":31}}},"43":{"name":"prepare","line":727,"loc":{"start":{"line":727,"column":9},"end":{"line":727,"column":32}}},"44":{"name":"safeJSONStringify","line":739,"loc":{"start":{"line":739,"column":0},"end":{"line":739,"column":32}}},"45":{"name":"shuffle","line":754,"loc":{"start":{"line":754,"column":0},"end":{"line":754,"column":24}}},"46":{"name":"removeCredentials","line":774,"loc":{"start":{"line":774,"column":0},"end":{"line":774,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"7":{"start":{"line":12,"column":0},"end":{"line":14,"column":16}},"8":{"start":{"line":41,"column":0},"end":{"line":126,"column":1}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":48}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":36}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":35}},"12":{"start":{"line":46,"column":2},"end":{"line":46,"column":32}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":66}},"14":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":86}},"16":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":79}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":37}},"19":{"start":{"line":59,"column":2},"end":{"line":59,"column":23}},"20":{"start":{"line":61,"column":2},"end":{"line":64,"column":4}},"21":{"start":{"line":66,"column":2},"end":{"line":66,"column":20}},"22":{"start":{"line":68,"column":2},"end":{"line":68,"column":43}},"23":{"start":{"line":69,"column":2},"end":{"line":73,"column":4}},"24":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"25":{"start":{"line":77,"column":4},"end":{"line":77,"column":87}},"26":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":30}},"28":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":110}},"30":{"start":{"line":90,"column":2},"end":{"line":90,"column":25}},"31":{"start":{"line":92,"column":2},"end":{"line":108,"column":3}},"32":{"start":{"line":93,"column":4},"end":{"line":95,"column":7}},"33":{"start":{"line":94,"column":6},"end":{"line":94,"column":66}},"34":{"start":{"line":98,"column":4},"end":{"line":98,"column":85}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":82}},"36":{"start":{"line":100,"column":9},"end":{"line":108,"column":3}},"37":{"start":{"line":103,"column":4},"end":{"line":103,"column":40}},"38":{"start":{"line":104,"column":4},"end":{"line":104,"column":41}},"39":{"start":{"line":106,"column":4},"end":{"line":106,"column":45}},"40":{"start":{"line":107,"column":4},"end":{"line":107,"column":47}},"41":{"start":{"line":111,"column":2},"end":{"line":111,"column":64}},"42":{"start":{"line":112,"column":2},"end":{"line":112,"column":66}},"43":{"start":{"line":114,"column":2},"end":{"line":114,"column":25}},"44":{"start":{"line":117,"column":2},"end":{"line":117,"column":33}},"45":{"start":{"line":119,"column":2},"end":{"line":119,"column":22}},"46":{"start":{"line":120,"column":2},"end":{"line":120,"column":87}},"47":{"start":{"line":121,"column":2},"end":{"line":121,"column":79}},"48":{"start":{"line":123,"column":2},"end":{"line":123,"column":38}},"49":{"start":{"line":125,"column":2},"end":{"line":125,"column":31}},"50":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"51":{"start":{"line":135,"column":2},"end":{"line":135,"column":40}},"52":{"start":{"line":144,"column":0},"end":{"line":148,"column":2}},"53":{"start":{"line":145,"column":2},"end":{"line":147,"column":5}},"54":{"start":{"line":156,"column":0},"end":{"line":160,"column":2}},"55":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"56":{"start":{"line":158,"column":4},"end":{"line":158,"column":35}},"57":{"start":{"line":165,"column":0},"end":{"line":440,"column":2}},"58":{"start":{"line":166,"column":2},"end":{"line":166,"column":25}},"59":{"start":{"line":168,"column":2},"end":{"line":168,"column":74}},"60":{"start":{"line":170,"column":2},"end":{"line":170,"column":11}},"61":{"start":{"line":171,"column":2},"end":{"line":171,"column":52}},"62":{"start":{"line":172,"column":2},"end":{"line":172,"column":32}},"63":{"start":{"line":173,"column":2},"end":{"line":173,"column":20}},"64":{"start":{"line":174,"column":2},"end":{"line":174,"column":16}},"65":{"start":{"line":175,"column":2},"end":{"line":175,"column":28}},"66":{"start":{"line":176,"column":2},"end":{"line":176,"column":92}},"67":{"start":{"line":177,"column":2},"end":{"line":177,"column":14}},"68":{"start":{"line":179,"column":2},"end":{"line":189,"column":3}},"69":{"start":{"line":185,"column":4},"end":{"line":185,"column":42}},"70":{"start":{"line":186,"column":4},"end":{"line":186,"column":63}},"71":{"start":{"line":188,"column":4},"end":{"line":188,"column":56}},"72":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"73":{"start":{"line":192,"column":4},"end":{"line":192,"column":47}},"74":{"start":{"line":195,"column":2},"end":{"line":195,"column":32}},"75":{"start":{"line":196,"column":2},"end":{"line":196,"column":21}},"76":{"start":{"line":198,"column":2},"end":{"line":413,"column":3}},"77":{"start":{"line":199,"column":4},"end":{"line":199,"column":29}},"78":{"start":{"line":201,"column":4},"end":{"line":201,"column":31}},"79":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"80":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"81":{"start":{"line":205,"column":6},"end":{"line":205,"column":32}},"82":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"83":{"start":{"line":211,"column":6},"end":{"line":211,"column":41}},"84":{"start":{"line":215,"column":4},"end":{"line":218,"column":5}},"85":{"start":{"line":216,"column":6},"end":{"line":216,"column":50}},"86":{"start":{"line":217,"column":6},"end":{"line":217,"column":65}},"87":{"start":{"line":221,"column":4},"end":{"line":251,"column":5}},"88":{"start":{"line":222,"column":6},"end":{"line":230,"column":7}},"89":{"start":{"line":223,"column":8},"end":{"line":223,"column":51}},"90":{"start":{"line":225,"column":8},"end":{"line":229,"column":11}},"91":{"start":{"line":232,"column":6},"end":{"line":232,"column":44}},"92":{"start":{"line":235,"column":6},"end":{"line":235,"column":16}},"93":{"start":{"line":238,"column":6},"end":{"line":238,"column":51}},"94":{"start":{"line":239,"column":6},"end":{"line":239,"column":45}},"95":{"start":{"line":240,"column":6},"end":{"line":240,"column":51}},"96":{"start":{"line":241,"column":6},"end":{"line":243,"column":7}},"97":{"start":{"line":242,"column":8},"end":{"line":242,"column":59}},"98":{"start":{"line":245,"column":6},"end":{"line":245,"column":60}},"99":{"start":{"line":247,"column":6},"end":{"line":247,"column":77}},"100":{"start":{"line":248,"column":6},"end":{"line":248,"column":58}},"101":{"start":{"line":249,"column":6},"end":{"line":249,"column":27}},"102":{"start":{"line":250,"column":6},"end":{"line":250,"column":58}},"103":{"start":{"line":253,"column":4},"end":{"line":253,"column":66}},"104":{"start":{"line":255,"column":4},"end":{"line":255,"column":40}},"105":{"start":{"line":256,"column":4},"end":{"line":263,"column":6}},"106":{"start":{"line":265,"column":4},"end":{"line":266,"column":62}},"107":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"108":{"start":{"line":269,"column":6},"end":{"line":269,"column":37}},"109":{"start":{"line":274,"column":4},"end":{"line":274,"column":75}},"110":{"start":{"line":276,"column":4},"end":{"line":340,"column":5}},"111":{"start":{"line":285,"column":6},"end":{"line":295,"column":49}},"112":{"start":{"line":297,"column":6},"end":{"line":298,"column":63}},"113":{"start":{"line":300,"column":6},"end":{"line":300,"column":58}},"114":{"start":{"line":302,"column":6},"end":{"line":302,"column":31}},"115":{"start":{"line":303,"column":6},"end":{"line":315,"column":9}},"116":{"start":{"line":317,"column":6},"end":{"line":323,"column":7}},"117":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"118":{"start":{"line":319,"column":10},"end":{"line":319,"column":53}},"119":{"start":{"line":322,"column":8},"end":{"line":322,"column":33}},"120":{"start":{"line":325,"column":6},"end":{"line":325,"column":55}},"121":{"start":{"line":327,"column":6},"end":{"line":330,"column":7}},"122":{"start":{"line":328,"column":8},"end":{"line":328,"column":19}},"123":{"start":{"line":329,"column":8},"end":{"line":329,"column":30}},"124":{"start":{"line":332,"column":6},"end":{"line":332,"column":42}},"125":{"start":{"line":335,"column":6},"end":{"line":337,"column":8}},"126":{"start":{"line":339,"column":6},"end":{"line":339,"column":56}},"127":{"start":{"line":342,"column":4},"end":{"line":398,"column":5}},"128":{"start":{"line":353,"column":6},"end":{"line":353,"column":67}},"129":{"start":{"line":355,"column":6},"end":{"line":355,"column":31}},"130":{"start":{"line":356,"column":6},"end":{"line":367,"column":9}},"131":{"start":{"line":369,"column":6},"end":{"line":371,"column":7}},"132":{"start":{"line":370,"column":8},"end":{"line":370,"column":58}},"133":{"start":{"line":373,"column":6},"end":{"line":373,"column":17}},"134":{"start":{"line":376,"column":6},"end":{"line":390,"column":7}},"135":{"start":{"line":388,"column":8},"end":{"line":388,"column":34}},"136":{"start":{"line":389,"column":8},"end":{"line":389,"column":43}},"137":{"start":{"line":393,"column":6},"end":{"line":395,"column":7}},"138":{"start":{"line":394,"column":8},"end":{"line":394,"column":47}},"139":{"start":{"line":397,"column":6},"end":{"line":397,"column":28}},"140":{"start":{"line":400,"column":4},"end":{"line":404,"column":5}},"141":{"start":{"line":401,"column":6},"end":{"line":401,"column":39}},"142":{"start":{"line":402,"column":6},"end":{"line":402,"column":55}},"143":{"start":{"line":403,"column":6},"end":{"line":403,"column":43}},"144":{"start":{"line":406,"column":4},"end":{"line":412,"column":5}},"145":{"start":{"line":407,"column":6},"end":{"line":407,"column":59}},"146":{"start":{"line":408,"column":6},"end":{"line":408,"column":55}},"147":{"start":{"line":409,"column":6},"end":{"line":409,"column":42}},"148":{"start":{"line":410,"column":6},"end":{"line":410,"column":77}},"149":{"start":{"line":411,"column":6},"end":{"line":411,"column":43}},"150":{"start":{"line":415,"column":2},"end":{"line":423,"column":4}},"151":{"start":{"line":427,"column":2},"end":{"line":439,"column":3}},"152":{"start":{"line":428,"column":4},"end":{"line":436,"column":7}},"153":{"start":{"line":429,"column":6},"end":{"line":431,"column":43}},"154":{"start":{"line":430,"column":8},"end":{"line":430,"column":44}},"155":{"start":{"line":433,"column":6},"end":{"line":435,"column":43}},"156":{"start":{"line":434,"column":8},"end":{"line":434,"column":34}},"157":{"start":{"line":438,"column":4},"end":{"line":438,"column":19}},"158":{"start":{"line":448,"column":0},"end":{"line":459,"column":2}},"159":{"start":{"line":449,"column":2},"end":{"line":451,"column":3}},"160":{"start":{"line":450,"column":4},"end":{"line":450,"column":18}},"161":{"start":{"line":452,"column":2},"end":{"line":457,"column":3}},"162":{"start":{"line":453,"column":4},"end":{"line":456,"column":5}},"163":{"start":{"line":454,"column":6},"end":{"line":454,"column":41}},"164":{"start":{"line":455,"column":6},"end":{"line":455,"column":154}},"165":{"start":{"line":458,"column":2},"end":{"line":458,"column":16}},"166":{"start":{"line":461,"column":0},"end":{"line":496,"column":2}},"167":{"start":{"line":462,"column":2},"end":{"line":462,"column":35}},"168":{"start":{"line":464,"column":2},"end":{"line":466,"column":13}},"169":{"start":{"line":468,"column":2},"end":{"line":471,"column":4}},"170":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"171":{"start":{"line":478,"column":4},"end":{"line":478,"column":54}},"172":{"start":{"line":481,"column":2},"end":{"line":483,"column":3}},"173":{"start":{"line":482,"column":4},"end":{"line":482,"column":59}},"174":{"start":{"line":485,"column":2},"end":{"line":487,"column":3}},"175":{"start":{"line":486,"column":4},"end":{"line":486,"column":63}},"176":{"start":{"line":489,"column":2},"end":{"line":493,"column":3}},"177":{"start":{"line":490,"column":4},"end":{"line":492,"column":7}},"178":{"start":{"line":491,"column":6},"end":{"line":491,"column":49}},"179":{"start":{"line":495,"column":2},"end":{"line":495,"column":24}},"180":{"start":{"line":507,"column":0},"end":{"line":573,"column":2}},"181":{"start":{"line":508,"column":2},"end":{"line":508,"column":35}},"182":{"start":{"line":509,"column":2},"end":{"line":509,"column":32}},"183":{"start":{"line":511,"column":2},"end":{"line":511,"column":65}},"184":{"start":{"line":513,"column":2},"end":{"line":515,"column":3}},"185":{"start":{"line":514,"column":4},"end":{"line":514,"column":27}},"186":{"start":{"line":517,"column":2},"end":{"line":522,"column":3}},"187":{"start":{"line":518,"column":4},"end":{"line":518,"column":20}},"188":{"start":{"line":519,"column":4},"end":{"line":519,"column":14}},"189":{"start":{"line":520,"column":9},"end":{"line":522,"column":3}},"190":{"start":{"line":521,"column":4},"end":{"line":521,"column":14}},"191":{"start":{"line":524,"column":2},"end":{"line":524,"column":20}},"192":{"start":{"line":526,"column":2},"end":{"line":542,"column":4}},"193":{"start":{"line":528,"column":6},"end":{"line":528,"column":22}},"194":{"start":{"line":533,"column":6},"end":{"line":535,"column":7}},"195":{"start":{"line":534,"column":8},"end":{"line":534,"column":61}},"196":{"start":{"line":537,"column":6},"end":{"line":540,"column":8}},"197":{"start":{"line":544,"column":2},"end":{"line":550,"column":15}},"198":{"start":{"line":545,"column":4},"end":{"line":549,"column":8}},"199":{"start":{"line":552,"column":2},"end":{"line":552,"column":35}},"200":{"start":{"line":554,"column":2},"end":{"line":556,"column":3}},"201":{"start":{"line":555,"column":4},"end":{"line":555,"column":40}},"202":{"start":{"line":558,"column":2},"end":{"line":572,"column":5}},"203":{"start":{"line":579,"column":0},"end":{"line":597,"column":2}},"204":{"start":{"line":580,"column":2},"end":{"line":594,"column":3}},"205":{"start":{"line":581,"column":4},"end":{"line":581,"column":21}},"206":{"start":{"line":582,"column":4},"end":{"line":592,"column":5}},"207":{"start":{"line":583,"column":6},"end":{"line":591,"column":7}},"208":{"start":{"line":584,"column":8},"end":{"line":584,"column":26}},"209":{"start":{"line":585,"column":8},"end":{"line":587,"column":9}},"210":{"start":{"line":586,"column":10},"end":{"line":586,"column":36}},"211":{"start":{"line":588,"column":8},"end":{"line":588,"column":53}},"212":{"start":{"line":590,"column":8},"end":{"line":590,"column":30}},"213":{"start":{"line":593,"column":4},"end":{"line":593,"column":29}},"214":{"start":{"line":596,"column":2},"end":{"line":596,"column":27}},"215":{"start":{"line":603,"column":0},"end":{"line":605,"column":2}},"216":{"start":{"line":604,"column":2},"end":{"line":604,"column":29}},"217":{"start":{"line":611,"column":0},"end":{"line":613,"column":2}},"218":{"start":{"line":612,"column":2},"end":{"line":612,"column":18}},"219":{"start":{"line":620,"column":0},"end":{"line":624,"column":2}},"220":{"start":{"line":621,"column":2},"end":{"line":623,"column":3}},"221":{"start":{"line":622,"column":4},"end":{"line":622,"column":87}},"222":{"start":{"line":630,"column":0},"end":{"line":632,"column":2}},"223":{"start":{"line":631,"column":2},"end":{"line":631,"column":28}},"224":{"start":{"line":638,"column":0},"end":{"line":640,"column":2}},"225":{"start":{"line":639,"column":2},"end":{"line":639,"column":24}},"226":{"start":{"line":642,"column":0},"end":{"line":646,"column":2}},"227":{"start":{"line":643,"column":2},"end":{"line":643,"column":43}},"228":{"start":{"line":644,"column":2},"end":{"line":644,"column":48}},"229":{"start":{"line":644,"column":21},"end":{"line":644,"column":48}},"230":{"start":{"line":645,"column":2},"end":{"line":645,"column":14}},"231":{"start":{"line":648,"column":0},"end":{"line":652,"column":2}},"232":{"start":{"line":649,"column":2},"end":{"line":649,"column":43}},"233":{"start":{"line":650,"column":2},"end":{"line":650,"column":29}},"234":{"start":{"line":651,"column":2},"end":{"line":651,"column":45}},"235":{"start":{"line":654,"column":0},"end":{"line":662,"column":2}},"236":{"start":{"line":655,"column":2},"end":{"line":655,"column":34}},"237":{"start":{"line":656,"column":2},"end":{"line":656,"column":35}},"238":{"start":{"line":657,"column":2},"end":{"line":659,"column":3}},"239":{"start":{"line":658,"column":4},"end":{"line":658,"column":45}},"240":{"start":{"line":661,"column":2},"end":{"line":661,"column":14}},"241":{"start":{"line":664,"column":0},"end":{"line":670,"column":2}},"242":{"start":{"line":665,"column":2},"end":{"line":665,"column":27}},"243":{"start":{"line":666,"column":2},"end":{"line":666,"column":44}},"244":{"start":{"line":667,"column":2},"end":{"line":667,"column":32}},"245":{"start":{"line":668,"column":2},"end":{"line":668,"column":70}},"246":{"start":{"line":669,"column":2},"end":{"line":669,"column":37}},"247":{"start":{"line":672,"column":0},"end":{"line":676,"column":2}},"248":{"start":{"line":673,"column":2},"end":{"line":673,"column":39}},"249":{"start":{"line":674,"column":2},"end":{"line":674,"column":51}},"250":{"start":{"line":675,"column":2},"end":{"line":675,"column":43}},"251":{"start":{"line":678,"column":0},"end":{"line":686,"column":2}},"252":{"start":{"line":679,"column":2},"end":{"line":679,"column":35}},"253":{"start":{"line":680,"column":2},"end":{"line":680,"column":41}},"254":{"start":{"line":681,"column":2},"end":{"line":683,"column":5}},"255":{"start":{"line":682,"column":4},"end":{"line":682,"column":29}},"256":{"start":{"line":685,"column":2},"end":{"line":685,"column":41}},"257":{"start":{"line":688,"column":0},"end":{"line":690,"column":2}},"258":{"start":{"line":689,"column":2},"end":{"line":689,"column":66}},"259":{"start":{"line":692,"column":0},"end":{"line":694,"column":2}},"260":{"start":{"line":693,"column":2},"end":{"line":693,"column":33}},"261":{"start":{"line":696,"column":0},"end":{"line":698,"column":2}},"262":{"start":{"line":697,"column":2},"end":{"line":697,"column":37}},"263":{"start":{"line":700,"column":0},"end":{"line":706,"column":2}},"264":{"start":{"line":701,"column":2},"end":{"line":701,"column":33}},"265":{"start":{"line":702,"column":2},"end":{"line":702,"column":48}},"266":{"start":{"line":703,"column":2},"end":{"line":703,"column":39}},"267":{"start":{"line":704,"column":2},"end":{"line":704,"column":62}},"268":{"start":{"line":705,"column":2},"end":{"line":705,"column":19}},"269":{"start":{"line":708,"column":0},"end":{"line":712,"column":2}},"270":{"start":{"line":709,"column":2},"end":{"line":711,"column":4}},"271":{"start":{"line":714,"column":0},"end":{"line":717,"column":2}},"272":{"start":{"line":715,"column":2},"end":{"line":715,"column":67}},"273":{"start":{"line":716,"column":2},"end":{"line":716,"column":78}},"274":{"start":{"line":719,"column":0},"end":{"line":724,"column":2}},"275":{"start":{"line":720,"column":2},"end":{"line":723,"column":4}},"276":{"start":{"line":726,"column":0},"end":{"line":730,"column":1}},"277":{"start":{"line":727,"column":2},"end":{"line":729,"column":4}},"278":{"start":{"line":728,"column":4},"end":{"line":728,"column":48}},"279":{"start":{"line":739,"column":0},"end":{"line":752,"column":1}},"280":{"start":{"line":742,"column":2},"end":{"line":744,"column":3}},"281":{"start":{"line":743,"column":4},"end":{"line":743,"column":31}},"282":{"start":{"line":746,"column":2},"end":{"line":746,"column":38}},"283":{"start":{"line":747,"column":2},"end":{"line":747,"column":32}},"284":{"start":{"line":748,"column":2},"end":{"line":748,"column":32}},"285":{"start":{"line":749,"column":2},"end":{"line":749,"column":34}},"286":{"start":{"line":751,"column":2},"end":{"line":751,"column":13}},"287":{"start":{"line":754,"column":0},"end":{"line":772,"column":1}},"288":{"start":{"line":755,"column":2},"end":{"line":755,"column":34}},"289":{"start":{"line":756,"column":2},"end":{"line":756,"column":21}},"290":{"start":{"line":757,"column":2},"end":{"line":757,"column":18}},"291":{"start":{"line":760,"column":2},"end":{"line":769,"column":3}},"292":{"start":{"line":762,"column":4},"end":{"line":762,"column":59}},"293":{"start":{"line":763,"column":4},"end":{"line":763,"column":22}},"294":{"start":{"line":766,"column":4},"end":{"line":766,"column":41}},"295":{"start":{"line":767,"column":4},"end":{"line":767,"column":45}},"296":{"start":{"line":768,"column":4},"end":{"line":768,"column":40}},"297":{"start":{"line":771,"column":2},"end":{"line":771,"column":15}},"298":{"start":{"line":774,"column":0},"end":{"line":792,"column":1}},"299":{"start":{"line":775,"column":2},"end":{"line":775,"column":22}},"300":{"start":{"line":777,"column":2},"end":{"line":789,"column":3}},"301":{"start":{"line":778,"column":4},"end":{"line":788,"column":5}},"302":{"start":{"line":779,"column":6},"end":{"line":779,"column":16}},"303":{"start":{"line":781,"column":6},"end":{"line":785,"column":7}},"304":{"start":{"line":782,"column":8},"end":{"line":782,"column":51}},"305":{"start":{"line":784,"column":8},"end":{"line":784,"column":36}},"306":{"start":{"line":787,"column":6},"end":{"line":787,"column":37}},"307":{"start":{"line":791,"column":2},"end":{"line":791,"column":20}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":34}},{"start":{"line":13,"column":38},"end":{"line":13,"column":84}},{"start":{"line":14,"column":2},"end":{"line":14,"column":15}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":42}},{"start":{"line":50,"column":46},"end":{"line":50,"column":60}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":42}},{"start":{"line":54,"column":46},"end":{"line":54,"column":53}}]},"6":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":9},"end":{"line":66,"column":13}},{"start":{"line":66,"column":17},"end":{"line":66,"column":19}}]},"7":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":17},"end":{"line":68,"column":30}},{"start":{"line":68,"column":34},"end":{"line":68,"column":42}}]},"8":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":19},"end":{"line":69,"column":32}},{"start":{"line":69,"column":36},"end":{"line":73,"column":3}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"12":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":31}},{"start":{"line":86,"column":35},"end":{"line":86,"column":61}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"14":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":100,"column":9}},{"start":{"line":100,"column":9},"end":{"line":100,"column":9}}]},"15":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":15},"end":{"line":117,"column":26}},{"start":{"line":117,"column":30},"end":{"line":117,"column":32}}]},"16":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":65},"end":{"line":120,"column":69}},{"start":{"line":120,"column":72},"end":{"line":120,"column":86}}]},"17":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":19},"end":{"line":120,"column":47}},{"start":{"line":120,"column":51},"end":{"line":120,"column":62}}]},"18":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":55},"end":{"line":121,"column":59}},{"start":{"line":121,"column":62},"end":{"line":121,"column":78}}]},"19":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"20":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":21},"end":{"line":171,"column":45}},{"start":{"line":171,"column":49},"end":{"line":171,"column":51}}]},"21":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":20},"end":{"line":176,"column":39}},{"start":{"line":176,"column":43},"end":{"line":176,"column":67}},{"start":{"line":176,"column":71},"end":{"line":176,"column":91}}]},"22":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"23":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":43}},{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},{"start":{"line":182,"column":5},"end":{"line":182,"column":42}},{"start":{"line":183,"column":4},"end":{"line":183,"column":43}}]},"24":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"25":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"26":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"27":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":24}},{"start":{"line":210,"column":28},"end":{"line":210,"column":32}}]},"28":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"29":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":24}},{"start":{"line":215,"column":28},"end":{"line":215,"column":33}},{"start":{"line":215,"column":37},"end":{"line":215,"column":65}}]},"30":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"31":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"32":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":10},"end":{"line":222,"column":22}},{"start":{"line":222,"column":26},"end":{"line":222,"column":39}}]},"33":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":6}},{"start":{"line":241,"column":6},"end":{"line":241,"column":6}}]},"34":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"35":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":19},"end":{"line":285,"column":31}},{"start":{"line":285,"column":35},"end":{"line":285,"column":52}},{"start":{"line":285,"column":56},"end":{"line":285,"column":81}},{"start":{"line":285,"column":85},"end":{"line":285,"column":109}},{"start":{"line":290,"column":8},"end":{"line":290,"column":31}},{"start":{"line":295,"column":8},"end":{"line":295,"column":20}},{"start":{"line":295,"column":24},"end":{"line":295,"column":41}},{"start":{"line":295,"column":45},"end":{"line":295,"column":48}}]},"36":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":17},"end":{"line":306,"column":21}},{"start":{"line":306,"column":25},"end":{"line":306,"column":29}}]},"37":{"line":307,"type":"cond-expr","locations":[{"start":{"line":307,"column":44},"end":{"line":307,"column":55}},{"start":{"line":307,"column":58},"end":{"line":307,"column":62}}]},"38":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"39":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":8}},{"start":{"line":318,"column":8},"end":{"line":318,"column":8}}]},"40":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":12},"end":{"line":318,"column":28}},{"start":{"line":318,"column":32},"end":{"line":318,"column":37}}]},"41":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":6}},{"start":{"line":327,"column":6},"end":{"line":327,"column":6}}]},"42":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":8},"end":{"line":336,"column":25}},{"start":{"line":336,"column":29},"end":{"line":336,"column":54}}]},"43":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":17},"end":{"line":359,"column":21}},{"start":{"line":359,"column":25},"end":{"line":359,"column":29}}]},"44":{"line":360,"type":"cond-expr","locations":[{"start":{"line":360,"column":44},"end":{"line":360,"column":55}},{"start":{"line":360,"column":58},"end":{"line":360,"column":62}}]},"45":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":6}},{"start":{"line":369,"column":6},"end":{"line":369,"column":6}}]},"46":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":33},"end":{"line":370,"column":36}},{"start":{"line":370,"column":40},"end":{"line":370,"column":51}}]},"47":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":6},"end":{"line":376,"column":6}},{"start":{"line":376,"column":6},"end":{"line":376,"column":6}}]},"48":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":37}},{"start":{"line":382,"column":8},"end":{"line":382,"column":44}},{"start":{"line":385,"column":8},"end":{"line":385,"column":58}},{"start":{"line":386,"column":9},"end":{"line":386,"column":22}},{"start":{"line":386,"column":26},"end":{"line":386,"column":38}}]},"49":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"50":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":2},"end":{"line":427,"column":2}},{"start":{"line":427,"column":2},"end":{"line":427,"column":2}}]},"51":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":9},"end":{"line":431,"column":27}},{"start":{"line":431,"column":31},"end":{"line":431,"column":41}}]},"52":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":9},"end":{"line":435,"column":27}},{"start":{"line":435,"column":31},"end":{"line":435,"column":41}}]},"53":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"54":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":24}},{"start":{"line":449,"column":28},"end":{"line":449,"column":41}}]},"55":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":4},"end":{"line":453,"column":4}},{"start":{"line":453,"column":4},"end":{"line":453,"column":4}}]},"56":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":8},"end":{"line":453,"column":20}},{"start":{"line":453,"column":24},"end":{"line":453,"column":47}},{"start":{"line":453,"column":51},"end":{"line":453,"column":75}}]},"57":{"line":454,"type":"cond-expr","locations":[{"start":{"line":454,"column":32},"end":{"line":454,"column":34}},{"start":{"line":454,"column":37},"end":{"line":454,"column":40}}]},"58":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":112},"end":{"line":455,"column":140}},{"start":{"line":455,"column":143},"end":{"line":455,"column":152}}]},"59":{"line":464,"type":"cond-expr","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":33}},{"start":{"line":466,"column":4},"end":{"line":466,"column":12}}]},"60":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"61":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"62":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":2},"end":{"line":485,"column":2}},{"start":{"line":485,"column":2},"end":{"line":485,"column":2}}]},"63":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"64":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":2},"end":{"line":513,"column":2}},{"start":{"line":513,"column":2},"end":{"line":513,"column":2}}]},"65":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":2},"end":{"line":517,"column":2}},{"start":{"line":517,"column":2},"end":{"line":517,"column":2}}]},"66":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":9},"end":{"line":520,"column":9}},{"start":{"line":520,"column":9},"end":{"line":520,"column":9}}]},"67":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":6},"end":{"line":533,"column":6}},{"start":{"line":533,"column":6},"end":{"line":533,"column":6}}]},"68":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":2},"end":{"line":554,"column":2}},{"start":{"line":554,"column":2},"end":{"line":554,"column":2}}]},"69":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"70":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":6},"end":{"line":583,"column":6}},{"start":{"line":583,"column":6},"end":{"line":583,"column":6}}]},"71":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":2},"end":{"line":621,"column":2}},{"start":{"line":621,"column":2},"end":{"line":621,"column":2}}]},"72":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":2},"end":{"line":644,"column":2}},{"start":{"line":644,"column":2},"end":{"line":644,"column":2}}]},"73":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"74":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":6},"end":{"line":657,"column":19}},{"start":{"line":657,"column":23},"end":{"line":657,"column":67}}]},"75":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":16},"end":{"line":665,"column":20}},{"start":{"line":665,"column":24},"end":{"line":665,"column":26}}]},"76":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":26},"end":{"line":668,"column":47}},{"start":{"line":668,"column":51},"end":{"line":668,"column":69}}]},"77":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":2},"end":{"line":742,"column":2}},{"start":{"line":742,"column":2},"end":{"line":742,"column":2}}]},"78":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":4},"end":{"line":778,"column":4}},{"start":{"line":778,"column":4},"end":{"line":778,"column":4}}]},"79":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":6},"end":{"line":781,"column":6}},{"start":{"line":781,"column":6},"end":{"line":781,"column":6}}]},"80":{"line":781,"type":"binary-expr","locations":[{"start":{"line":781,"column":10},"end":{"line":781,"column":44}},{"start":{"line":781,"column":48},"end":{"line":781,"column":89}}]}},"code":["module.exports = AlgoliaSearchCore;","","var errors = require('./errors');","var exitPromise = require('./exitPromise.js');","var IndexCore = require('./IndexCore.js');","var store = require('./store.js');","","// We will always put the API KEY in the JSON body in case of too long API KEY,","// to avoid query string being too long and failing in various conditions (our server limit, browser limit,","// proxies limit)","var MAX_API_KEY_LENGTH = 500;","var RESET_APP_DATA_TIMER =","  process.env.RESET_APP_DATA_TIMER && parseInt(process.env.RESET_APP_DATA_TIMER, 10) ||","  60 * 2 * 1000; // after 2 minutes reset to first host","","/*"," * Algolia Search library initialization"," * https://www.algolia.com/"," *"," * @param {string} applicationID - Your applicationID, found in your dashboard"," * @param {string} apiKey - Your API key, found in your dashboard"," * @param {Object} [opts]"," * @param {number} [opts.timeout=2000] - The request timeout set in milliseconds,"," * another request will be issued after this timeout"," * @param {string} [opts.protocol='http:'] - The protocol used to query Algolia Search API."," *                                        Set to 'https:' to force using https."," *                                        Default to document.location.protocol in browsers"," * @param {Object|Array} [opts.hosts={"," *           read: [this.applicationID + '-dsn.algolia.net'].concat(["," *             this.applicationID + '-1.algolianet.com',"," *             this.applicationID + '-2.algolianet.com',"," *             this.applicationID + '-3.algolianet.com']"," *           ]),"," *           write: [this.applicationID + '.algolia.net'].concat(["," *             this.applicationID + '-1.algolianet.com',"," *             this.applicationID + '-2.algolianet.com',"," *             this.applicationID + '-3.algolianet.com']"," *           ]) - The hosts to use for Algolia Search API."," *           If you provide them, you will less benefit from our HA implementation"," */","function AlgoliaSearchCore(applicationID, apiKey, opts) {","  var debug = require('debug')('algoliasearch');","","  var clone = require('./clone.js');","  var isArray = require('isarray');","  var map = require('./map.js');","","  var usage = 'Usage: algoliasearch(applicationID, apiKey, opts)';","","  if (opts._allowEmptyCredentials !== true && !applicationID) {","    throw new errors.AlgoliaSearchError('Please provide an application ID. ' + usage);","  }","","  if (opts._allowEmptyCredentials !== true && !apiKey) {","    throw new errors.AlgoliaSearchError('Please provide an API key. ' + usage);","  }","","  this.applicationID = applicationID;","  this.apiKey = apiKey;","","  this.hosts = {","    read: [],","    write: []","  };","","  opts = opts || {};","","  var protocol = opts.protocol || 'https:';","  this._timeouts = opts.timeouts || {","    connect: 1 * 1000, // 500ms connect is GPRS latency","    read: 2 * 1000,","    write: 30 * 1000","  };","","  // backward compat, if opts.timeout is passed, we use it to configure all timeouts like before","  if (opts.timeout) {","    this._timeouts.connect = this._timeouts.read = this._timeouts.write = opts.timeout;","  }","","  // while we advocate for colon-at-the-end values: 'http:' for `opts.protocol`","  // we also accept `http` and `https`. It's a common error.","  if (!/:$/.test(protocol)) {","    protocol = protocol + ':';","  }","","  if (opts.protocol !== 'http:' && opts.protocol !== 'https:') {","    throw new errors.AlgoliaSearchError('protocol must be `http:` or `https:` (was `' + opts.protocol + '`)');","  }","","  this._checkAppIdData();","","  if (!opts.hosts) {","    var defaultHosts = map(this._shuffleResult, function(hostNumber) {","      return applicationID + '-' + hostNumber + '.algolianet.com';","    });","","    // no hosts given, compute defaults","    this.hosts.read = [this.applicationID + '-dsn.algolia.net'].concat(defaultHosts);","    this.hosts.write = [this.applicationID + '.algolia.net'].concat(defaultHosts);","  } else if (isArray(opts.hosts)) {","    // when passing custom hosts, we need to have a different host index if the number","    // of write/read hosts are different.","    this.hosts.read = clone(opts.hosts);","    this.hosts.write = clone(opts.hosts);","  } else {","    this.hosts.read = clone(opts.hosts.read);","    this.hosts.write = clone(opts.hosts.write);","  }","","  // add protocol and lowercase hosts","  this.hosts.read = map(this.hosts.read, prepareHost(protocol));","  this.hosts.write = map(this.hosts.write, prepareHost(protocol));","","  this.extraHeaders = [];","","  // In some situations you might want to warm the cache","  this.cache = opts._cache || {};","","  this._ua = opts._ua;","  this._useCache = opts._useCache === undefined || opts._cache ? true : opts._useCache;","  this._useFallback = opts.useFallback === undefined ? true : opts.useFallback;","","  this._setTimeout = opts._setTimeout;","","  debug('init done, %j', this);","}","","/*"," * Get the index object initialized"," *"," * @param indexName the name of index"," * @param callback the result callback with one argument (the Index instance)"," */","AlgoliaSearchCore.prototype.initIndex = function(indexName) {","  return new IndexCore(this, indexName);","};","","/**","* Add an extra field to the HTTP request","*","* @param name the header field name","* @param value the header field value","*/","AlgoliaSearchCore.prototype.setExtraHeader = function(name, value) {","  this.extraHeaders.push({","    name: name.toLowerCase(), value: value","  });","};","","/**","* Augment sent x-algolia-agent with more data, each agent part","* is automatically separated from the others by a semicolon;","*","* @param algoliaAgent the agent to add","*/","AlgoliaSearchCore.prototype.addAlgoliaAgent = function(algoliaAgent) {","  if (this._ua.indexOf(';' + algoliaAgent) === -1) {","    this._ua += ';' + algoliaAgent;","  }","};","","/*"," * Wrapper that try all hosts to maximize the quality of service"," */","AlgoliaSearchCore.prototype._jsonRequest = function(initialOpts) {","  this._checkAppIdData();","","  var requestDebug = require('debug')('algoliasearch:' + initialOpts.url);","","  var body;","  var additionalUA = initialOpts.additionalUA || '';","  var cache = initialOpts.cache;","  var client = this;","  var tries = 0;","  var usingFallback = false;","  var hasFallback = client._useFallback && client._request.fallback && initialOpts.fallback;","  var headers;","","  if (","    this.apiKey.length > MAX_API_KEY_LENGTH &&","    initialOpts.body !== undefined &&","    (initialOpts.body.params !== undefined || // index.search()","    initialOpts.body.requests !== undefined) // client.search()","  ) {","    initialOpts.body.apiKey = this.apiKey;","    headers = this._computeRequestHeaders(additionalUA, false);","  } else {","    headers = this._computeRequestHeaders(additionalUA);","  }","","  if (initialOpts.body !== undefined) {","    body = safeJSONStringify(initialOpts.body);","  }","","  requestDebug('request start');","  var debugData = [];","","  function doRequest(requester, reqOpts) {","    client._checkAppIdData();","","    var startTime = new Date();","    var cacheID;","","    if (client._useCache) {","      cacheID = initialOpts.url;","    }","","    // as we sometime use POST requests to pass parameters (like query='aa'),","    // the cacheID must also include the body to be different between calls","    if (client._useCache && body) {","      cacheID += '_body_' + reqOpts.body;","    }","","    // handle cache existence","    if (client._useCache && cache && cache[cacheID] !== undefined) {","      requestDebug('serving response from cache');","      return client._promise.resolve(JSON.parse(cache[cacheID]));","    }","","    // if we reached max tries","    if (tries >= client.hosts[initialOpts.hostType].length) {","      if (!hasFallback || usingFallback) {","        requestDebug('could not get any response');","        // then stop","        return client._promise.reject(new errors.AlgoliaSearchError(","          'Cannot connect to the AlgoliaSearch API.' +","          ' Send an email to support@algolia.com to report and resolve the issue.' +","          ' Application id was: ' + client.applicationID, {debugData: debugData}","        ));","      }","","      requestDebug('switching to fallback');","","      // let's try the fallback starting from here","      tries = 0;","","      // method, url and body are fallback dependent","      reqOpts.method = initialOpts.fallback.method;","      reqOpts.url = initialOpts.fallback.url;","      reqOpts.jsonBody = initialOpts.fallback.body;","      if (reqOpts.jsonBody) {","        reqOpts.body = safeJSONStringify(reqOpts.jsonBody);","      }","      // re-compute headers, they could be omitting the API KEY","      headers = client._computeRequestHeaders(additionalUA);","","      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);","      client._setHostIndexByType(0, initialOpts.hostType);","      usingFallback = true; // the current request is now using fallback","      return doRequest(client._request.fallback, reqOpts);","    }","","    var currentHost = client._getHostByType(initialOpts.hostType);","","    var url = currentHost + reqOpts.url;","    var options = {","      body: reqOpts.body,","      jsonBody: reqOpts.jsonBody,","      method: reqOpts.method,","      headers: headers,","      timeouts: reqOpts.timeouts,","      debug: requestDebug","    };","","    requestDebug('method: %s, url: %s, headers: %j, timeouts: %d',","      options.method, url, options.headers, options.timeouts);","","    if (requester === client._request.fallback) {","      requestDebug('using fallback');","    }","","    // `requester` is any of this._request or this._request.fallback","    // thus it needs to be called using the client as context","    return requester.call(client, url, options).then(success, tryFallback);","","    function success(httpResponse) {","      // compute the status of the response,","      //","      // When in browser mode, using XDR or JSONP, we have no statusCode available","      // So we rely on our API response `status` property.","      // But `waitTask` can set a `status` property which is not the statusCode (it's the task status)","      // So we check if there's a `message` along `status` and it means it's an error","      //","      // That's the only case where we have a response.status that's not the http statusCode","      var status = httpResponse && httpResponse.body && httpResponse.body.message && httpResponse.body.status ||","","        // this is important to check the request statusCode AFTER the body eventual","        // statusCode because some implementations (jQuery XDomainRequest transport) may","        // send statusCode 200 while we had an error","        httpResponse.statusCode ||","","        // When in browser mode, using XDR or JSONP","        // we default to success when no error (no response.status && response.message)","        // If there was a JSON.parse() error then body is null and it fails","        httpResponse && httpResponse.body && 200;","","      requestDebug('received response: statusCode: %s, computed statusCode: %d, headers: %j',","        httpResponse.statusCode, status, httpResponse.headers);","","      var httpResponseOk = Math.floor(status / 100) === 2;","","      var endTime = new Date();","      debugData.push({","        currentHost: currentHost,","        headers: removeCredentials(headers),","        content: body || null,","        contentLength: body !== undefined ? body.length : null,","        method: reqOpts.method,","        timeouts: reqOpts.timeouts,","        url: reqOpts.url,","        startTime: startTime,","        endTime: endTime,","        duration: endTime - startTime,","        statusCode: status","      });","","      if (httpResponseOk) {","        if (client._useCache && cache) {","          cache[cacheID] = httpResponse.responseText;","        }","","        return httpResponse.body;","      }","","      var shouldRetry = Math.floor(status / 100) !== 4;","","      if (shouldRetry) {","        tries += 1;","        return retryRequest();","      }","","      requestDebug('unrecoverable error');","","      // no success and no retry => fail","      var unrecoverableError = new errors.AlgoliaSearchError(","        httpResponse.body && httpResponse.body.message, {debugData: debugData, statusCode: status}","      );","","      return client._promise.reject(unrecoverableError);","    }","","    function tryFallback(err) {","      // error cases:","      //  While not in fallback mode:","      //    - CORS not supported","      //    - network error","      //  While in fallback mode:","      //    - timeout","      //    - network error","      //    - badly formatted JSONP (script loaded, did not call our callback)","      //  In both cases:","      //    - uncaught exception occurs (TypeError)","      requestDebug('error: %s, stack: %s', err.message, err.stack);","","      var endTime = new Date();","      debugData.push({","        currentHost: currentHost,","        headers: removeCredentials(headers),","        content: body || null,","        contentLength: body !== undefined ? body.length : null,","        method: reqOpts.method,","        timeouts: reqOpts.timeouts,","        url: reqOpts.url,","        startTime: startTime,","        endTime: endTime,","        duration: endTime - startTime","      });","","      if (!(err instanceof errors.AlgoliaSearchError)) {","        err = new errors.Unknown(err && err.message, err);","      }","","      tries += 1;","","      // stop the request implementation when:","      if (","        // we did not generate this error,","        // it comes from a throw in some other piece of code","        err instanceof errors.Unknown ||","","        // server sent unparsable JSON","        err instanceof errors.UnparsableJSON ||","","        // max tries and already using fallback or no fallback","        tries >= client.hosts[initialOpts.hostType].length &&","        (usingFallback || !hasFallback)) {","        // stop request implementation for this command","        err.debugData = debugData;","        return client._promise.reject(err);","      }","","      // When a timeout occured, retry by raising timeout","      if (err instanceof errors.RequestTimeout) {","        return retryRequestWithHigherTimeout();","      }","","      return retryRequest();","    }","","    function retryRequest() {","      requestDebug('retrying request');","      client._incrementHostIndex(initialOpts.hostType);","      return doRequest(requester, reqOpts);","    }","","    function retryRequestWithHigherTimeout() {","      requestDebug('retrying request with higher timeout');","      client._incrementHostIndex(initialOpts.hostType);","      client._incrementTimeoutMultipler();","      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);","      return doRequest(requester, reqOpts);","    }","  }","","  var promise = doRequest(","    client._request, {","      url: initialOpts.url,","      method: initialOpts.method,","      body: body,","      jsonBody: initialOpts.body,","      timeouts: client._getTimeoutsForRequest(initialOpts.hostType)","    }","  );","","  // either we have a callback","  // either we are using promises","  if (initialOpts.callback) {","    promise.then(function okCb(content) {","      exitPromise(function() {","        initialOpts.callback(null, content);","      }, client._setTimeout || setTimeout);","    }, function nookCb(err) {","      exitPromise(function() {","        initialOpts.callback(err);","      }, client._setTimeout || setTimeout);","    });","  } else {","    return promise;","  }","};","","/*","* Transform search param object in query string","* @param {object} args arguments to add to the current query string","* @param {string} params current query string","* @return {string} the final query string","*/","AlgoliaSearchCore.prototype._getSearchParams = function(args, params) {","  if (args === undefined || args === null) {","    return params;","  }","  for (var key in args) {","    if (key !== null && args[key] !== undefined && args.hasOwnProperty(key)) {","      params += params === '' ? '' : '&';","      params += key + '=' + encodeURIComponent(Object.prototype.toString.call(args[key]) === '[object Array]' ? safeJSONStringify(args[key]) : args[key]);","    }","  }","  return params;","};","","AlgoliaSearchCore.prototype._computeRequestHeaders = function(additionalUA, withAPIKey) {","  var forEach = require('foreach');","","  var ua = additionalUA ?","    this._ua + ';' + additionalUA :","    this._ua;","","  var requestHeaders = {","    'x-algolia-agent': ua,","    'x-algolia-application-id': this.applicationID","  };","","  // browser will inline headers in the url, node.js will use http headers","  // but in some situations, the API KEY will be too long (big secured API keys)","  // so if the request is a POST and the KEY is very long, we will be asked to not put","  // it into headers but in the JSON body","  if (withAPIKey !== false) {","    requestHeaders['x-algolia-api-key'] = this.apiKey;","  }","","  if (this.userToken) {","    requestHeaders['x-algolia-usertoken'] = this.userToken;","  }","","  if (this.securityTags) {","    requestHeaders['x-algolia-tagfilters'] = this.securityTags;","  }","","  if (this.extraHeaders) {","    forEach(this.extraHeaders, function addToRequestHeaders(header) {","      requestHeaders[header.name] = header.value;","    });","  }","","  return requestHeaders;","};","","/**"," * Search through multiple indices at the same time"," * @param  {Object[]}   queries  An array of queries you want to run."," * @param {string} queries[].indexName The index name you want to target"," * @param {string} [queries[].query] The query to issue on this index. Can also be passed into `params`"," * @param {Object} queries[].params Any search param like hitsPerPage, .."," * @param  {Function} callback Callback to be called"," * @return {Promise|undefined} Returns a promise if no callback given"," */","AlgoliaSearchCore.prototype.search = function(queries, opts, callback) {","  var isArray = require('isarray');","  var map = require('./map.js');","","  var usage = 'Usage: client.search(arrayOfQueries[, callback])';","","  if (!isArray(queries)) {","    throw new Error(usage);","  }","","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  } else if (opts === undefined) {","    opts = {};","  }","","  var client = this;","","  var postObj = {","    requests: map(queries, function prepareRequest(query) {","      var params = '';","","      // allow query.query","      // so we are mimicing the index.search(query, params) method","      // {indexName:, query:, params:}","      if (query.query !== undefined) {","        params += 'query=' + encodeURIComponent(query.query);","      }","","      return {","        indexName: query.indexName,","        params: client._getSearchParams(query.params, params)","      };","    })","  };","","  var JSONPParams = map(postObj.requests, function prepareJSONPParams(request, requestId) {","    return requestId + '=' +","      encodeURIComponent(","        '/1/indexes/' + encodeURIComponent(request.indexName) + '?' +","        request.params","      );","  }).join('&');","","  var url = '/1/indexes/*/queries';","","  if (opts.strategy !== undefined) {","    url += '?strategy=' + opts.strategy;","  }","","  return this._jsonRequest({","    cache: this.cache,","    method: 'POST',","    url: url,","    body: postObj,","    hostType: 'read',","    fallback: {","      method: 'GET',","      url: '/1/indexes/*',","      body: {","        params: JSONPParams","      }","    },","    callback: callback","  });","};","","/**"," * Set the extra security tagFilters header"," * @param {string|array} tags The list of tags defining the current security filters"," */","AlgoliaSearchCore.prototype.setSecurityTags = function(tags) {","  if (Object.prototype.toString.call(tags) === '[object Array]') {","    var strTags = [];","    for (var i = 0; i < tags.length; ++i) {","      if (Object.prototype.toString.call(tags[i]) === '[object Array]') {","        var oredTags = [];","        for (var j = 0; j < tags[i].length; ++j) {","          oredTags.push(tags[i][j]);","        }","        strTags.push('(' + oredTags.join(',') + ')');","      } else {","        strTags.push(tags[i]);","      }","    }","    tags = strTags.join(',');","  }","","  this.securityTags = tags;","};","","/**"," * Set the extra user token header"," * @param {string} userToken The token identifying a uniq user (used to apply rate limits)"," */","AlgoliaSearchCore.prototype.setUserToken = function(userToken) {","  this.userToken = userToken;","};","","/**"," * Clear all queries in client's cache"," * @return undefined"," */","AlgoliaSearchCore.prototype.clearCache = function() {","  this.cache = {};","};","","/**","* Set the number of milliseconds a request can take before automatically being terminated.","* @deprecated","* @param {Number} milliseconds","*/","AlgoliaSearchCore.prototype.setRequestTimeout = function(milliseconds) {","  if (milliseconds) {","    this._timeouts.connect = this._timeouts.read = this._timeouts.write = milliseconds;","  }","};","","/**","* Set the three different (connect, read, write) timeouts to be used when requesting","* @param {Object} timeouts","*/","AlgoliaSearchCore.prototype.setTimeouts = function(timeouts) {","  this._timeouts = timeouts;","};","","/**","* Get the three different (connect, read, write) timeouts to be used when requesting","* @param {Object} timeouts","*/","AlgoliaSearchCore.prototype.getTimeouts = function() {","  return this._timeouts;","};","","AlgoliaSearchCore.prototype._getAppIdData = function() {","  var data = store.get(this.applicationID);","  if (data !== null) this._cacheAppIdData(data);","  return data;","};","","AlgoliaSearchCore.prototype._setAppIdData = function(data) {","  data.lastChange = (new Date()).getTime();","  this._cacheAppIdData(data);","  return store.set(this.applicationID, data);","};","","AlgoliaSearchCore.prototype._checkAppIdData = function() {","  var data = this._getAppIdData();","  var now = (new Date()).getTime();","  if (data === null || now - data.lastChange > RESET_APP_DATA_TIMER) {","    return this._resetInitialAppIdData(data);","  }","","  return data;","};","","AlgoliaSearchCore.prototype._resetInitialAppIdData = function(data) {","  var newData = data || {};","  newData.hostIndexes = {read: 0, write: 0};","  newData.timeoutMultiplier = 1;","  newData.shuffleResult = newData.shuffleResult || shuffle([1, 2, 3]);","  return this._setAppIdData(newData);","};","","AlgoliaSearchCore.prototype._cacheAppIdData = function(data) {","  this._hostIndexes = data.hostIndexes;","  this._timeoutMultiplier = data.timeoutMultiplier;","  this._shuffleResult = data.shuffleResult;","};","","AlgoliaSearchCore.prototype._partialAppIdDataUpdate = function(newData) {","  var foreach = require('foreach');","  var currentData = this._getAppIdData();","  foreach(newData, function(value, key) {","    currentData[key] = value;","  });","","  return this._setAppIdData(currentData);","};","","AlgoliaSearchCore.prototype._getHostByType = function(hostType) {","  return this.hosts[hostType][this._getHostIndexByType(hostType)];","};","","AlgoliaSearchCore.prototype._getTimeoutMultiplier = function() {","  return this._timeoutMultiplier;","};","","AlgoliaSearchCore.prototype._getHostIndexByType = function(hostType) {","  return this._hostIndexes[hostType];","};","","AlgoliaSearchCore.prototype._setHostIndexByType = function(hostIndex, hostType) {","  var clone = require('./clone');","  var newHostIndexes = clone(this._hostIndexes);","  newHostIndexes[hostType] = hostIndex;","  this._partialAppIdDataUpdate({hostIndexes: newHostIndexes});","  return hostIndex;","};","","AlgoliaSearchCore.prototype._incrementHostIndex = function(hostType) {","  return this._setHostIndexByType(","    (this._getHostIndexByType(hostType) + 1) % this.hosts[hostType].length, hostType","  );","};","","AlgoliaSearchCore.prototype._incrementTimeoutMultipler = function() {","  var timeoutMultiplier = Math.max(this._timeoutMultiplier + 1, 4);","  return this._partialAppIdDataUpdate({timeoutMultiplier: timeoutMultiplier});","};","","AlgoliaSearchCore.prototype._getTimeoutsForRequest = function(hostType) {","  return {","    connect: this._timeouts.connect * this._timeoutMultiplier,","    complete: this._timeouts[hostType] * this._timeoutMultiplier","  };","};","","function prepareHost(protocol) {","  return function prepare(host) {","    return protocol + '//' + host.toLowerCase();","  };","}","","// Prototype.js < 1.7, a widely used library, defines a weird","// Array.prototype.toJSON function that will fail to stringify our content","// appropriately","// refs:","//   - https://groups.google.com/forum/#!topic/prototype-core/E-SAVvV_V9Q","//   - https://github.com/sstephenson/prototype/commit/038a2985a70593c1a86c230fadbdfe2e4898a48c","//   - http://stackoverflow.com/a/3148441/147079","function safeJSONStringify(obj) {","  /* eslint no-extend-native:0 */","","  if (Array.prototype.toJSON === undefined) {","    return JSON.stringify(obj);","  }","","  var toJSON = Array.prototype.toJSON;","  delete Array.prototype.toJSON;","  var out = JSON.stringify(obj);","  Array.prototype.toJSON = toJSON;","","  return out;","}","","function shuffle(array) {","  var currentIndex = array.length;","  var temporaryValue;","  var randomIndex;","","  // While there remain elements to shuffle...","  while (currentIndex !== 0) {","    // Pick a remaining element...","    randomIndex = Math.floor(Math.random() * currentIndex);","    currentIndex -= 1;","","    // And swap it with the current element.","    temporaryValue = array[currentIndex];","    array[currentIndex] = array[randomIndex];","    array[randomIndex] = temporaryValue;","  }","","  return array;","}","","function removeCredentials(headers) {","  var newHeaders = {};","","  for (var headerName in headers) {","    if (Object.prototype.hasOwnProperty.call(headers, headerName)) {","      var value;","","      if (headerName === 'x-algolia-api-key' || headerName === 'x-algolia-application-id') {","        value = '**hidden for security purposes**';","      } else {","        value = headers[headerName];","      }","","      newHeaders[headerName] = value;","    }","  }","","  return newHeaders;","}",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1,"11":1,"12":1,"41":1,"42":0,"44":0,"45":0,"46":0,"48":0,"50":0,"51":0,"54":0,"55":0,"58":0,"59":0,"61":0,"66":0,"68":0,"69":0,"76":0,"77":0,"82":0,"83":0,"86":0,"87":0,"90":0,"92":0,"93":0,"94":0,"98":0,"99":0,"100":0,"103":0,"104":0,"106":0,"107":0,"111":0,"112":0,"114":0,"117":0,"119":0,"120":0,"121":0,"123":0,"125":0,"134":1,"135":0,"144":1,"145":0,"156":1,"157":0,"158":0,"165":1,"166":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"185":0,"186":0,"188":0,"191":0,"192":0,"195":0,"196":0,"198":1,"199":0,"201":0,"202":0,"204":0,"205":0,"210":0,"211":0,"215":0,"216":0,"217":0,"221":0,"222":0,"223":0,"225":0,"232":0,"235":0,"238":0,"239":0,"240":0,"241":0,"242":0,"245":0,"247":0,"248":0,"249":0,"250":0,"253":0,"255":0,"256":0,"265":0,"268":0,"269":0,"274":0,"276":1,"285":0,"297":0,"300":0,"302":0,"303":0,"317":0,"318":0,"319":0,"322":0,"325":0,"327":0,"328":0,"329":0,"332":0,"335":0,"339":0,"342":1,"353":0,"355":0,"356":0,"369":0,"370":0,"373":0,"376":0,"388":0,"389":0,"393":0,"394":0,"397":0,"400":1,"401":0,"402":0,"403":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"415":0,"427":0,"428":0,"429":0,"430":0,"433":0,"434":0,"438":0,"448":1,"449":0,"450":0,"452":0,"453":0,"454":0,"455":0,"458":0,"461":1,"462":0,"464":0,"468":0,"477":0,"478":0,"481":0,"482":0,"485":0,"486":0,"489":0,"490":0,"491":0,"495":0,"507":1,"508":0,"509":0,"511":0,"513":0,"514":0,"517":0,"518":0,"519":0,"520":0,"521":0,"524":0,"526":0,"528":0,"533":0,"534":0,"537":0,"544":0,"545":0,"552":0,"554":0,"555":0,"558":0,"579":1,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"588":0,"590":0,"593":0,"596":0,"603":1,"604":0,"611":1,"612":0,"620":1,"621":0,"622":0,"630":1,"631":0,"638":1,"639":0,"642":1,"643":0,"644":0,"645":0,"648":1,"649":0,"650":0,"651":0,"654":1,"655":0,"656":0,"657":0,"658":0,"661":0,"664":1,"665":0,"666":0,"667":0,"668":0,"669":0,"672":1,"673":0,"674":0,"675":0,"678":1,"679":0,"680":0,"681":0,"682":0,"685":0,"688":1,"689":0,"692":1,"693":0,"696":1,"697":0,"700":1,"701":0,"702":0,"703":0,"704":0,"705":0,"708":1,"709":0,"714":1,"715":0,"716":0,"719":1,"720":0,"726":1,"727":0,"728":0,"739":1,"742":0,"743":0,"746":0,"747":0,"748":0,"749":0,"751":0,"754":1,"755":0,"756":0,"757":0,"760":0,"762":0,"763":0,"766":0,"767":0,"768":0,"771":0,"774":1,"775":0,"777":0,"778":0,"779":0,"781":0,"782":0,"784":0,"787":0,"791":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/store.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,1],"4":[0,0],"5":[0,1],"6":[1,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":7},"end":{"line":7,"column":27}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":7},"end":{"line":11,"column":21}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":7},"end":{"line":17,"column":27}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":7},"end":{"line":29,"column":21}}},"5":{"name":"localStorageFailure","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":37}}},"6":{"name":"getOrSet","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":29}}},"7":{"name":"supportsLocalStorage","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":32}}},"8":{"name":"cleanup","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":19}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":68}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":10}},"4":{"start":{"line":5,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":27}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":35}},"8":{"start":{"line":16,"column":0},"end":{"line":36,"column":2}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"10":{"start":{"line":20,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":77}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":28}},"13":{"start":{"line":23,"column":6},"end":{"line":23,"column":77}},"14":{"start":{"line":24,"column":6},"end":{"line":24,"column":28}},"15":{"start":{"line":26,"column":6},"end":{"line":26,"column":41}},"16":{"start":{"line":30,"column":4},"end":{"line":34,"column":5}},"17":{"start":{"line":31,"column":6},"end":{"line":31,"column":81}},"18":{"start":{"line":33,"column":6},"end":{"line":33,"column":41}},"19":{"start":{"line":38,"column":0},"end":{"line":43,"column":1}},"20":{"start":{"line":39,"column":2},"end":{"line":39,"column":39}},"21":{"start":{"line":40,"column":2},"end":{"line":40,"column":12}},"22":{"start":{"line":41,"column":2},"end":{"line":41,"column":22}},"23":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"24":{"start":{"line":45,"column":0},"end":{"line":45,"column":65}},"25":{"start":{"line":47,"column":0},"end":{"line":51,"column":2}},"26":{"start":{"line":53,"column":0},"end":{"line":59,"column":1}},"27":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"28":{"start":{"line":55,"column":4},"end":{"line":55,"column":26}},"29":{"start":{"line":58,"column":2},"end":{"line":58,"column":30}},"30":{"start":{"line":61,"column":0},"end":{"line":76,"column":1}},"31":{"start":{"line":62,"column":2},"end":{"line":75,"column":3}},"32":{"start":{"line":63,"column":4},"end":{"line":70,"column":5}},"33":{"start":{"line":65,"column":6},"end":{"line":68,"column":7}},"34":{"start":{"line":67,"column":8},"end":{"line":67,"column":79}},"35":{"start":{"line":69,"column":6},"end":{"line":69,"column":18}},"36":{"start":{"line":72,"column":4},"end":{"line":72,"column":17}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":17}},"38":{"start":{"line":80,"column":0},"end":{"line":86,"column":1}},"39":{"start":{"line":81,"column":2},"end":{"line":85,"column":3}},"40":{"start":{"line":82,"column":4},"end":{"line":82,"column":58}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":26}},{"start":{"line":12,"column":30},"end":{"line":12,"column":34}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":72}},{"start":{"line":31,"column":76},"end":{"line":31,"column":80}}]},"3":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":33},"end":{"line":45,"column":50}},{"start":{"line":45,"column":53},"end":{"line":45,"column":64}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"6":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":32}},{"start":{"line":64,"column":6},"end":{"line":64,"column":34}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]}},"code":["var debug = require('debug')('algoliasearch:src/hostIndexState.js');","var localStorageNamespace = 'algoliasearch-client-js';","","var store;","var moduleStore = {","  state: {},","  set: function(key, data) {","    this.state[key] = data;","    return this.state[key];","  },","  get: function(key) {","    return this.state[key] || null;","  }","};","","var localStorageStore = {","  set: function(key, data) {","    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure","","    try {","      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);","      namespace[key] = data;","      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);","      return namespace[key];","    } catch (e) {","      return localStorageFailure(key, e);","    }","  },","  get: function(key) {","    try {","      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;","    } catch (e) {","      return localStorageFailure(key, e);","    }","  }","};","","function localStorageFailure(key, e) {","  debug('localStorage failed with', e);","  cleanup();","  store = moduleStore;","  return store.get(key);","}","","store = supportsLocalStorage() ? localStorageStore : moduleStore;","","module.exports = {","  get: getOrSet,","  set: getOrSet,","  supportsLocalStorage: supportsLocalStorage","};","","function getOrSet(key, data) {","  if (arguments.length === 1) {","    return store.get(key);","  }","","  return store.set(key, data);","}","","function supportsLocalStorage() {","  try {","    if ('localStorage' in global &&","      global.localStorage !== null) {","      if (!global.localStorage[localStorageNamespace]) {","        // actual creation of the namespace","        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));","      }","      return true;","    }","","    return false;","  } catch (_) {","    return false;","  }","}","","// In case of any error on localStorage, we clean our own namespace, this should handle","// quota errors when a lot of keys + data are used","function cleanup() {","  try {","    global.localStorage.removeItem(localStorageNamespace);","  } catch (_) {","    // nothing to do","  }","}",""],"l":{"1":1,"2":1,"4":1,"5":1,"8":0,"9":0,"12":0,"16":1,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"30":0,"31":0,"33":0,"38":1,"39":0,"40":0,"41":0,"42":0,"45":1,"47":1,"53":1,"54":0,"55":0,"58":0,"61":1,"62":1,"63":1,"65":0,"67":0,"69":0,"72":1,"74":0,"80":1,"81":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/version.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}}},"branchMap":{},"code":["'use strict';","","module.exports = '3.22.1';",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/lite.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/lite.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}}},"branchMap":{},"code":["'use strict';","","// For Node.js users, you will get the normal build (no lite)","// For browser users, this will be mapped to src/browser/builds/algoliasearchLite.js","// when used through browserify or webpack (see package.json browser field)","// This is done to ease universal applications (https://github.com/algolia/algoliasearch-client-js/issues/283)","module.exports = require('./index.js');",""],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/plugins/angular.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/plugins/angular.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":75}}},"branchMap":{},"code":["'use strict';","","// this file serves as a way to require the angularjs module","// in a commonJS way easily:","// require('algoliasearch/plugins/angular');","module.exports = require('../src/browser/builds/algoliasearch.angular.js');",""],"l":{"6":2}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/builds/algoliasearch.angular.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/builds/algoliasearch.angular.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"algoliaSearchService","line":25,"loc":{"start":{"line":25,"column":50},"end":{"line":25,"column":101}}},"2":{"name":"algoliasearch","line":26,"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}}},"3":{"name":"AlgoliaSearchAngular","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":36}}},"4":{"name":"request","line":60,"loc":{"start":{"line":60,"column":46},"end":{"line":60,"column":74}}},"5":{"name":"timedout","line":75,"loc":{"start":{"line":75,"column":15},"end":{"line":75,"column":35}}},"6":{"name":"removeIt","line":90,"loc":{"start":{"line":90,"column":8},"end":{"line":90,"column":51}}},"7":{"name":"success","line":119,"loc":{"start":{"line":119,"column":6},"end":{"line":119,"column":33}}},"8":{"name":"transformResponse","line":130,"loc":{"start":{"line":130,"column":6},"end":{"line":130,"column":39}}},"9":{"name":"error","line":134,"loc":{"start":{"line":134,"column":6},"end":{"line":134,"column":31}}},"10":{"name":"requestFallback","line":160,"loc":{"start":{"line":160,"column":55},"end":{"line":160,"column":91}}},"11":{"name":"jsonpRequestDone","line":167,"loc":{"start":{"line":167,"column":30},"end":{"line":167,"column":70}}},"12":{"name":"(anonymous_12)","line":180,"loc":{"start":{"line":180,"column":14},"end":{"line":180,"column":28}}},"13":{"name":"(anonymous_13)","line":183,"loc":{"start":{"line":183,"column":15},"end":{"line":183,"column":29}}},"14":{"name":"(anonymous_14)","line":187,"loc":{"start":{"line":187,"column":13},"end":{"line":187,"column":26}}},"15":{"name":"(anonymous_15)","line":198,"loc":{"start":{"line":198,"column":14},"end":{"line":198,"column":55}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"9":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":44}},"11":{"start":{"line":24,"column":0},"end":{"line":204,"column":6}},"12":{"start":{"line":26,"column":4},"end":{"line":40,"column":5}},"13":{"start":{"line":27,"column":6},"end":{"line":27,"column":48}},"14":{"start":{"line":29,"column":6},"end":{"line":29,"column":68}},"15":{"start":{"line":31,"column":6},"end":{"line":31,"column":35}},"16":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":46}},"18":{"start":{"line":37,"column":6},"end":{"line":37,"column":46}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":67}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":56}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":72}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":53}},"23":{"start":{"line":48,"column":4},"end":{"line":51,"column":6}},"24":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"25":{"start":{"line":55,"column":6},"end":{"line":55,"column":43}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":50}},"27":{"start":{"line":60,"column":4},"end":{"line":156,"column":6}},"28":{"start":{"line":63,"column":6},"end":{"line":63,"column":32}},"29":{"start":{"line":64,"column":6},"end":{"line":64,"column":37}},"30":{"start":{"line":65,"column":6},"end":{"line":65,"column":35}},"31":{"start":{"line":67,"column":6},"end":{"line":67,"column":19}},"32":{"start":{"line":68,"column":6},"end":{"line":68,"column":27}},"33":{"start":{"line":70,"column":6},"end":{"line":70,"column":45}},"34":{"start":{"line":72,"column":6},"end":{"line":72,"column":39}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":51}},"36":{"start":{"line":75,"column":6},"end":{"line":80,"column":33}},"37":{"start":{"line":76,"column":8},"end":{"line":76,"column":24}},"38":{"start":{"line":78,"column":8},"end":{"line":78,"column":40}},"39":{"start":{"line":79,"column":8},"end":{"line":79,"column":44}},"40":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"41":{"start":{"line":88,"column":6},"end":{"line":93,"column":8}},"42":{"start":{"line":91,"column":10},"end":{"line":91,"column":49}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":49}},"44":{"start":{"line":97,"column":6},"end":{"line":104,"column":7}},"45":{"start":{"line":98,"column":8},"end":{"line":103,"column":9}},"46":{"start":{"line":100,"column":10},"end":{"line":100,"column":79}},"47":{"start":{"line":102,"column":10},"end":{"line":102,"column":62}},"48":{"start":{"line":106,"column":6},"end":{"line":117,"column":30}},"49":{"start":{"line":119,"column":6},"end":{"line":126,"column":7}},"50":{"start":{"line":120,"column":8},"end":{"line":125,"column":11}},"51":{"start":{"line":130,"column":6},"end":{"line":132,"column":7}},"52":{"start":{"line":131,"column":8},"end":{"line":131,"column":20}},"53":{"start":{"line":134,"column":6},"end":{"line":153,"column":7}},"54":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"55":{"start":{"line":136,"column":10},"end":{"line":136,"column":17}},"56":{"start":{"line":140,"column":8},"end":{"line":147,"column":9}},"57":{"start":{"line":141,"column":10},"end":{"line":145,"column":12}},"58":{"start":{"line":146,"column":10},"end":{"line":146,"column":17}},"59":{"start":{"line":149,"column":8},"end":{"line":152,"column":11}},"60":{"start":{"line":155,"column":6},"end":{"line":155,"column":30}},"61":{"start":{"line":160,"column":4},"end":{"line":177,"column":6}},"62":{"start":{"line":161,"column":6},"end":{"line":161,"column":45}},"63":{"start":{"line":163,"column":6},"end":{"line":163,"column":32}},"64":{"start":{"line":164,"column":6},"end":{"line":164,"column":37}},"65":{"start":{"line":165,"column":6},"end":{"line":165,"column":35}},"66":{"start":{"line":167,"column":6},"end":{"line":174,"column":9}},"67":{"start":{"line":168,"column":8},"end":{"line":171,"column":9}},"68":{"start":{"line":169,"column":10},"end":{"line":169,"column":22}},"69":{"start":{"line":170,"column":10},"end":{"line":170,"column":17}},"70":{"start":{"line":173,"column":8},"end":{"line":173,"column":25}},"71":{"start":{"line":176,"column":6},"end":{"line":176,"column":30}},"72":{"start":{"line":179,"column":4},"end":{"line":195,"column":6}},"73":{"start":{"line":181,"column":8},"end":{"line":181,"column":30}},"74":{"start":{"line":185,"column":8},"end":{"line":185,"column":28}},"75":{"start":{"line":188,"column":8},"end":{"line":188,"column":34}},"76":{"start":{"line":189,"column":8},"end":{"line":189,"column":39}},"77":{"start":{"line":191,"column":8},"end":{"line":191,"column":30}},"78":{"start":{"line":193,"column":8},"end":{"line":193,"column":32}},"79":{"start":{"line":197,"column":4},"end":{"line":203,"column":6}},"80":{"start":{"line":199,"column":8},"end":{"line":199,"column":61}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":0},"end":{"line":20,"column":0}},{"start":{"line":20,"column":0},"end":{"line":20,"column":0}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":27}},{"start":{"line":31,"column":31},"end":{"line":31,"column":33}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":17},"end":{"line":37,"column":25}},{"start":{"line":37,"column":29},"end":{"line":37,"column":45}}]},"5":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"6":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"7":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"8":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":8}},{"start":{"line":140,"column":8},"end":{"line":140,"column":8}}]},"9":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]}},"code":["'use strict';","","// This is the AngularJS Algolia Search module","// It's using $http to do requests with a JSONP fallback","// $q promises are returned","","var inherits = require('inherits');","","var forEach = require('foreach');","","var AlgoliaSearch = require('../../AlgoliaSearch');","var errors = require('../../errors');","var inlineHeaders = require('../inline-headers');","var jsonpRequest = require('../jsonp-request');","var places = require('../../places.js');","","// expose original algoliasearch fn in window","window.algoliasearch = require('./algoliasearch');","","if (process.env.NODE_ENV === 'debug') {","  require('debug').enable('algoliasearch*');","}","","window.angular.module('algoliasearch', [])","  .service('algolia', ['$http', '$q', '$timeout', function algoliaSearchService($http, $q, $timeout) {","    function algoliasearch(applicationID, apiKey, opts) {","      var cloneDeep = require('../../clone.js');","","      var getDocumentProtocol = require('../get-document-protocol');","","      opts = cloneDeep(opts || {});","","      if (opts.protocol === undefined) {","        opts.protocol = getDocumentProtocol();","      }","","      opts._ua = opts._ua || algoliasearch.ua;","","      return new AlgoliaSearchAngular(applicationID, apiKey, opts);","    }","","    algoliasearch.version = require('../../version.js');","    algoliasearch.ua = 'Algolia for AngularJS ' + algoliasearch.version;","    algoliasearch.initPlaces = places(algoliasearch);","","    // we expose into window no matter how we are used, this will allow","    // us to easily debug any website running algolia","    window.__algolia = {","      debug: require('debug'),","      algoliasearch: algoliasearch","    };","","    function AlgoliaSearchAngular() {","      // call AlgoliaSearch constructor","      AlgoliaSearch.apply(this, arguments);","    }","","    inherits(AlgoliaSearchAngular, AlgoliaSearch);","","    AlgoliaSearchAngular.prototype._request = function request(url, opts) {","      // Support most Angular.js versions by using $q.defer() instead","      // of the new $q() constructor everywhere we need a promise","      var deferred = $q.defer();","      var resolve = deferred.resolve;","      var reject = deferred.reject;","","      var timedOut;","      var body = opts.body;","","      url = inlineHeaders(url, opts.headers);","","      var timeoutDeferred = $q.defer();","      var timeoutPromise = timeoutDeferred.promise;","","      $timeout(function timedout() {","        timedOut = true;","        // will cancel the xhr","        timeoutDeferred.resolve('test');","        reject(new errors.RequestTimeout());","      }, opts.timeouts.complete);","","      var requestHeaders = {};","","      // \"remove\" (set to undefined) possible globally set headers","      // in $httpProvider.defaults.headers.common","      // otherwise we might fail sometimes","      // ref: https://github.com/algolia/algoliasearch-client-js/issues/135","      forEach(","        $http.defaults.headers.common,","        function removeIt(headerValue, headerName) {","          requestHeaders[headerName] = undefined;","        }","      );","","      requestHeaders.accept = 'application/json';","","      if (body) {","        if (opts.method === 'POST') {","          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Simple_requests","          requestHeaders['content-type'] = 'application/x-www-form-urlencoded';","        } else {","          requestHeaders['content-type'] = 'application/json';","        }","      }","","      $http({","        url: url,","        method: opts.method,","        data: body,","        cache: false,","        timeout: timeoutPromise,","        headers: requestHeaders,","        transformResponse: transformResponse,","        // if client uses $httpProvider.defaults.withCredentials = true,","        // we revert it to false to avoid CORS failure","        withCredentials: false","      }).then(success, error);","","      function success(response) {","        resolve({","          statusCode: response.status,","          headers: response.headers,","          body: JSON.parse(response.data),","          responseText: response.data","        });","      }","","      // we force getting the raw data because we need it so","      // for cache keys","      function transformResponse(data) {","        return data;","      }","","      function error(response) {","        if (timedOut) {","          return;","        }","","        // network error","        if (response.status === 0) {","          reject(","            new errors.Network({","              more: response","            })","          );","          return;","        }","","        resolve({","          body: JSON.parse(response.data),","          statusCode: response.status","        });","      }","","      return deferred.promise;","    };","","    // using IE8 or IE9 we will always end up here","    // AngularJS does not fallback to XDomainRequest","    AlgoliaSearchAngular.prototype._request.fallback = function requestFallback(url, opts) {","      url = inlineHeaders(url, opts.headers);","","      var deferred = $q.defer();","      var resolve = deferred.resolve;","      var reject = deferred.reject;","","      jsonpRequest(url, opts, function jsonpRequestDone(err, content) {","        if (err) {","          reject(err);","          return;","        }","","        resolve(content);","      });","","      return deferred.promise;","    };","","    AlgoliaSearchAngular.prototype._promise = {","      reject: function(val) {","        return $q.reject(val);","      },","      resolve: function(val) {","        // http://www.bennadel.com/blog/2735-q-when-is-the-missing-q-resolve-method-in-angularjs.htm","        return $q.when(val);","      },","      delay: function(ms) {","        var deferred = $q.defer();","        var resolve = deferred.resolve;","","        $timeout(resolve, ms);","","        return deferred.promise;","      }","    };","","    return {","      Client: function(applicationID, apiKey, options) {","        return algoliasearch(applicationID, apiKey, options);","      },","      ua: algoliasearch.ua,","      version: algoliasearch.version","    };","  }]);",""],"l":{"7":2,"9":2,"11":2,"12":2,"13":2,"14":2,"15":2,"18":2,"20":0,"21":0,"24":0,"26":1,"27":0,"29":0,"31":0,"33":0,"34":0,"37":0,"39":0,"42":0,"43":0,"44":0,"48":0,"53":1,"55":0,"58":0,"60":0,"63":0,"64":0,"65":0,"67":0,"68":0,"70":0,"72":0,"73":0,"75":0,"76":0,"78":0,"79":0,"82":0,"88":0,"91":0,"95":0,"97":0,"98":0,"100":0,"102":0,"106":0,"119":1,"120":0,"130":1,"131":0,"134":1,"135":0,"136":0,"140":0,"141":0,"146":0,"149":0,"155":0,"160":0,"161":0,"163":0,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"173":0,"176":0,"179":0,"181":0,"185":0,"188":0,"189":0,"191":0,"193":0,"197":0,"199":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/inline-headers.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/inline-headers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"inlineHeaders","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":8,"column":2},"end":{"line":12,"column":3}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":15}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["'use strict';","","module.exports = inlineHeaders;","","var encode = require('querystring-es3/encode');","","function inlineHeaders(url, headers) {","  if (/\\?/.test(url)) {","    url += '&';","  } else {","    url += '?';","  }","","  return url + encode(headers);","}",""],"l":{"3":1,"5":1,"7":1,"8":0,"9":0,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/jsonp-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/jsonp-request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"jsonpRequest","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":19},"end":{"line":26,"column":34}}},"3":{"name":"success","line":68,"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":21}}},"4":{"name":"readystatechange","line":85,"loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":30}}},"5":{"name":"clean","line":91,"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":19}}},"6":{"name":"removeGlobals","line":99,"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":27}}},"7":{"name":"timeout","line":108,"loc":{"start":{"line":108,"column":2},"end":{"line":108,"column":21}}},"8":{"name":"error","line":115,"loc":{"start":{"line":115,"column":2},"end":{"line":115,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":21}},"4":{"start":{"line":9,"column":0},"end":{"line":125,"column":1}},"5":{"start":{"line":10,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":87}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":11}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":54}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":48}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":46}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"16":{"start":{"line":26,"column":2},"end":{"line":44,"column":4}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":20}},"18":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"19":{"start":{"line":30,"column":6},"end":{"line":30,"column":49}},"20":{"start":{"line":31,"column":6},"end":{"line":31,"column":13}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":20}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":12}},"23":{"start":{"line":38,"column":4},"end":{"line":43,"column":7}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":31}},"25":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"26":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"27":{"start":{"line":54,"column":2},"end":{"line":54,"column":62}},"28":{"start":{"line":59,"column":2},"end":{"line":59,"column":47}},"29":{"start":{"line":60,"column":2},"end":{"line":60,"column":26}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":25}},"31":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"32":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"33":{"start":{"line":65,"column":2},"end":{"line":65,"column":19}},"34":{"start":{"line":66,"column":2},"end":{"line":66,"column":27}},"35":{"start":{"line":68,"column":2},"end":{"line":83,"column":3}},"36":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"37":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"38":{"start":{"line":72,"column":6},"end":{"line":72,"column":13}},"39":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"40":{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},"41":{"start":{"line":79,"column":6},"end":{"line":79,"column":77}},"42":{"start":{"line":80,"column":6},"end":{"line":80,"column":14}},"43":{"start":{"line":81,"column":6},"end":{"line":81,"column":39}},"44":{"start":{"line":85,"column":2},"end":{"line":89,"column":3}},"45":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"46":{"start":{"line":87,"column":6},"end":{"line":87,"column":16}},"47":{"start":{"line":91,"column":2},"end":{"line":97,"column":3}},"48":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"49":{"start":{"line":93,"column":4},"end":{"line":93,"column":25}},"50":{"start":{"line":94,"column":4},"end":{"line":94,"column":37}},"51":{"start":{"line":95,"column":4},"end":{"line":95,"column":26}},"52":{"start":{"line":96,"column":4},"end":{"line":96,"column":29}},"53":{"start":{"line":99,"column":2},"end":{"line":106,"column":3}},"54":{"start":{"line":100,"column":4},"end":{"line":105,"column":5}},"55":{"start":{"line":101,"column":6},"end":{"line":101,"column":28}},"56":{"start":{"line":102,"column":6},"end":{"line":102,"column":40}},"57":{"start":{"line":104,"column":6},"end":{"line":104,"column":62}},"58":{"start":{"line":108,"column":2},"end":{"line":113,"column":3}},"59":{"start":{"line":109,"column":4},"end":{"line":109,"column":40}},"60":{"start":{"line":110,"column":4},"end":{"line":110,"column":20}},"61":{"start":{"line":111,"column":4},"end":{"line":111,"column":12}},"62":{"start":{"line":112,"column":4},"end":{"line":112,"column":36}},"63":{"start":{"line":115,"column":2},"end":{"line":124,"column":3}},"64":{"start":{"line":116,"column":4},"end":{"line":116,"column":38}},"65":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"66":{"start":{"line":119,"column":6},"end":{"line":119,"column":13}},"67":{"start":{"line":122,"column":4},"end":{"line":122,"column":12}},"68":{"start":{"line":123,"column":4},"end":{"line":123,"column":38}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":50,"column":43}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"6":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":12}},{"start":{"line":71,"column":16},"end":{"line":71,"column":24}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":36}},{"start":{"line":86,"column":40},"end":{"line":86,"column":70}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"11":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":12}},{"start":{"line":118,"column":16},"end":{"line":118,"column":24}}]}},"code":["'use strict';","","module.exports = jsonpRequest;","","var errors = require('../errors');","","var JSONPCounter = 0;","","function jsonpRequest(url, opts, cb) {","  if (opts.method !== 'GET') {","    cb(new Error('Method ' + opts.method + ' ' + url + ' is not supported by JSONP.'));","    return;","  }","","  opts.debug('JSONP: start');","","  var cbCalled = false;","  var timedOut = false;","","  JSONPCounter += 1;","  var head = document.getElementsByTagName('head')[0];","  var script = document.createElement('script');","  var cbName = 'algoliaJSONP_' + JSONPCounter;","  var done = false;","","  window[cbName] = function(data) {","    removeGlobals();","","    if (timedOut) {","      opts.debug('JSONP: Late answer, ignoring');","      return;","    }","","    cbCalled = true;","","    clean();","","    cb(null, {","      body: data/* ,","      // We do not send the statusCode, there's no statusCode in JSONP, it will be","      // computed using data.status && data.message like with XDR","      statusCode*/","    });","  };","","  // add callback by hand","  url += '&callback=' + cbName;","","  // add body params manually","  if (opts.jsonBody && opts.jsonBody.params) {","    url += '&' + opts.jsonBody.params;","  }","","  var ontimeout = setTimeout(timeout, opts.timeouts.complete);","","  // script onreadystatechange needed only for","  // <= IE8","  // https://github.com/angular/angular.js/issues/4523","  script.onreadystatechange = readystatechange;","  script.onload = success;","  script.onerror = error;","","  script.async = true;","  script.defer = true;","  script.src = url;","  head.appendChild(script);","","  function success() {","    opts.debug('JSONP: success');","","    if (done || timedOut) {","      return;","    }","","    done = true;","","    // script loaded but did not call the fn => script loading error","    if (!cbCalled) {","      opts.debug('JSONP: Fail. Script loaded but did not call the callback');","      clean();","      cb(new errors.JSONPScriptFail());","    }","  }","","  function readystatechange() {","    if (this.readyState === 'loaded' || this.readyState === 'complete') {","      success();","    }","  }","","  function clean() {","    clearTimeout(ontimeout);","    script.onload = null;","    script.onreadystatechange = null;","    script.onerror = null;","    head.removeChild(script);","  }","","  function removeGlobals() {","    try {","      delete window[cbName];","      delete window[cbName + '_loaded'];","    } catch (e) {","      window[cbName] = window[cbName + '_loaded'] = undefined;","    }","  }","","  function timeout() {","    opts.debug('JSONP: Script timeout');","    timedOut = true;","    clean();","    cb(new errors.RequestTimeout());","  }","","  function error() {","    opts.debug('JSONP: Script error');","","    if (done || timedOut) {","      return;","    }","","    clean();","    cb(new errors.JSONPScriptError());","  }","}",""],"l":{"3":1,"5":1,"7":1,"9":1,"10":0,"11":0,"12":0,"15":0,"17":0,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"29":0,"30":0,"31":0,"34":0,"36":0,"38":0,"47":0,"50":0,"51":0,"54":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"68":1,"69":0,"71":0,"72":0,"75":0,"78":0,"79":0,"80":0,"81":0,"85":1,"86":0,"87":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"99":1,"100":0,"101":0,"102":0,"104":0,"108":1,"109":0,"110":0,"111":0,"112":0,"115":1,"116":0,"118":0,"119":0,"122":0,"123":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/plugins/jquery.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/plugins/jquery.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":74}}},"branchMap":{},"code":["'use strict';","","// this file serves as a way to easily require the jQuery module","// in a commonJS way:","// require('algoliasearch/plugins/jquery');","module.exports = require('../src/browser/builds/algoliasearch.jquery.js');",""],"l":{"6":2}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/builds/algoliasearch.jquery.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/browser/builds/algoliasearch.jquery.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"algoliasearch","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":52}}},"2":{"name":"AlgoliaSearchJQuery","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":31}}},"3":{"name":"request","line":64,"loc":{"start":{"line":64,"column":41},"end":{"line":64,"column":69}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":24},"end":{"line":65,"column":43}}},"5":{"name":"onComplete","line":89,"loc":{"start":{"line":89,"column":16},"end":{"line":89,"column":67}}},"6":{"name":"requestFallback","line":117,"loc":{"start":{"line":117,"column":50},"end":{"line":117,"column":86}}},"7":{"name":"wrapJsonpRequest","line":120,"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":60}}},"8":{"name":"jsonpRequestDone","line":121,"loc":{"start":{"line":121,"column":28},"end":{"line":121,"column":68}}},"9":{"name":"reject","line":133,"loc":{"start":{"line":133,"column":10},"end":{"line":133,"column":31}}},"10":{"name":"rejectDeferred","line":134,"loc":{"start":{"line":134,"column":26},"end":{"line":134,"column":60}}},"11":{"name":"resolve","line":138,"loc":{"start":{"line":138,"column":11},"end":{"line":138,"column":33}}},"12":{"name":"resolveDeferred","line":139,"loc":{"start":{"line":139,"column":26},"end":{"line":139,"column":61}}},"13":{"name":"delay","line":143,"loc":{"start":{"line":143,"column":9},"end":{"line":143,"column":28}}},"14":{"name":"delayResolve","line":144,"loc":{"start":{"line":144,"column":26},"end":{"line":144,"column":58}}},"15":{"name":"resolveDeferred","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":44}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"8":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":44}},"10":{"start":{"line":22,"column":0},"end":{"line":36,"column":1}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":44}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":64}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}},"14":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":42}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":42}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":62}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":52}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":65}},"20":{"start":{"line":40,"column":0},"end":{"line":40,"column":49}},"21":{"start":{"line":44,"column":0},"end":{"line":47,"column":2}},"22":{"start":{"line":49,"column":0},"end":{"line":49,"column":22}},"23":{"start":{"line":51,"column":0},"end":{"line":55,"column":2}},"24":{"start":{"line":57,"column":0},"end":{"line":60,"column":1}},"25":{"start":{"line":59,"column":2},"end":{"line":59,"column":39}},"26":{"start":{"line":62,"column":0},"end":{"line":62,"column":45}},"27":{"start":{"line":64,"column":0},"end":{"line":113,"column":2}},"28":{"start":{"line":65,"column":2},"end":{"line":112,"column":15}},"29":{"start":{"line":66,"column":4},"end":{"line":66,"column":25}},"30":{"start":{"line":68,"column":4},"end":{"line":68,"column":43}},"31":{"start":{"line":70,"column":4},"end":{"line":72,"column":6}},"32":{"start":{"line":74,"column":4},"end":{"line":81,"column":5}},"33":{"start":{"line":75,"column":6},"end":{"line":80,"column":7}},"34":{"start":{"line":77,"column":8},"end":{"line":77,"column":77}},"35":{"start":{"line":79,"column":8},"end":{"line":79,"column":60}},"36":{"start":{"line":83,"column":4},"end":{"line":111,"column":7}},"37":{"start":{"line":90,"column":8},"end":{"line":93,"column":9}},"38":{"start":{"line":91,"column":10},"end":{"line":91,"column":55}},"39":{"start":{"line":92,"column":10},"end":{"line":92,"column":17}},"40":{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},"41":{"start":{"line":96,"column":10},"end":{"line":100,"column":12}},"42":{"start":{"line":101,"column":10},"end":{"line":101,"column":17}},"43":{"start":{"line":104,"column":8},"end":{"line":109,"column":11}},"44":{"start":{"line":117,"column":0},"end":{"line":130,"column":2}},"45":{"start":{"line":118,"column":2},"end":{"line":118,"column":41}},"46":{"start":{"line":120,"column":2},"end":{"line":129,"column":15}},"47":{"start":{"line":121,"column":4},"end":{"line":128,"column":7}},"48":{"start":{"line":122,"column":6},"end":{"line":125,"column":7}},"49":{"start":{"line":123,"column":8},"end":{"line":123,"column":29}},"50":{"start":{"line":124,"column":8},"end":{"line":124,"column":15}},"51":{"start":{"line":127,"column":6},"end":{"line":127,"column":32}},"52":{"start":{"line":132,"column":0},"end":{"line":150,"column":2}},"53":{"start":{"line":134,"column":4},"end":{"line":136,"column":17}},"54":{"start":{"line":135,"column":6},"end":{"line":135,"column":27}},"55":{"start":{"line":139,"column":4},"end":{"line":141,"column":17}},"56":{"start":{"line":140,"column":6},"end":{"line":140,"column":28}},"57":{"start":{"line":144,"column":4},"end":{"line":148,"column":17}},"58":{"start":{"line":145,"column":6},"end":{"line":147,"column":13}},"59":{"start":{"line":146,"column":8},"end":{"line":146,"column":27}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":0},"end":{"line":18,"column":0}},{"start":{"line":18,"column":0},"end":{"line":18,"column":0}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":19},"end":{"line":27,"column":23}},{"start":{"line":27,"column":27},"end":{"line":27,"column":29}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":41}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"9":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]}},"code":["'use strict';","","// This is the jQuery Algolia Search module","// It's using $.ajax to do requests with a JSONP fallback","// jQuery promises are returned","","var inherits = require('inherits');","","var AlgoliaSearch = require('../../AlgoliaSearch');","var errors = require('../../errors');","var inlineHeaders = require('../inline-headers');","var jsonpRequest = require('../jsonp-request');","var places = require('../../places.js');","","// expose original algoliasearch fn in window","window.algoliasearch = require('./algoliasearch');","","if (process.env.NODE_ENV === 'debug') {","  require('debug').enable('algoliasearch*');","}","","function algoliasearch(applicationID, apiKey, opts) {","  var cloneDeep = require('../../clone.js');","","  var getDocumentProtocol = require('../get-document-protocol');","","  opts = cloneDeep(opts || {});","","  if (opts.protocol === undefined) {","    opts.protocol = getDocumentProtocol();","  }","","  opts._ua = opts._ua || algoliasearch.ua;","","  return new AlgoliaSearchJQuery(applicationID, apiKey, opts);","}","","algoliasearch.version = require('../../version.js');","algoliasearch.ua = 'Algolia for jQuery ' + algoliasearch.version;","algoliasearch.initPlaces = places(algoliasearch);","","// we expose into window no matter how we are used, this will allow","// us to easily debug any website running algolia","window.__algolia = {","  debug: require('debug'),","  algoliasearch: algoliasearch","};","","var $ = window.jQuery;","","$.algolia = {","  Client: algoliasearch,","  ua: algoliasearch.ua,","  version: algoliasearch.version","};","","function AlgoliaSearchJQuery() {","  // call AlgoliaSearch constructor","  AlgoliaSearch.apply(this, arguments);","}","","inherits(AlgoliaSearchJQuery, AlgoliaSearch);","","AlgoliaSearchJQuery.prototype._request = function request(url, opts) {","  return new $.Deferred(function(deferred) {","    var body = opts.body;","","    url = inlineHeaders(url, opts.headers);","","    var requestHeaders = {","      accept: 'application/json'","    };","","    if (body) {","      if (opts.method === 'POST') {","        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Simple_requests","        requestHeaders['content-type'] = 'application/x-www-form-urlencoded';","      } else {","        requestHeaders['content-type'] = 'application/json';","      }","    }","","    $.ajax(url, {","      type: opts.method,","      timeout: opts.timeouts.complete,","      dataType: 'json',","      data: body,","      headers: requestHeaders,","      complete: function onComplete(jqXHR, textStatus/* , error*/) {","        if (textStatus === 'timeout') {","          deferred.reject(new errors.RequestTimeout());","          return;","        }","","        if (jqXHR.status === 0) {","          deferred.reject(","            new errors.Network({","              more: jqXHR","            })","          );","          return;","        }","","        deferred.resolve({","          statusCode: jqXHR.status,","          body: jqXHR.responseJSON,","          responseText: jqXHR.responseText,","          headers: jqXHR.getAllResponseHeaders()","        });","      }","    });","  }).promise();","};","","// using IE8 or IE9 we will always end up here","// jQuery does not not fallback to XDomainRequest","AlgoliaSearchJQuery.prototype._request.fallback = function requestFallback(url, opts) {","  url = inlineHeaders(url, opts.headers);","","  return new $.Deferred(function wrapJsonpRequest(deferred) {","    jsonpRequest(url, opts, function jsonpRequestDone(err, content) {","      if (err) {","        deferred.reject(err);","        return;","      }","","      deferred.resolve(content);","    });","  }).promise();","};","","AlgoliaSearchJQuery.prototype._promise = {","  reject: function reject(val) {","    return new $.Deferred(function rejectDeferred(deferred) {","      deferred.reject(val);","    }).promise();","  },","  resolve: function resolve(val) {","    return new $.Deferred(function resolveDeferred(deferred) {","      deferred.resolve(val);","    }).promise();","  },","  delay: function delay(ms) {","    return new $.Deferred(function delayResolve(deferred) {","      setTimeout(function resolveDeferred() {","        deferred.resolve();","      }, ms);","    }).promise();","  }","};",""],"l":{"7":2,"9":2,"10":2,"11":2,"12":2,"13":2,"16":2,"18":0,"19":0,"22":1,"23":0,"25":0,"27":0,"29":0,"30":0,"33":0,"35":0,"38":0,"39":0,"40":0,"44":0,"49":0,"51":0,"57":1,"59":0,"62":0,"64":0,"65":0,"66":0,"68":0,"70":0,"74":0,"75":0,"77":0,"79":0,"83":0,"90":0,"91":0,"92":0,"95":0,"96":0,"101":0,"104":0,"117":0,"118":0,"120":0,"121":0,"122":0,"123":0,"124":0,"127":0,"132":0,"134":0,"135":0,"139":0,"140":0,"144":0,"145":0,"146":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/reactnative.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/reactnative.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":82}}},"branchMap":{},"code":["'use strict';","","// Alias for the react native build of the client.","module.exports = require('./src/reactnative/builds/algoliasearch.reactnative.js');",""],"l":{"4":2}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/reactnative/builds/algoliasearch.reactnative.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/reactnative/builds/algoliasearch.reactnative.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"b":{"1":[2,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"algoliasearch","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}}},"2":{"name":"AlgoliaSearchReactNative","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"3":{"name":"request","line":58,"loc":{"start":{"line":58,"column":46},"end":{"line":58,"column":74}}},"4":{"name":"wrapRequest","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":59}}},"5":{"name":"load","line":96,"loc":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}}},"6":{"name":"error","line":130,"loc":{"start":{"line":130,"column":4},"end":{"line":130,"column":26}}},"7":{"name":"timeout","line":149,"loc":{"start":{"line":149,"column":4},"end":{"line":149,"column":23}}},"8":{"name":"rejectPromise","line":161,"loc":{"start":{"line":161,"column":10},"end":{"line":161,"column":38}}},"9":{"name":"resolvePromise","line":164,"loc":{"start":{"line":164,"column":11},"end":{"line":164,"column":40}}},"10":{"name":"delayPromise","line":167,"loc":{"start":{"line":167,"column":9},"end":{"line":167,"column":35}}},"11":{"name":"resolveOnTimeout","line":168,"loc":{"start":{"line":168,"column":23},"end":{"line":168,"column":71}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"8":{"start":{"line":16,"column":0},"end":{"line":34,"column":1}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":44}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":31}},"11":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"14":{"start":{"line":27,"column":2},"end":{"line":31,"column":4}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":67}},"16":{"start":{"line":36,"column":0},"end":{"line":36,"column":52}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":70}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":49}},"19":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"20":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"21":{"start":{"line":51,"column":0},"end":{"line":54,"column":1}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":39}},"23":{"start":{"line":56,"column":0},"end":{"line":56,"column":50}},"24":{"start":{"line":58,"column":0},"end":{"line":158,"column":2}},"25":{"start":{"line":59,"column":2},"end":{"line":157,"column":5}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":43}},"27":{"start":{"line":62,"column":4},"end":{"line":62,"column":25}},"28":{"start":{"line":63,"column":4},"end":{"line":63,"column":35}},"29":{"start":{"line":64,"column":4},"end":{"line":64,"column":18}},"30":{"start":{"line":65,"column":4},"end":{"line":65,"column":17}},"31":{"start":{"line":69,"column":4},"end":{"line":73,"column":5}},"32":{"start":{"line":70,"column":6},"end":{"line":70,"column":39}},"33":{"start":{"line":72,"column":6},"end":{"line":72,"column":33}},"34":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"35":{"start":{"line":76,"column":6},"end":{"line":76,"column":63}},"36":{"start":{"line":79,"column":4},"end":{"line":79,"column":22}},"37":{"start":{"line":80,"column":4},"end":{"line":80,"column":24}},"38":{"start":{"line":82,"column":4},"end":{"line":90,"column":5}},"39":{"start":{"line":85,"column":6},"end":{"line":85,"column":43}},"40":{"start":{"line":87,"column":6},"end":{"line":87,"column":30}},"41":{"start":{"line":89,"column":6},"end":{"line":89,"column":62}},"42":{"start":{"line":92,"column":4},"end":{"line":92,"column":19}},"43":{"start":{"line":96,"column":4},"end":{"line":128,"column":5}},"44":{"start":{"line":99,"column":6},"end":{"line":101,"column":7}},"45":{"start":{"line":100,"column":8},"end":{"line":100,"column":15}},"46":{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},"47":{"start":{"line":104,"column":8},"end":{"line":104,"column":32}},"48":{"start":{"line":107,"column":6},"end":{"line":107,"column":14}},"49":{"start":{"line":109,"column":6},"end":{"line":121,"column":7}},"50":{"start":{"line":110,"column":8},"end":{"line":116,"column":10}},"51":{"start":{"line":118,"column":8},"end":{"line":120,"column":11}},"52":{"start":{"line":123,"column":6},"end":{"line":127,"column":7}},"53":{"start":{"line":124,"column":8},"end":{"line":124,"column":20}},"54":{"start":{"line":126,"column":8},"end":{"line":126,"column":21}},"55":{"start":{"line":130,"column":4},"end":{"line":147,"column":5}},"56":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"57":{"start":{"line":132,"column":8},"end":{"line":132,"column":15}},"58":{"start":{"line":135,"column":6},"end":{"line":137,"column":7}},"59":{"start":{"line":136,"column":8},"end":{"line":136,"column":32}},"60":{"start":{"line":142,"column":6},"end":{"line":146,"column":8}},"61":{"start":{"line":149,"column":4},"end":{"line":156,"column":5}},"62":{"start":{"line":150,"column":6},"end":{"line":153,"column":7}},"63":{"start":{"line":151,"column":8},"end":{"line":151,"column":24}},"64":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"65":{"start":{"line":155,"column":6},"end":{"line":155,"column":42}},"66":{"start":{"line":160,"column":0},"end":{"line":172,"column":2}},"67":{"start":{"line":162,"column":4},"end":{"line":162,"column":31}},"68":{"start":{"line":165,"column":4},"end":{"line":165,"column":32}},"69":{"start":{"line":168,"column":4},"end":{"line":170,"column":7}},"70":{"start":{"line":169,"column":6},"end":{"line":169,"column":30}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":14},"end":{"line":9,"column":28}},{"start":{"line":9,"column":32},"end":{"line":9,"column":62}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":19},"end":{"line":19,"column":23}},{"start":{"line":19,"column":27},"end":{"line":19,"column":29}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":41}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":31}},{"start":{"line":27,"column":35},"end":{"line":31,"column":3}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"8":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"11":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":19},"end":{"line":115,"column":44}},{"start":{"line":115,"column":48},"end":{"line":115,"column":75}},{"start":{"line":115,"column":79},"end":{"line":115,"column":81}}]},"12":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"13":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"14":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"15":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]}},"code":["'use strict';","","// This is the standalone browser build entry point","// Browser implementation of the Algolia Search JavaScript client,","// using XMLHttpRequest for React Native","module.exports = algoliasearch;","","var inherits = require('inherits');","var Promise = window.Promise || require('es6-promise').Promise;","","var AlgoliaSearch = require('../../AlgoliaSearch');","var errors = require('../../errors');","var inlineHeaders = require('../../browser/inline-headers');","var places = require('../../places.js');","","function algoliasearch(applicationID, apiKey, opts) {","  var cloneDeep = require('../../clone.js');","","  opts = cloneDeep(opts || {});","","  if (opts.protocol === undefined) {","    opts.protocol = 'https:';","  }","","  opts._ua = opts._ua || algoliasearch.ua;","","  opts.timeouts = opts.timeouts || {","    connect: 2 * 1000,","    read: 3 * 1000,","    write: 30 * 1000","  };","","  return new AlgoliaSearchReactNative(applicationID, apiKey, opts);","}","","algoliasearch.version = require('../../version.js');","algoliasearch.ua = 'Algolia for ReactNative ' + algoliasearch.version;","algoliasearch.initPlaces = places(algoliasearch);","","// we expose into window no matter how we are used, this will allow","// us to easily debug any website running algolia","window.__algolia = {","  debug: require('debug'),","  algoliasearch: algoliasearch","};","","var support = {","  timeout: 'timeout' in new XMLHttpRequest()","};","","function AlgoliaSearchReactNative() {","  // call AlgoliaSearch constructor","  AlgoliaSearch.apply(this, arguments);","}","","inherits(AlgoliaSearchReactNative, AlgoliaSearch);","","AlgoliaSearchReactNative.prototype._request = function request(url, opts) {","  return new Promise(function wrapRequest(resolve, reject) {","    url = inlineHeaders(url, opts.headers);","","    var body = opts.body;","    var req = new XMLHttpRequest();","    var ontimeout;","    var timedOut;","","    // do not rely on default XHR async flag, as some analytics code like hotjar","    // breaks it and set it to false by default","    if (req instanceof XMLHttpRequest) {","      req.open(opts.method, url, true);","    } else {","      req.open(opts.method, url);","    }","","    if (body) {","      req.setRequestHeader('content-type', 'application/json');","    }","","    req.onload = load;","    req.onerror = error;","","    if (support.timeout) {","      // .timeout not supported at the time of this implementation. Maybe in the","      // future...","      req.timeout = opts.timeouts.complete;","","      req.ontimeout = timeout;","    } else {","      ontimeout = setTimeout(timeout, opts.timeouts.complete);","    }","","    req.send(body);","","    // event object not received in IE8, at least","    // but we do not use it, still important to note","    function load(/* event */) {","      // When browser does not supports req.timeout, we can","      // have both a load and timeout event, since handled by a dumb setTimeout","      if (timedOut) {","        return;","      }","","      if (!support.timeout) {","        clearTimeout(ontimeout);","      }","","      var out;","","      try {","        out = {","          body: JSON.parse(req.responseText),","          responseText: req.responseText,","          statusCode: req.status,","          // XDomainRequest does not have any response headers","          headers: req.getAllResponseHeaders && req.getAllResponseHeaders() || {}","        };","      } catch (e) {","        out = new errors.UnparsableJSON({","          more: req.responseText","        });","      }","","      if (out instanceof errors.UnparsableJSON) {","        reject(out);","      } else {","        resolve(out);","      }","    }","","    function error(event) {","      if (timedOut) {","        return;","      }","","      if (!support.timeout) {","        clearTimeout(ontimeout);","      }","","      // error event is trigerred both with XDR/XHR on:","      //   - DNS error","      //   - unallowed cross domain request","      reject(","        new errors.Network({","          more: event","        })","      );","    }","","    function timeout() {","      if (!support.timeout) {","        timedOut = true;","        req.abort();","      }","","      reject(new errors.RequestTimeout());","    }","  });","};","","AlgoliaSearchReactNative.prototype._promise = {","  reject: function rejectPromise(val) {","    return Promise.reject(val);","  },","  resolve: function resolvePromise(val) {","    return Promise.resolve(val);","  },","  delay: function delayPromise(ms) {","    return new Promise(function resolveOnTimeout(resolve/* , reject*/) {","      setTimeout(resolve, ms);","    });","  }","};",""],"l":{"6":2,"8":2,"9":2,"11":0,"12":0,"13":0,"14":0,"16":1,"17":0,"19":0,"21":0,"22":0,"25":0,"27":0,"33":0,"36":0,"37":0,"38":0,"42":0,"47":0,"51":1,"53":0,"56":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"69":0,"70":0,"72":0,"75":0,"76":0,"79":0,"80":0,"82":0,"85":0,"87":0,"89":0,"92":0,"96":1,"99":0,"100":0,"103":0,"104":0,"107":0,"109":0,"110":0,"118":0,"123":0,"124":0,"126":0,"130":1,"131":0,"132":0,"135":0,"136":0,"142":0,"149":1,"150":0,"151":0,"152":0,"155":0,"160":0,"162":0,"165":0,"168":0,"169":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/IndexBrowser.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/IndexBrowser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"IndexBrowser","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":30},"end":{"line":15,"column":41}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":41}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":32},"end":{"line":25,"column":46}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":33},"end":{"line":30,"column":51}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":43}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"6":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":16}},"9":{"start":{"line":20,"column":0},"end":{"line":23,"column":2}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":16}},"12":{"start":{"line":25,"column":0},"end":{"line":28,"column":2}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":16}},"15":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"17":{"start":{"line":34,"column":0},"end":{"line":39,"column":2}},"18":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"19":{"start":{"line":36,"column":2},"end":{"line":36,"column":33}},"20":{"start":{"line":37,"column":2},"end":{"line":37,"column":35}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}}},"branchMap":{},"code":["'use strict';","","// This is the object returned by the `index.browseAll()` method","","module.exports = IndexBrowser;","","var inherits = require('inherits');","var EventEmitter = require('events').EventEmitter;","","function IndexBrowser() {","}","","inherits(IndexBrowser, EventEmitter);","","IndexBrowser.prototype.stop = function() {","  this._stopped = true;","  this._clean();","};","","IndexBrowser.prototype._end = function() {","  this.emit('end');","  this._clean();","};","","IndexBrowser.prototype._error = function(err) {","  this.emit('error', err);","  this._clean();","};","","IndexBrowser.prototype._result = function(content) {","  this.emit('result', content);","};","","IndexBrowser.prototype._clean = function() {","  this.removeAllListeners('stop');","  this.removeAllListeners('end');","  this.removeAllListeners('error');","  this.removeAllListeners('result');","};",""],"l":{"5":1,"7":1,"8":1,"10":1,"13":1,"15":1,"16":0,"17":0,"20":1,"21":0,"22":0,"25":1,"26":0,"27":0,"30":1,"31":0,"34":1,"35":0,"36":0,"37":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/clone.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"clone","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":41}}},"branchMap":{},"code":["module.exports = function clone(obj) {","  return JSON.parse(JSON.stringify(obj));","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/map.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"map","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":39}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":15},"end":{"line":5,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":18}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":42}},"6":{"start":{"line":8,"column":2},"end":{"line":8,"column":16}}},"branchMap":{},"code":["var foreach = require('foreach');","","module.exports = function map(arr, fn) {","  var newArr = [];","  foreach(arr, function(item, itemIndex) {","    newArr.push(fn(item, itemIndex, arr));","  });","  return newArr;","};",""],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/merge.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/merge.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"merge","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":60}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":19},"end":{"line":6,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":54}},"4":{"start":{"line":6,"column":2},"end":{"line":16,"column":5}},"5":{"start":{"line":7,"column":4},"end":{"line":15,"column":5}},"6":{"start":{"line":8,"column":6},"end":{"line":14,"column":7}},"7":{"start":{"line":9,"column":8},"end":{"line":13,"column":9}},"8":{"start":{"line":10,"column":10},"end":{"line":10,"column":82}},"9":{"start":{"line":11,"column":15},"end":{"line":13,"column":9}},"10":{"start":{"line":12,"column":10},"end":{"line":12,"column":49}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":6}},{"start":{"line":8,"column":6},"end":{"line":8,"column":6}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]},"3":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":52}},{"start":{"line":9,"column":56},"end":{"line":9,"column":91}}]},"4":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":15}},{"start":{"line":11,"column":15},"end":{"line":11,"column":15}}]}},"code":["var foreach = require('foreach');","","module.exports = function merge(destination/* , sources */) {","  var sources = Array.prototype.slice.call(arguments);","","  foreach(sources, function(source) {","    for (var keyName in source) {","      if (source.hasOwnProperty(keyName)) {","        if (typeof destination[keyName] === 'object' && typeof source[keyName] === 'object') {","          destination[keyName] = merge({}, destination[keyName], source[keyName]);","        } else if (source[keyName] !== undefined) {","          destination[keyName] = source[keyName];","        }","      }","    }","  });","","  return destination;","};",""],"l":{"1":1,"3":1,"4":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/omit.js":{"path":"/home/travis/build/npmtest/node-npmtest-algoliasearch/node_modules/algoliasearch/src/omit.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"omit","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":42}}},"2":{"name":"doFilter","line":7,"loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":35}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":20}},"5":{"start":{"line":7,"column":2},"end":{"line":11,"column":5}},"6":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"7":{"start":{"line":9,"column":6},"end":{"line":9,"column":39}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":18}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["module.exports = function omit(obj, test) {","  var keys = require('object-keys');","  var foreach = require('foreach');","","  var filtered = {};","","  foreach(keys(obj), function doFilter(keyName) {","    if (test(keyName) !== true) {","      filtered[keyName] = obj[keyName];","    }","  });","","  return filtered;","};",""],"l":{"1":1,"2":0,"3":0,"5":0,"7":0,"8":0,"9":0,"13":0}}}